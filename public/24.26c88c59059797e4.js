"use strict";(self.webpackChunktailwind=self.webpackChunktailwind||[]).push([[24],{9024:(S,u,a)=>{a.r(u),a.d(u,{ZonelessApplicationsComponent:()=>l});var r=a(6895),g=a(827),c=a(8512),e=a(8256),Z=a(529);const d=["notesRef"],_=["bestRef"],m=["prosConsRef"],A=["topicsRef"];function U(t,i){1&t&&e.GkF(0)}function h(t,i){if(1&t&&(e.TgZ(0,"div"),e.YNc(1,U,1,0,"ng-container",15),e.qZA()),2&t){e.oxw();const n=e.MAs(28);e.xp6(1),e.Q6J("ngTemplateOutlet",n)}}function q(t,i){1&t&&e.GkF(0)}function T(t,i){if(1&t&&(e.TgZ(0,"div"),e.YNc(1,q,1,0,"ng-container",15),e.qZA()),2&t){e.oxw();const n=e.MAs(30);e.xp6(1),e.Q6J("ngTemplateOutlet",n)}}function f(t,i){1&t&&e.GkF(0)}function b(t,i){if(1&t&&(e.TgZ(0,"div"),e.YNc(1,f,1,0,"ng-container",15),e.qZA()),2&t){e.oxw();const n=e.MAs(32);e.xp6(1),e.Q6J("ngTemplateOutlet",n)}}function v(t,i){1&t&&e.GkF(0)}function C(t,i){if(1&t&&(e.TgZ(0,"div"),e.YNc(1,v,1,0,"ng-container",15),e.qZA()),2&t){e.oxw();const n=e.MAs(26);e.xp6(1),e.Q6J("ngTemplateOutlet",n)}}const p=function(){return["typescript"]};function y(t,i){if(1&t){const n=e.EpF();e.TgZ(0,"p"),e._uU(1,"What are Zoneless Applications?"),e.qZA(),e.TgZ(2,"ul",16)(3,"li")(4,"strong"),e._uU(5,"No Zone.js Dependency"),e.qZA(),e._uU(6,": Angular applications that run without Zone.js, eliminating the automatic change detection it provides. "),e.qZA(),e.TgZ(7,"li")(8,"strong"),e._uU(9,"Explicit Change Detection"),e.qZA(),e._uU(10,": Applications where change detection must be triggered explicitly or through reactive primitives like signals. "),e.qZA(),e.TgZ(11,"li")(12,"strong"),e._uU(13,"Performance Benefits"),e.qZA(),e._uU(14,": Improved performance through fewer change detection cycles, reduced bundle size, and lower memory usage. "),e.qZA(),e.TgZ(15,"li")(16,"strong"),e._uU(17,"Modern Angular Pattern"),e.qZA(),e._uU(18,": Part of Angular's modern architecture focusing on fine-grained reactivity and developer control. "),e.qZA()(),e._UZ(19,"br")(20,"br"),e.TgZ(21,"p"),e._uU(22,"Basic Zoneless Application Setup"),e.qZA(),e.TgZ(23,"button",17),e.NdJ("click",function(){e.CHM(n);const s=e.MAs(26);return e.KtG(s.hidden=!s.hidden)}),e._uU(24,"code"),e.qZA(),e.TgZ(25,"span",18,19)(27,"div",20)(28,"span"),e._uU(29,"typescript"),e.qZA(),e._UZ(30,"span",21),e.qZA(),e.TgZ(31,"pre"),e._uU(32,"      "),e.TgZ(33,"code",22),e._uU(34,"\n      "),e.qZA(),e._uU(35,"\n    "),e.qZA()(),e._UZ(36,"br")(37,"br"),e.TgZ(38,"p"),e._uU(39,"Manual Change Detection in Zoneless Apps"),e.qZA(),e.TgZ(40,"button",17),e.NdJ("click",function(){e.CHM(n);const s=e.MAs(43);return e.KtG(s.hidden=!s.hidden)}),e._uU(41,"code"),e.qZA(),e.TgZ(42,"span",18,23)(44,"div",20)(45,"span"),e._uU(46,"typescript"),e.qZA(),e._UZ(47,"span",21),e.qZA(),e.TgZ(48,"pre"),e._uU(49,"      "),e.TgZ(50,"code",22),e._uU(51,"\n      "),e.qZA(),e._uU(52,"\n    "),e.qZA()(),e._UZ(53,"br")(54,"br"),e.TgZ(55,"p"),e._uU(56,"Signal-Based Reactivity in Zoneless Apps"),e.qZA(),e.TgZ(57,"button",17),e.NdJ("click",function(){e.CHM(n);const s=e.MAs(60);return e.KtG(s.hidden=!s.hidden)}),e._uU(58,"code"),e.qZA(),e.TgZ(59,"span",18,24)(61,"div",20)(62,"span"),e._uU(63,"typescript"),e.qZA(),e._UZ(64,"span",21),e.qZA(),e.TgZ(65,"pre"),e._uU(66,"      "),e.TgZ(67,"code",22),e._uU(68,"\n      "),e.qZA(),e._uU(69,"\n    "),e.qZA()(),e._UZ(70,"br")(71,"br"),e.TgZ(72,"p"),e._uU(73,"Angular 19 Zoneless Enhancements"),e.qZA(),e.TgZ(74,"button",17),e.NdJ("click",function(){e.CHM(n);const s=e.MAs(77);return e.KtG(s.hidden=!s.hidden)}),e._uU(75,"code"),e.qZA(),e.TgZ(76,"span",18,25)(78,"div",20)(79,"span"),e._uU(80,"typescript"),e.qZA(),e._UZ(81,"span",21),e.qZA(),e.TgZ(82,"pre"),e._uU(83,"      "),e.TgZ(84,"code",22),e._uU(85,"\n      "),e.qZA(),e._uU(86,"\n    "),e.qZA()(),e._UZ(87,"br")(88,"br"),e.TgZ(89,"p"),e._uU(90,"Key Features of Zoneless Applications in Angular 19"),e.qZA(),e.TgZ(91,"ol",26)(92,"li")(93,"strong"),e._uU(94,"Simplified Setup"),e.qZA(),e._uU(95,": "),e.TgZ(96,"ul",27)(97,"li"),e._uU(98,"New "),e.TgZ(99,"code"),e._uU(100,"provideZonelessChangeDetection()"),e.qZA(),e._uU(101," function for easy zoneless application configuration"),e.qZA(),e.TgZ(102,"li"),e._uU(103,"Automatic integration with Angular's build tools to exclude Zone.js from the bundle"),e.qZA(),e.TgZ(104,"li"),e._uU(105,"Clear error messages when attempting to use Zone-dependent features in zoneless mode"),e.qZA()()(),e.TgZ(106,"li")(107,"strong"),e._uU(108,"Signals Integration"),e.qZA(),e._uU(109,": "),e.TgZ(110,"ul",27)(111,"li"),e._uU(112,"Seamless integration with Signal-based components for automatic UI updates"),e.qZA(),e.TgZ(113,"li"),e._uU(114,"Support for signal-based inputs, outputs, and view queries in zoneless applications"),e.qZA(),e.TgZ(115,"li"),e._uU(116,"Optimized change propagation paths that minimize unnecessary DOM updates"),e.qZA()()(),e.TgZ(117,"li")(118,"strong"),e._uU(119,"Performance Optimizations"),e.qZA(),e._uU(120,": "),e.TgZ(121,"ul",27)(122,"li"),e._uU(123,"Smaller bundle size without Zone.js (~45KB reduction)"),e.qZA(),e.TgZ(124,"li"),e._uU(125,"Lower memory usage due to fewer event listeners and change detection cycles"),e.qZA(),e.TgZ(126,"li"),e._uU(127,"Improved startup time without Zone.js initialization overhead"),e.qZA()()(),e.TgZ(128,"li")(129,"strong"),e._uU(130,"Developer Experience"),e.qZA(),e._uU(131,": "),e.TgZ(132,"ul",27)(133,"li"),e._uU(134,"Improved debugging experience with clearer component update tracking"),e.qZA(),e.TgZ(135,"li"),e._uU(136,"DevTools support for visualizing signal-based updates in zoneless applications"),e.qZA(),e.TgZ(137,"li"),e._uU(138,"Better TypeScript integration with type-safe signal APIs"),e.qZA()()(),e.TgZ(139,"li")(140,"strong"),e._uU(141,"Integration with Other Angular 19 Features"),e.qZA(),e._uU(142,": "),e.TgZ(143,"ul",27)(144,"li"),e._uU(145,"Works perfectly with built-in control flow for reactive template updates"),e.qZA(),e.TgZ(146,"li"),e._uU(147,"Compatible with partial hydration for optimized server-rendered applications"),e.qZA(),e.TgZ(148,"li"),e._uU(149,"Can be combined with deferrable views for maximum performance optimizations"),e.qZA()()()(),e._UZ(150,"br")(151,"br"),e.TgZ(152,"p"),e._uU(153,"Performance Comparison: Zoneless vs Zone-based Applications"),e.qZA(),e.TgZ(154,"table",28)(155,"thead")(156,"tr",29)(157,"th",30),e._uU(158,"Metric"),e.qZA(),e.TgZ(159,"th",30),e._uU(160,"Zoneless Apps"),e.qZA(),e.TgZ(161,"th",30),e._uU(162,"Zone-based Apps"),e.qZA()()(),e.TgZ(163,"tbody")(164,"tr",31)(165,"td",32),e._uU(166,"Bundle Size"),e.qZA(),e.TgZ(167,"td",32),e._uU(168,"Smaller (~45KB less)"),e.qZA(),e.TgZ(169,"td",32),e._uU(170,"Larger (includes Zone.js)"),e.qZA()(),e.TgZ(171,"tr",33)(172,"td",32),e._uU(173,"Initial Load Time"),e.qZA(),e.TgZ(174,"td",32),e._uU(175,"15-25% faster"),e.qZA(),e.TgZ(176,"td",32),e._uU(177,"Slower due to Zone setup"),e.qZA()(),e.TgZ(178,"tr",31)(179,"td",32),e._uU(180,"Memory Usage"),e.qZA(),e.TgZ(181,"td",32),e._uU(182,"Up to 30% lower"),e.qZA(),e.TgZ(183,"td",32),e._uU(184,"Higher due to Zone tracking"),e.qZA()(),e.TgZ(185,"tr",34)(186,"td",32),e._uU(187,"Change Detection"),e.qZA(),e.TgZ(188,"td",32),e._uU(189,"Explicit, fine-grained"),e.qZA(),e.TgZ(190,"td",32),e._uU(191,"Automatic, but often redundant"),e.qZA()()()()}if(2&t){const n=e.oxw();e.xp6(33),e.Q6J("highlight",n.basicZonelessAppCode)("languages",e.DdM(8,p)),e.xp6(17),e.Q6J("highlight",n.manualChangeDetectionCode)("languages",e.DdM(9,p)),e.xp6(17),e.Q6J("highlight",n.signalBasedZonelessCode)("languages",e.DdM(10,p)),e.xp6(17),e.Q6J("highlight",n.v19EnhancementsCode)("languages",e.DdM(11,p))}}function w(t,i){1&t&&(e.TgZ(0,"ol",35)(1,"li")(2,"strong",36),e._uU(3,"Use Signal-Based Components"),e.qZA(),e.TgZ(4,"ul",27)(5,"li")(6,"strong"),e._uU(7,"Prefer Signal Components"),e.qZA(),e._uU(8,": Use signal-based components for automatic UI updates without Zone.js. "),e.qZA(),e.TgZ(9,"li")(10,"strong"),e._uU(11,"Input/Output Signals"),e.qZA(),e._uU(12,": Use input and output signals for component communication. "),e.qZA(),e.TgZ(13,"li")(14,"strong"),e._uU(15,"Computed for Derived State"),e.qZA(),e._uU(16,": Use computed signals for derived state to avoid manual calculations. "),e.qZA()()(),e.TgZ(17,"li")(18,"strong",36),e._uU(19,"Manage Change Detection Carefully"),e.qZA(),e.TgZ(20,"ul",27)(21,"li")(22,"strong"),e._uU(23,"Be Explicit"),e.qZA(),e._uU(24,": For non-signal components, always be explicit about when change detection needs to run. "),e.qZA(),e.TgZ(25,"li")(26,"strong"),e._uU(27,"Batch Updates"),e.qZA(),e._uU(28,": Group related state changes to trigger change detection only once. "),e.qZA(),e.TgZ(29,"li")(30,"strong"),e._uU(31,"Use DetectChanges Strategically"),e.qZA(),e._uU(32,": Call detectChanges() only when necessary and at the right component level. "),e.qZA()()(),e.TgZ(33,"li")(34,"strong",36),e._uU(35,"Optimize for Zoneless Mode"),e.qZA(),e.TgZ(36,"ul",27)(37,"li")(38,"strong"),e._uU(39,"Avoid Zone-dependent APIs"),e.qZA(),e._uU(40,": Stay away from APIs that rely on Zone.js like NgZone.run(). "),e.qZA(),e.TgZ(41,"li")(42,"strong"),e._uU(43,"Replace setTimeout/setInterval"),e.qZA(),e._uU(44,": Use signal-based alternatives or manual change detection with these APIs. "),e.qZA(),e.TgZ(45,"li")(46,"strong"),e._uU(47,"HTTP Request Handling"),e.qZA(),e._uU(48,": Explicitly update UI after HTTP requests complete. "),e.qZA()()(),e.TgZ(49,"li")(50,"strong",36),e._uU(51,"Combine with Other Performance Techniques"),e.qZA(),e.TgZ(52,"ul",27)(53,"li")(54,"strong"),e._uU(55,"Use with OnPush"),e.qZA(),e._uU(56,": Combine zoneless applications with OnPush strategy for maximum performance. "),e.qZA(),e.TgZ(57,"li")(58,"strong"),e._uU(59,"Implement Partial Hydration"),e.qZA(),e._uU(60,": Use partial hydration with zoneless applications for optimized SSR performance. "),e.qZA(),e.TgZ(61,"li")(62,"strong"),e._uU(63,"Leverage Deferrable Views"),e.qZA(),e._uU(64,": Use deferrable views to further optimize loading performance. "),e.qZA()()(),e.TgZ(65,"li")(66,"strong",36),e._uU(67,"Testing and Debugging"),e.qZA(),e.TgZ(68,"ul",27)(69,"li")(70,"strong"),e._uU(71,"ComponentFixture.detectChanges"),e.qZA(),e._uU(72,": Use ComponentFixture.detectChanges() explicitly in tests. "),e.qZA(),e.TgZ(73,"li")(74,"strong"),e._uU(75,"Angular DevTools"),e.qZA(),e._uU(76,": Use Angular DevTools to visualize component updates in zoneless mode. "),e.qZA(),e.TgZ(77,"li")(78,"strong"),e._uU(79,"Performance Monitoring"),e.qZA(),e._uU(80,": Regularly measure performance metrics to ensure zoneless mode provides benefits. "),e.qZA()()()())}function x(t,i){1&t&&(e.TgZ(0,"strong",36),e._uU(1," Pros: "),e.qZA(),e._UZ(2,"br"),e.TgZ(3,"ol",37)(4,"li")(5,"strong"),e._uU(6,"Performance Improvements"),e.qZA(),e.TgZ(7,"ul",27)(8,"li")(9,"span",3),e._uU(10,"Smaller Bundle Size"),e.qZA(),e._uU(11,": Removing Zone.js reduces the application bundle by approximately 45KB. "),e.qZA(),e.TgZ(12,"li")(13,"span",3),e._uU(14,"Reduced Memory Usage"),e.qZA(),e._uU(15,": Less memory consumption without Zone.js's event tracking overhead. "),e.qZA(),e.TgZ(16,"li")(17,"span",3),e._uU(18,"Faster Startup Time"),e.qZA(),e._uU(19,": Applications initialize more quickly without Zone.js setup time. "),e.qZA()()(),e.TgZ(20,"li")(21,"strong"),e._uU(22,"Fine-Grained Change Detection"),e.qZA(),e.TgZ(23,"ul",27)(24,"li")(25,"span",3),e._uU(26,"Explicit Control"),e.qZA(),e._uU(27,": Precise control over when change detection runs, eliminating unnecessary cycles. "),e.qZA(),e.TgZ(28,"li")(29,"span",3),e._uU(30,"Signal-Based Updates"),e.qZA(),e._uU(31,": When using signals, only affected parts of the UI update, not the entire component tree. "),e.qZA(),e.TgZ(32,"li")(33,"span",3),e._uU(34,"Optimized Rendering"),e.qZA(),e._uU(35,": Reduced work for the browser with fewer DOM updates and style recalculations. "),e.qZA()()(),e.TgZ(36,"li")(37,"strong"),e._uU(38,"Angular 19 Specific Benefits"),e.qZA(),e.TgZ(39,"ul",27)(40,"li")(41,"span",3),e._uU(42,"Easy Configuration"),e.qZA(),e._uU(43,": New "),e.TgZ(44,"code"),e._uU(45,"provideZonelessChangeDetection()"),e.qZA(),e._uU(46," makes setup simpler. "),e.qZA(),e.TgZ(47,"li")(48,"span",3),e._uU(49,"Signal Component Integration"),e.qZA(),e._uU(50,": Seamless integration with signal-based components for automatic UI updates. "),e.qZA(),e.TgZ(51,"li")(52,"span",3),e._uU(53,"Built-in Control Flow"),e.qZA(),e._uU(54,": Works perfectly with Angular's new control flow directives for reactive templates. "),e.qZA()()(),e.TgZ(55,"li")(56,"strong"),e._uU(57,"Developer Experience"),e.qZA(),e.TgZ(58,"ul",27)(59,"li")(60,"span",3),e._uU(61,"Clearer Mental Model"),e.qZA(),e._uU(62,": Explicit change detection creates a more predictable application behavior. "),e.qZA(),e.TgZ(63,"li")(64,"span",3),e._uU(65,"Better Debugging"),e.qZA(),e._uU(66,": Easier to debug UI updates as they happen only when explicitly triggered. "),e.qZA(),e.TgZ(67,"li")(68,"span",3),e._uU(69,"Improved Tooling"),e.qZA(),e._uU(70,": Enhanced DevTools support for visualizing signal-based updates. "),e.qZA()()()(),e._UZ(71,"br")(72,"br"),e.TgZ(73,"strong",36),e._uU(74," Cons: "),e.qZA(),e._UZ(75,"br"),e.TgZ(76,"ol",37)(77,"li")(78,"strong"),e._uU(79,"Learning Curve"),e.qZA(),e.TgZ(80,"ul",27)(81,"li")(82,"span",3),e._uU(83,"New Mental Model"),e.qZA(),e._uU(84,": Requires a different approach to thinking about change detection. "),e.qZA(),e.TgZ(85,"li")(86,"span",3),e._uU(87,"Explicit Updates"),e.qZA(),e._uU(88,": Developers must remember to trigger change detection where needed. "),e.qZA(),e.TgZ(89,"li")(90,"span",3),e._uU(91,"Migration Effort"),e.qZA(),e._uU(92,": Converting existing Zone-based applications requires careful refactoring. "),e.qZA()()(),e.TgZ(93,"li")(94,"strong"),e._uU(95,"Integration Challenges"),e.qZA(),e.TgZ(96,"ul",27)(97,"li")(98,"span",3),e._uU(99,"Third-Party Libraries"),e.qZA(),e._uU(100,": Some libraries may assume Zone.js is present and require adaptation. "),e.qZA(),e.TgZ(101,"li")(102,"span",3),e._uU(103,"Event Handling"),e.qZA(),e._uU(104,": Non-Angular event handlers need manual change detection calls. "),e.qZA(),e.TgZ(105,"li")(106,"span",3),e._uU(107,"Asynchronous Operations"),e.qZA(),e._uU(108,": Operations like setTimeout or AJAX calls need explicit UI updates. "),e.qZA()()(),e.TgZ(109,"li")(110,"strong"),e._uU(111,"Potential Pitfalls"),e.qZA(),e.TgZ(112,"ul",27)(113,"li")(114,"span",3),e._uU(115,"Missing Updates"),e.qZA(),e._uU(116,": Forgetting to trigger change detection leads to stale UI. "),e.qZA(),e.TgZ(117,"li")(118,"span",3),e._uU(119,"Excessive Manual Calls"),e.qZA(),e._uU(120,": Overcompensating with too many detectChanges() calls hurts performance. "),e.qZA(),e.TgZ(121,"li")(122,"span",3),e._uU(123,"Debugging Complexity"),e.qZA(),e._uU(124,": When updates are missing, finding where change detection should have been triggered can be challenging. "),e.qZA()()(),e.TgZ(125,"li")(126,"strong"),e._uU(127,"Team Considerations"),e.qZA(),e.TgZ(128,"ul",27)(129,"li")(130,"span",3),e._uU(131,"Training Requirements"),e.qZA(),e._uU(132,": Team members need to understand zoneless principles for effective development. "),e.qZA(),e.TgZ(133,"li")(134,"span",3),e._uU(135,"Codebase Consistency"),e.qZA(),e._uU(136,": Maintaining consistent patterns for change detection across the codebase. "),e.qZA(),e.TgZ(137,"li")(138,"span",3),e._uU(139,"Transition Period"),e.qZA(),e._uU(140,": During migration, managing both Zone-based and zoneless components can be complex. "),e.qZA()()()())}function D(t,i){1&t&&(e.TgZ(0,"ol",37)(1,"li")(2,"strong"),e._uU(3,"Zone.js"),e.qZA(),e.TgZ(4,"ul",27)(5,"li")(6,"strong",36),e._uU(7,"Description"),e.qZA(),e._uU(8,": A library that intercepts and keeps track of asynchronous operations, enabling automatic change detection in Angular. "),e.qZA(),e.TgZ(9,"li")(10,"strong",36),e._uU(11,"Relation to Zoneless"),e.qZA(),e._uU(12,": Zoneless applications completely remove this dependency, requiring explicit change detection instead. "),e.qZA()()(),e.TgZ(13,"li")(14,"strong"),e._uU(15,"Change Detection"),e.qZA(),e.TgZ(16,"ul",27)(17,"li")(18,"strong",36),e._uU(19,"Description"),e.qZA(),e._uU(20,": Angular's mechanism for updating the DOM based on changes to component data. "),e.qZA(),e.TgZ(21,"li")(22,"strong",36),e._uU(23,"Relation to Zoneless"),e.qZA(),e._uU(24,": In zoneless applications, change detection must be triggered explicitly or through signals rather than automatically. "),e.qZA()()(),e.TgZ(25,"li")(26,"strong"),e._uU(27,"Signal-Based Components"),e.qZA(),e.TgZ(28,"ul",27)(29,"li")(30,"strong",36),e._uU(31,"Description"),e.qZA(),e._uU(32,": Components built using Angular's signals system for fine-grained reactivity. "),e.qZA(),e.TgZ(33,"li")(34,"strong",36),e._uU(35,"Relation to Zoneless"),e.qZA(),e._uU(36,": Signal-based components work perfectly in zoneless mode, providing automatic UI updates without Zone.js. "),e.qZA()()(),e.TgZ(37,"li")(38,"strong"),e._uU(39,"Partial Hydration"),e.qZA(),e.TgZ(40,"ul",27)(41,"li")(42,"strong",36),e._uU(43,"Description"),e.qZA(),e._uU(44,": Technique to selectively hydrate server-rendered components based on need. "),e.qZA(),e.TgZ(45,"li")(46,"strong",36),e._uU(47,"Relation to Zoneless"),e.qZA(),e._uU(48,": Partial hydration works well with zoneless applications for maximum server-side rendering performance. "),e.qZA()()(),e.TgZ(49,"li")(50,"strong"),e._uU(51,"Built-in Control Flow"),e.qZA(),e.TgZ(52,"ul",27)(53,"li")(54,"strong",36),e._uU(55,"Description"),e.qZA(),e._uU(56,": Angular's new template syntax for conditional rendering, loops, and deferred content. "),e.qZA(),e.TgZ(57,"li")(58,"strong",36),e._uU(59,"Relation to Zoneless"),e.qZA(),e._uU(60,": Control flow directives integrate seamlessly with signal-based zoneless applications for reactive templates. "),e.qZA()()(),e.TgZ(61,"li")(62,"strong"),e._uU(63,"Performance Optimization"),e.qZA(),e.TgZ(64,"ul",27)(65,"li")(66,"strong",36),e._uU(67,"Description"),e.qZA(),e._uU(68,": Techniques to improve application speed, responsiveness, and resource usage. "),e.qZA(),e.TgZ(69,"li")(70,"strong",36),e._uU(71,"Relation to Zoneless"),e.qZA(),e._uU(72,": Zoneless applications are primarily about performance optimization, reducing bundle size and execution overhead. "),e.qZA()()(),e.TgZ(73,"li")(74,"strong"),e._uU(75,"Server-Side Rendering (SSR)"),e.qZA(),e.TgZ(76,"ul",27)(77,"li")(78,"strong",36),e._uU(79,"Description"),e.qZA(),e._uU(80,": Pre-rendering Angular applications on the server for improved initial load. "),e.qZA(),e.TgZ(81,"li")(82,"strong",36),e._uU(83,"Relation to Zoneless"),e.qZA(),e._uU(84,": Zoneless applications can significantly improve SSR performance by reducing JavaScript execution time. "),e.qZA()()()())}class l extends c.Y{constructor(i){super(),this.http=i,this.selectedTab=1,this.basicZonelessAppCode="// main.ts - Bootstrap without Zone.js\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\n\n// Configure the application without Zone.js\nbootstrapApplication(AppComponent, {\n  ...appConfig,\n  providers: [\n    ...appConfig.providers,\n    { provide: NgZone, useValue: new NoopNgZone() }\n  ]\n}).catch(err => console.error(err));",this.manualChangeDetectionCode="// Component using manual change detection\nimport { Component, ChangeDetectorRef, inject } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  standalone: true,\n  template: `\n    <div>\n      <h2>Counter: {{ count }}</h2>\n      <button (click)=\"increment()\">Increment</button>\n    </div>\n  `\n})\nexport class CounterComponent {\n  count = 0;\n  private cdr = inject(ChangeDetectorRef);\n\n  increment() {\n    this.count++;\n\n    // Manually trigger change detection after updating state\n    this.cdr.detectChanges();\n  }\n}",this.signalBasedZonelessCode="// Signal-based component in zoneless application\nimport { Component, signal, computed, effect, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  template: `\n    <div>\n      <h2>User Profile</h2>\n      @if (isLoading()) {\n        <p>Loading...</p>\n      } @else {\n        <div>\n          <h3>{{ userName() }}</h3>\n          <p>Email: {{ userEmail() }}</p>\n        </div>\n      }\n      <button (click)=\"refresh()\">Refresh</button>\n    </div>\n  `\n})\nexport class UserProfileComponent {\n  private http = inject(HttpClient);\n\n  // State signals\n  private userData = signal<any>(null);\n  isLoading = signal(true);\n\n  // Derived state with computed signals\n  userName = computed(() => this.userData()?.name || 'Unknown');\n  userEmail = computed(() => this.userData()?.email || 'No email');\n\n  constructor() {\n    // Load initial data\n    this.loadUserData();\n  }\n\n  loadUserData() {\n    this.isLoading.set(true);\n\n    this.http.get('https://api.example.com/user/1')\n      .subscribe({\n        next: (data) => {\n          this.userData.set(data);\n          this.isLoading.set(false);\n        },\n        error: (err) => {\n          console.error('Failed to load user data', err);\n          this.isLoading.set(false);\n        }\n      });\n  }\n\n  refresh() {\n    this.loadUserData();\n  }\n}",this.v19EnhancementsCode="// Angular 19 Zoneless Enhancements\n\n// 1. Application config with zoneless setup\nimport { ApplicationConfig } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { provideHttpClient } from '@angular/common/http';\nimport { provideZonelessChangeDetection } from '@angular/core';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter([/* routes */]),\n    provideHttpClient(),\n    // New in Angular 19: Easy zoneless setup\n    provideZonelessChangeDetection()\n  ]\n};\n\n// 2. Component with automatic change detection via signals\nimport { Component, signal, computed, effect } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  template: `\n    <div>\n      <h1>Dashboard</h1>\n      <p>Status: {{ status() }}</p>\n      <button (click)=\"updateStatus()\">Update</button>\n\n      \x3c!-- Automatic rendering with control flow --\x3e\n      @for (item of items(); track item.id) {\n        <div>{{ item.name }}</div>\n      }\n    </div>\n  `\n})\nexport class DashboardComponent {\n  // State managed with signals\n  status = signal('Online');\n  items = signal([\n    { id: 1, name: 'Item 1' },\n    { id: 2, name: 'Item 2' }\n  ]);\n\n  // Signal-based methods trigger automatic UI updates\n  updateStatus() {\n    this.status.set('Updated: ' + new Date().toLocaleTimeString());\n\n    // Add a new item\n    this.items.update(items => [\n      ...items,\n      { id: items.length + 1, name: `Item ${items.length + 1}` }\n    ]);\n\n    // No manual change detection needed!\n  }\n}"}ngOnInit(){}}l.\u0275fac=function(i){return new(i||l)(e.Y36(Z.eN))},l.\u0275cmp=e.Xpm({type:l,selectors:[["app-zoneless-applications"]],viewQuery:function(i,n){if(1&i&&(e.Gf(d,5),e.Gf(_,5),e.Gf(m,5),e.Gf(A,5)),2&i){let o;e.iGM(o=e.CRH())&&(n.notesRef=o.first),e.iGM(o=e.CRH())&&(n.bestRef=o.first),e.iGM(o=e.CRH())&&(n.prosConsRef=o.first),e.iGM(o=e.CRH())&&(n.topicsRef=o.first)}},standalone:!0,features:[e.qOj,e.jDz],decls:33,vars:12,consts:[[1,"p-4","text-sm"],[1,"heading-1","mb-2"],[1,"text-content"],[1,"text-zinc-50","tw-font-medium"],[1,"flex","flex-col"],[1,"flex","border-b","border-gray-200"],[1,"text-sky-400","hover:text-rose-400","font-semibold","py-2","px-4","border-b-2","border-transparent","hover:border-gray-500","focus:outline-none",3,"click"],[1,"p-4"],[3,"ngSwitch"],[4,"ngSwitchCase"],[4,"ngSwitchDefault"],["notesRef",""],["bestRef",""],["prosConsRef",""],["topicsRef",""],[4,"ngTemplateOutlet"],[1,"list-disc","pl-4","text-sm"],[1,"border","border-rose-400","rounded-md","px-1","text-sky-400",3,"click"],["hidden","","copyToClipboard",""],["code1",""],[1,"flex","flex-row","justify-between","items-center","bg-gray-900","px-4","py-2","relative","top-5"],[1,"copy-button-wrapper","bg-gray-700"],[3,"highlight","languages"],["code2",""],["code3",""],["code4",""],[1,"list-decimal","pl-4","text-sm"],[1,"list-disc","pl-4"],[1,"w-full","border-collapse","rounded-lg","overflow-hidden","shadow-md"],[1,"bg-gray-800","text-gray-100"],[1,"py-3","px-4","text-left"],[1,"border-b","border-gray-700","bg-gray-900","hover:bg-gray-800","transition-colors"],[1,"py-3","px-4"],[1,"border-b","border-gray-700","bg-gray-950","hover:bg-gray-800","transition-colors"],[1,"bg-gray-950","hover:bg-gray-800","transition-colors"],[1,"list-decimal","px-4","text-sm"],[1,"text-sky-400"],[1,"list-decimal","px-10","text-sm"]],template:function(i,n){1&i&&(e.TgZ(0,"section",0)(1,"p",1),e._uU(2," Zoneless Applications "),e.qZA(),e.TgZ(3,"div",2)(4,"p")(5,"span",3),e._uU(6,"Zoneless Applications"),e.qZA(),e._uU(7," in Angular 19 introduce a paradigm shift in how change detection works. By removing the dependency on Zone.js, these applications provide superior performance through optimized rendering cycles, reduced memory footprint, and better integration with signals for fine-grained reactivity. "),e.qZA(),e._UZ(8,"br"),e.TgZ(9,"div",4)(10,"div",5)(11,"button",6),e.NdJ("click",function(){return n.selectedTab=1}),e._uU(12," Notes "),e.qZA(),e.TgZ(13,"button",6),e.NdJ("click",function(){return n.selectedTab=2}),e._uU(14," Best Practices "),e.qZA(),e.TgZ(15,"button",6),e.NdJ("click",function(){return n.selectedTab=3}),e._uU(16," Pros and Cons "),e.qZA(),e.TgZ(17,"button",6),e.NdJ("click",function(){return n.selectedTab=4}),e._uU(18," Related Topics "),e.qZA()(),e.TgZ(19,"div",7),e.ynx(20,8),e.YNc(21,h,2,1,"div",9),e.YNc(22,T,2,1,"div",9),e.YNc(23,b,2,1,"div",9),e.YNc(24,C,2,1,"div",10),e.BQk(),e.qZA()()()(),e.YNc(25,y,192,12,"ng-template",null,11,e.W1O),e.YNc(27,w,81,0,"ng-template",null,12,e.W1O),e.YNc(29,x,141,0,"ng-template",null,13,e.W1O),e.YNc(31,D,85,0,"ng-template",null,14,e.W1O)),2&i&&(e.xp6(11),e.ekj("text-rose-300",1===n.selectedTab),e.xp6(2),e.ekj("text-rose-300",2===n.selectedTab),e.xp6(2),e.ekj("text-rose-300",3===n.selectedTab),e.xp6(2),e.ekj("text-rose-300",4===n.selectedTab),e.xp6(3),e.Q6J("ngSwitch",n.selectedTab),e.xp6(1),e.Q6J("ngSwitchCase",2),e.xp6(1),e.Q6J("ngSwitchCase",3),e.xp6(1),e.Q6J("ngSwitchCase",4))},dependencies:[r.ez,r.tP,r.RF,r.n9,r.ED,g._l,g.y$],styles:["p[_ngcontent-%COMP%]{line-height:1.5}"],changeDetection:0})}}]);