{"version":3,"file":"main.js","mappings":"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EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,EACD;EACE,MAAM,EAAE;CACT,CACF;AAEM,MAAMrI,OAAO,GAAG;EACrB,MAAM,EAAE,SAAS;EACjB,KAAK,EAAE,SAAS;EAChB,OAAO,EAAE;IACP,cAAc,EAAE;MACd,cAAc,EAAE;QACd,MAAM,EAAE;;KAEX;IACD,UAAU,EAAE;MACV,YAAY,EAAE;QACZ,MAAM,EAAE;OACT;MACD,UAAU,EAAE;QACV,MAAM,EAAE;OACT;MACD,YAAY,EAAE;QACZ,MAAM,EAAE;OACT;MACD,IAAI,EAAE;QACJ,MAAM,EAAE;OACT;MACD,SAAS,EAAE;QACT,MAAM,EAAE;OACT;MACD,SAAS,EAAE;QACT,MAAM,EAAE;OACT;MACD,OAAO,EAAE;QACP,MAAM,EAAE;OACT;MACD,aAAa,EAAE;QACb,MAAM,EAAE;OACT;MACD,aAAa,EAAE;QACb,MAAM,EAAE;OACT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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.value.ts","./src/app/core/navbar/navbar.component.ts","./src/app/core/navbar/navbar.component.html","./src/app/core/sidebar/sidebar.component.ts","./src/app/core/sidebar/sidebar.component.html","./src/app/feature/angular/components/glossary/glossary.component.html","./src/app/feature/angular/components/glossary/glossary.component.ts","./src/app/feature/angular/concepts/after-next-render/after-next-render.component.ts","./src/app/feature/angular/concepts/after-next-render/after-next-render.component.html","./src/app/feature/angular/concepts/after-render/after-render.component.ts","./src/app/feature/angular/concepts/after-render/after-render.component.html","./src/app/feature/angular/concepts/angular-devtools/angular-devtools.component.ts","./src/app/feature/angular/concepts/angular-devtools/angular-devtools.component.html","./src/app/feature/angular/concepts/angular-element/angular-element.component.ts","./src/app/feature/angular/concepts/angular-element/angular-element.component.html","./src/app/feature/angular/concepts/annotation/annotation.component.ts","./src/app/feature/angular/concepts/annotation/annotation.component.html","./src/app/feature/angular/concepts/aot/aot.component.ts","./src/app/feature/angular/concepts/aot/aot.component.html","./src/app/feature/angular/concepts/apf/apf.component.ts","./src/app/feature/angular/concepts/apf/apf.component.html","./src/app/feature/angular/concepts/app-shell/app-shell.component.ts","./src/app/feature/angular/concepts/app-shell/app-shell.component.html","./src/app/feature/angular/concepts/architect/architect.component.html","./src/app/feature/angular/concepts/architect/architect.component.ts","./src/app/feature/angular/concepts/attribute-directive/attribute-directive.component.ts","./src/app/feature/angular/concepts/attribute-directive/attribute-directive.component.html","./src/app/feature/angular/concepts/binding/binding.component.html","./src/app/feature/angular/concepts/binding/binding.component.ts","./src/app/feature/angular/concepts/bootstrap/bootstrap.component.html","./src/app/feature/angular/concepts/bootstrap/bootstrap.component.ts","./src/app/feature/angular/concepts/builder/builder.component.html","./src/app/feature/angular/concepts/builder/builder.component.ts","./src/app/feature/angular/concepts/case-types/case-types.component.html","./src/app/feature/angular/concepts/case-types/case-types.component.ts","./src/app/feature/angular/concepts/change-detection/change-detection.component.ts","./src/app/feature/angular/concepts/change-detection/change-detection.component.html","./src/app/feature/angular/concepts/class-decorator/class-decorator.component.ts","./src/app/feature/angular/concepts/class-decorator/class-decorator.component.html","./src/app/feature/angular/concepts/class-field-decorator/class-field-decorator.component.ts","./src/app/feature/angular/concepts/class-field-decorator/class-field-decorator.component.html","./src/app/feature/angular/concepts/cli/cli.component.ts","./src/app/feature/angular/concepts/cli/cli.component.html","./src/app/feature/angular/concepts/collection/collection.component.ts","./src/app/feature/angular/concepts/collection/collection.component.html","./src/app/feature/angular/concepts/component/component.component.ts","./src/app/feature/angular/concepts/component/component.component.html","./src/app/feature/angular/concepts/configuration/configuration.component.ts","./src/app/feature/angular/concepts/configuration/configuration.component.html","./src/app/feature/angular/concepts/content-projection/content-projection.component.ts","./src/app/feature/angular/concepts/content-projection/content-projection.component.html","./src/app/feature/angular/concepts/control-flow/control-flow.component.ts","./src/app/feature/angular/concepts/control-flow/control-flow.component.html","./src/app/feature/angular/concepts/custom-element/custom-element.component.html","./src/app/feature/angular/concepts/custom-element/custom-element.component.ts","./src/app/feature/angular/concepts/custom-element/custom-element.module.ts","./src/app/feature/angular/concepts/data-binding/data-binding.component.html","./src/app/feature/angular/concepts/data-binding/data-binding.component.ts","./src/app/feature/angular/concepts/data-binding/data-binding.module.ts","./src/app/feature/angular/concepts/declarable/declarable.component.html","./src/app/feature/angular/concepts/declarable/declarable.component.ts","./src/app/feature/angular/concepts/declarable/declarable.module.ts","./src/app/feature/angular/concepts/decorator/decorator.component.html","./src/app/feature/angular/concepts/decorator/decorator.component.ts","./src/app/feature/angular/concepts/decorator/decorator.module.ts","./src/app/feature/angular/concepts/deferrable-views/deferrable-views.component.ts","./src/app/feature/angular/concepts/deferrable-views/deferrable-views.component.html","./src/app/feature/angular/concepts/dependency-injection/dependency-injection.component.ts","./src/app/feature/angular/concepts/dependency-injection/dependency-injection.component.html","./src/app/feature/angular/concepts/di-token/di-token.component.html","./src/app/feature/angular/concepts/di-token/di-token.component.ts","./src/app/feature/angular/concepts/directive/directive.component.ts","./src/app/feature/angular/concepts/directive/directive.component.html","./src/app/feature/angular/concepts/dsl/dsl.component.html","./src/app/feature/angular/concepts/dsl/dsl.component.ts","./src/app/feature/angular/concepts/dynamic-component-loading/dynamic-component-loading.component.ts","./src/app/feature/angular/concepts/dynamic-component-loading/dynamic-component-loading.component.html","./src/app/feature/angular/concepts/eager-loading/eager-loading.component.html","./src/app/feature/angular/concepts/eager-loading/eager-loading.component.ts","./src/app/feature/angular/concepts/ecmascript/ecmascript.component.html","./src/app/feature/angular/concepts/ecmascript/ecmascript.component.ts","./src/app/feature/angular/concepts/element/element.component.html","./src/app/feature/angular/concepts/element/element.component.ts","./src/app/feature/angular/concepts/entry-point/entry-point.component.html","./src/app/feature/angular/concepts/entry-point/entry-point.component.ts","./src/app/feature/angular/concepts/form-control/form-control.component.html","./src/app/feature/angular/concepts/form-control/form-control.component.ts","./src/app/feature/angular/concepts/form-model/form-model.component.html","./src/app/feature/angular/concepts/form-model/form-model.component.ts","./src/app/feature/angular/concepts/form-validation/form-validation.component.ts","./src/app/feature/angular/concepts/form-validation/form-validation.component.html","./src/app/feature/angular/concepts/hydration/hydration.component.ts","./src/app/feature/angular/concepts/hydration/hydration.component.html","./src/app/feature/angular/concepts/immutability/immutability.component.ts","./src/app/feature/angular/concepts/immutability/immutability.component.html","./src/app/feature/angular/concepts/injectable/injectable.component.ts","./src/app/feature/angular/concepts/injectable/injectable.component.html","./src/app/feature/angular/concepts/injector/injector.component.ts","./src/app/feature/angular/concepts/injector/injector.component.html","./src/app/feature/angular/concepts/input-transform/input-transform.component.ts","./src/app/feature/angular/concepts/input-transform/input-transform.component.html","./src/app/feature/angular/concepts/lazy-loading/lazy-loading.component.ts","./src/app/feature/angular/concepts/lazy-loading/lazy-loading.component.html","./src/app/feature/angular/concepts/lifecycle-hook/lifecycle-hook.component.ts","./src/app/feature/angular/concepts/lifecycle-hook/lifecycle-hook.component.html","./src/app/feature/angular/concepts/observable/observable.component.ts","./src/app/feature/angular/concepts/observable/observable.component.html","./src/app/feature/angular/concepts/partial-hydration/partial-hydration.component.ts","./src/app/feature/angular/concepts/partial-hydration/partial-hydration.component.html","./src/app/feature/angular/concepts/pipe/pipe.component.ts","./src/app/feature/angular/concepts/pipe/pipe.component.html","./src/app/feature/angular/concepts/reactive-form/reactive-form.component.ts","./src/app/feature/angular/concepts/reactive-form/reactive-form.component.html","./src/app/feature/angular/concepts/resolver/resolver.component.ts","./src/app/feature/angular/concepts/resolver/resolver.component.html","./src/app/feature/angular/concepts/route-guard/route-guard.component.ts","./src/app/feature/angular/concepts/route-guard/route-guard.component.html","./src/app/feature/angular/concepts/router-outlet/router-outlet.component.ts","./src/app/feature/angular/concepts/router-outlet/router-outlet.component.html","./src/app/feature/angular/concepts/router/router.component.ts","./src/app/feature/angular/concepts/router/router.component.html","./src/app/feature/angular/concepts/routing-component/routing-component.component.ts","./src/app/feature/angular/concepts/routing-component/routing-component.component.html","./src/app/feature/angular/concepts/signal-components/signal-components.component.ts","./src/app/feature/angular/concepts/signal-components/signal-components.component.html","./src/app/feature/angular/concepts/signals/signals.component.ts","./src/app/feature/angular/concepts/signals/signals.component.html","./src/app/feature/angular/concepts/ssr/ssr.component.ts","./src/app/feature/angular/concepts/ssr/ssr.component.html","./src/app/feature/angular/concepts/standalone/standalone.component.ts","./src/app/feature/angular/concepts/standalone/standalone.component.html","./src/app/feature/angular/concepts/structural-directive/structural-directive.component.ts","./src/app/feature/angular/concepts/structural-directive/structural-directive.component.html","./src/app/feature/angular/concepts/style-url/style-url.component.ts","./src/app/feature/angular/concepts/style-url/style-url.component.html","./src/app/feature/angular/concepts/subscriber/subscriber.component.ts","./src/app/feature/angular/concepts/subscriber/subscriber.component.html","./src/app/feature/angular/concepts/template-form/template-form.component.ts","./src/app/feature/angular/concepts/template-form/template-form.component.html","./src/app/feature/angular/concepts/template/template.component.ts","./src/app/feature/angular/concepts/template/template.component.html","./src/app/feature/angular/concepts/universal/universal.component.ts","./src/app/feature/angular/concepts/universal/universal.component.html","./src/app/feature/angular/concepts/view-hierarchy/view-hierarchy.component.ts","./src/app/feature/angular/concepts/view-hierarchy/view-hierarchy.component.html","./src/app/feature/angular/concepts/view-transitions/view-transitions.component.ts","./src/app/feature/angular/concepts/view-transitions/view-transitions.component.html","./src/app/feature/angular/concepts/zoneless-applications/zoneless-applications.component.ts","./src/app/feature/angular/concepts/zoneless-applications/zoneless-applications.component.html","./src/app/feature/angular/data-access/state.service.ts","./src/app/feature/angular/data-access/values.ts","./src/app/feature/angular/pages/glossary-page/glossary-page.component.html","./src/app/feature/angular/pages/glossary-page/glossary-page.component.ts","./src/app/utils/directives/box-widget.directive.ts","./src/app/utils/directives/copy.directive.ts","./src/app/utils/directives/first-letter-color.directive.ts","./src/app/utils/pipes/bypass-string-index.pipe.ts","./src/app/utils/pipes/obj-to-arr.pipe.ts","./src/app/utils/services/unsubscribe.service.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GlossaryComponent } from './feature/angular/components/glossary/glossary.component';\nimport { AotComponent } from './feature/angular/concepts/aot/aot.component';\nimport { AttributeDirectiveComponent } from './feature/angular/concepts/attribute-directive/attribute-directive.component';\nimport { CaseTypesComponent } from './feature/angular/concepts/case-types/case-types.component';\nimport { ChangeDetectionComponent } from './feature/angular/concepts/change-detection/change-detection.component';\nimport { DependencyInjectionComponent } from './feature/angular/concepts/dependency-injection/dependency-injection.component';\nimport { DirectiveComponent } from './feature/angular/concepts/directive/directive.component';\nimport { DynamicComponentLoadingComponent } from './feature/angular/concepts/dynamic-component-loading/dynamic-component-loading.component';\nimport { EagerLoadingComponent } from './feature/angular/concepts/eager-loading/eager-loading.component';\nimport { EcmascriptComponent } from './feature/angular/concepts/ecmascript/ecmascript.component';\nimport { ElementComponent } from './feature/angular/concepts/element/element.component';\nimport { FormControlComponent } from './feature/angular/concepts/form-control/form-control.component';\nimport { FormModelComponent } from './feature/angular/concepts/form-model/form-model.component';\nimport { FormValidationComponent } from './feature/angular/concepts/form-validation/form-validation.component';\nimport { ImmutabilityComponent } from './feature/angular/concepts/immutability/immutability.component';\nimport { InjectableComponent } from './feature/angular/concepts/injectable/injectable.component';\nimport { InjectorComponent } from './feature/angular/concepts/injector/injector.component';\nimport { LazyLoadingComponent } from './feature/angular/concepts/lazy-loading/lazy-loading.component';\nimport { LifecycleHookComponent } from './feature/angular/concepts/lifecycle-hook/lifecycle-hook.component';\nimport { ObservableComponent } from './feature/angular/concepts/observable/observable.component';\nimport { PipeComponent } from './feature/angular/concepts/pipe/pipe.component';\nimport { ReactiveFormComponent } from './feature/angular/concepts/reactive-form/reactive-form.component';\nimport { ResolverComponent } from './feature/angular/concepts/resolver/resolver.component';\nimport { RouteGuardComponent } from './feature/angular/concepts/route-guard/route-guard.component';\nimport { RouterOutletComponent } from './feature/angular/concepts/router-outlet/router-outlet.component';\nimport { RouterComponent } from './feature/angular/concepts/router/router.component';\nimport { RoutingComponentComponent } from './feature/angular/concepts/routing-component/routing-component.component';\nimport { StructuralDirectiveComponent } from './feature/angular/concepts/structural-directive/structural-directive.component';\nimport { SubscriberComponent } from './feature/angular/concepts/subscriber/subscriber.component';\nimport { TemplateFormComponent } from './feature/angular/concepts/template-form/template-form.component';\nimport { TemplateComponent } from './feature/angular/concepts/template/template.component';\nimport { GlossaryPageComponent } from './feature/angular/pages/glossary-page/glossary-page.component';\nimport { AngularElementComponent } from './feature/angular/concepts/angular-element/angular-element.component';\nimport { AfterNextRenderComponent } from './feature/angular/concepts/after-next-render/after-next-render.component';\nimport { AfterRenderComponent } from './feature/angular/concepts/after-render/after-render.component';\nimport { AngularDevToolsComponent } from './feature/angular/concepts/angular-devtools/angular-devtools.component';\nimport { AnnotationComponent } from './feature/angular/concepts/annotation/annotation.component';\nimport { AppShellComponent } from './feature/angular/concepts/app-shell/app-shell.component';\nimport { ArchitectComponent } from './feature/angular/concepts/architect/architect.component';\nimport { BindingComponent } from './feature/angular/concepts/binding/binding.component';\nimport { BootstrapComponent } from './feature/angular/concepts/bootstrap/bootstrap.component';\nimport { ControlFlowComponent } from './feature/angular/concepts/control-flow/control-flow.component';\nimport { BuilderComponent } from './feature/angular/concepts/builder/builder.component';\nimport { CustomElementComponent } from './feature/angular/concepts/custom-element/custom-element.component';\nimport { DeferrableViewsComponent } from './feature/angular/concepts/deferrable-views/deferrable-views.component';\nimport { HydrationComponent } from './feature/angular/concepts/hydration/hydration.component';\nimport { InputTransformComponent } from './feature/angular/concepts/input-transform/input-transform.component';\nimport { PartialHydrationComponent } from './feature/angular/concepts/partial-hydration/partial-hydration.component';\nimport { SignalComponentsComponent } from './feature/angular/concepts/signal-components/signal-components.component';\nimport { SsrComponent } from './feature/angular/concepts/ssr/ssr.component';\nimport { StyleUrlComponent } from './feature/angular/concepts/style-url/style-url.component';\nimport { ZonelessApplicationsComponent } from './feature/angular/concepts/zoneless-applications/zoneless-applications.component';\nimport { ClassDecoratorComponent } from './feature/angular/concepts/class-decorator/class-decorator.component';\nimport { SignalsComponent } from './feature/angular/concepts/signals/signals.component';\nimport { ViewTransitionsComponent } from './feature/angular/concepts/view-transitions/view-transitions.component';\nimport { UniversalComponent } from './feature/angular/concepts/universal/universal.component';\nimport { ViewHierarchyComponent } from './feature/angular/concepts/view-hierarchy/view-hierarchy.component';\nimport { StandaloneComponent } from './feature/angular/concepts/standalone/standalone.component';\nimport { ContentProjectionComponent } from './feature/angular/concepts/content-projection/content-projection.component';\nimport { ClassFieldDecoratorComponent } from './feature/angular/concepts/class-field-decorator/class-field-decorator.component';\nimport { CollectionComponent } from './feature/angular/concepts/collection/collection.component';\nimport { CliComponent } from './feature/angular/concepts/cli/cli.component';\nimport { ComponentComponent } from './feature/angular/concepts/component/component.component';\nimport { ConfigurationComponent } from './feature/angular/concepts/configuration/configuration.component';\nimport { DataBindingComponent } from './feature/angular/concepts/data-binding/data-binding.component';\nimport { DeclarableComponent } from './feature/angular/concepts/declarable/declarable.component';\nimport { DecoratorComponent } from './feature/angular/concepts/decorator/decorator.component';\nimport { DiTokenComponent } from './feature/angular/concepts/di-token/di-token.component';\nimport { DslComponent } from './feature/angular/concepts/dsl/dsl.component';\nimport { EntryPointComponent } from './feature/angular/concepts/entry-point/entry-point.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'angular',\n    pathMatch: 'full'\n  },\n  {\n    path: 'angular',\n    component: GlossaryPageComponent,\n    children: [\n      {\n        path: 'aot',\n        component: AotComponent\n      },\n      {\n        path: 'after-next-render',\n        component: AfterNextRenderComponent\n      },\n      {\n        path: 'after-render',\n        component: AfterRenderComponent\n      },\n      {\n        path: 'angular-element',\n        component: AngularElementComponent\n      },\n      {\n        path: 'annotation',\n        component: AnnotationComponent\n      },\n      {\n        path: 'app-shell',\n        component: AppShellComponent\n      },\n      {\n        path: 'architect',\n        component: ArchitectComponent\n      },\n      {\n        path: 'attribute-directive',\n        component: AttributeDirectiveComponent\n      },\n      {\n        path: 'binding',\n        component: BindingComponent\n      },\n      {\n        path: 'bootstrap',\n        component: BootstrapComponent\n      },\n      {\n        path: 'builder',\n        component: BuilderComponent\n      },\n      {\n        path: 'case-types',\n        component: CaseTypesComponent\n      },\n      {\n        path: 'change-detection',\n        component: ChangeDetectionComponent\n      },\n      {\n        path: 'data-binding',\n        component: DataBindingComponent\n      },\n      {\n        path: 'declarable',\n        component: DeclarableComponent\n      },\n      {\n        path: 'decorator',\n        component: DecoratorComponent\n      },\n      {\n        path: 'di',\n        component: DependencyInjectionComponent\n      },\n      {\n        path: 'di-token',\n        component: DiTokenComponent\n      },\n      {\n        path: 'directive',\n        component: DirectiveComponent\n      },\n      {\n        path: 'dynamic-component-loading',\n        component: DynamicComponentLoadingComponent\n      },\n      {\n        path: 'eager-loading',\n        component: EagerLoadingComponent\n      },\n      {\n        path: 'ecmascript',\n        component: EcmascriptComponent\n      },\n      {\n        path: 'element',\n        component: ElementComponent\n      },\n      {\n        path: 'entry-point',\n        component: EntryPointComponent\n      },\n      {\n        path: 'deferrable-views',\n        component: DeferrableViewsComponent\n      },\n      {\n        path: 'form-control',\n        component: FormControlComponent\n      },\n      {\n        path: 'form-model',\n        component: FormModelComponent\n      },\n      {\n        path: 'form-validation',\n        component: FormValidationComponent\n      },\n      {\n        path: 'hydration',\n        component: HydrationComponent\n      },\n      {\n        path: 'immutability',\n        component: ImmutabilityComponent\n      },\n      {\n        path: 'injectable',\n        component: InjectableComponent\n      },\n      {\n        path: 'injector',\n        component: InjectorComponent\n      },\n      {\n        path: 'input-transform',\n        component: InputTransformComponent\n      },\n      {\n        path: 'lazy-loading',\n        component: LazyLoadingComponent\n      },\n      {\n        path: 'hooks',\n        component: LifecycleHookComponent\n      },\n      {\n        path: 'observable',\n        component: ObservableComponent\n      },\n      {\n        path: 'partial-hydration',\n        component: PartialHydrationComponent\n      },\n      {\n        path: 'signal-components',\n        component: SignalComponentsComponent\n      },\n      {\n        path: 'pipe',\n        component: PipeComponent\n      },\n      {\n        path: 'reactive-form',\n        component: ReactiveFormComponent\n      },\n      {\n        path: 'resolver',\n        component: ResolverComponent\n      },\n      {\n        path: 'route-guard',\n        component: RouteGuardComponent\n      },\n      {\n        path: 'router',\n        component: RouterComponent\n      },\n      {\n        path: 'router-outlet',\n        component: RouterOutletComponent\n      },\n      {\n        path: 'routing-component',\n        component: RoutingComponentComponent\n      },\n      {\n        path: 'ssr',\n        component: SsrComponent\n      },\n      {\n        path: 'style-url',\n        component: StyleUrlComponent\n      },\n      {\n        path: 'structural-directive',\n        component: StructuralDirectiveComponent\n      },\n      {\n        path: 'subscriber',\n        component: SubscriberComponent\n      },\n      {\n        path: 'template',\n        component: TemplateComponent\n      },\n      {\n        path: 'template-form',\n        component: TemplateFormComponent\n      },\n      {\n        path: 'angular-devtools',\n        component: AngularDevToolsComponent\n      },\n      {\n        path: 'control-flow',\n        component: ControlFlowComponent,\n      },\n      {\n        path: 'zoneless-applications',\n        component: ZonelessApplicationsComponent\n      },\n      {\n        path: 'class-decorator',\n        component: ClassDecoratorComponent\n      },\n      {\n        path: 'signals',\n        component: SignalsComponent\n      },\n      {\n        path: 'view-transitions',\n        component: ViewTransitionsComponent\n      },\n      {\n        path: 'universal',\n        component: UniversalComponent,\n      },\n      {\n        path: 'view-hierarchy',\n        component: ViewHierarchyComponent,\n      },\n      {\n        path: 'standalone',\n        component: StandaloneComponent,\n      },\n      {\n        path: 'content-projection',\n        component: ContentProjectionComponent,\n      },\n      {\n        path: 'custom-element',\n        component: CustomElementComponent,\n      },\n      {\n        path: 'class-field-decorator',\n        component: ClassFieldDecoratorComponent\n      },\n      {\n        path: 'collection',\n        component: CollectionComponent\n      },\n      {\n        path: 'cli',\n        component: CliComponent\n      },\n      {\n        path: 'component',\n        component: ComponentComponent\n      },\n      {\n        path: 'configuration',\n        component: ConfigurationComponent\n      },\n      {\n        path: 'dsl',\n        component: DslComponent\n      },\n    ]\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { angular } from './feature/angular/data-access/values';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  title = 'tailwind';\n\n\n}\n","<app-navbar></app-navbar>\n\n<section class=\"flex flex-row absolute top-0\">\n  <app-sidebar></app-sidebar>\n\n  <router-outlet></router-outlet>\n</section>\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FirstLetterColorDirective } from './utils/directives/first-letter-color.directive';\nimport { NavbarComponent } from './core/navbar/navbar.component';\nimport { GlossaryComponent } from './feature/angular/components/glossary/glossary.component';\nimport { SidebarComponent } from './core/sidebar/sidebar.component';\nimport { CommonModule, TitleCasePipe } from '@angular/common';\nimport { ObjToArrPipe } from './utils/pipes/obj-to-arr.pipe';\nimport { BypassStringIndexPipe } from './utils/pipes/bypass-string-index.pipe';\nimport { GlossaryPageComponent } from './feature/angular/pages/glossary-page/glossary-page.component';\nimport { BoxWidgetDirective } from './utils/directives/box-widget.directive';\nimport { AotComponent } from './feature/angular/concepts/aot/aot.component';\nimport { ApfComponent } from './feature/angular/concepts/apf/apf.component';\nimport { AnnotationComponent } from './feature/angular/concepts/annotation/annotation.component';\nimport { AppShellComponent } from './feature/angular/concepts/app-shell/app-shell.component';\nimport { ArchitectComponent } from './feature/angular/concepts/architect/architect.component';\nimport { AttributeDirectiveComponent } from './feature/angular/concepts/attribute-directive/attribute-directive.component';\nimport { BindingComponent } from './feature/angular/concepts/binding/binding.component';\nimport { BootstrapComponent } from './feature/angular/concepts/bootstrap/bootstrap.component';\nimport { BuilderComponent } from './feature/angular/concepts/builder/builder.component';\nimport { CaseTypesComponent } from './feature/angular/concepts/case-types/case-types.component';\nimport { ChangeDetectionComponent } from './feature/angular/concepts/change-detection/change-detection.component';\nimport { HighlightModule, HighlightOptions, HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\nimport { HighlightPlusModule } from 'ngx-highlightjs/plus';\nimport { CopyDirective } from './utils/directives/copy.directive';\nimport { DependencyInjectionComponent } from './feature/angular/concepts/dependency-injection/dependency-injection.component';\nimport { DirectiveComponent } from './feature/angular/concepts/directive/directive.component';\nimport { DynamicComponentLoadingComponent } from './feature/angular/concepts/dynamic-component-loading/dynamic-component-loading.component';\nimport { FormControlComponent } from './feature/angular/concepts/form-control/form-control.component';\nimport { FormModelComponent } from './feature/angular/concepts/form-model/form-model.component';\nimport { FormValidationComponent } from './feature/angular/concepts/form-validation/form-validation.component';\nimport { LazyLoadingComponent } from './feature/angular/concepts/lazy-loading/lazy-loading.component';\nimport { LifecycleHookComponent } from './feature/angular/concepts/lifecycle-hook/lifecycle-hook.component';\nimport { ObservableComponent } from './feature/angular/concepts/observable/observable.component';\nimport { PipeComponent } from './feature/angular/concepts/pipe/pipe.component';\nimport { ReactiveFormComponent } from './feature/angular/concepts/reactive-form/reactive-form.component';\nimport { ResolverComponent } from './feature/angular/concepts/resolver/resolver.component';\nimport { RouteGuardComponent } from './feature/angular/concepts/route-guard/route-guard.component';\nimport { RouterComponent } from './feature/angular/concepts/router/router.component';\nimport { RouterOutletComponent } from './feature/angular/concepts/router-outlet/router-outlet.component';\nimport { RoutingComponentComponent } from './feature/angular/concepts/routing-component/routing-component.component';\nimport { StructuralDirectiveComponent } from './feature/angular/concepts/structural-directive/structural-directive.component';\nimport { SubscriberComponent } from './feature/angular/concepts/subscriber/subscriber.component';\nimport { TemplateComponent } from './feature/angular/concepts/template/template.component';\nimport { TemplateFormComponent } from './feature/angular/concepts/template-form/template-form.component';\nimport { AngularElementComponent } from './feature/angular/concepts/angular-element/angular-element.component';\nimport { AfterNextRenderComponent } from './feature/angular/concepts/after-next-render/after-next-render.component';\nimport { CustomElementModule } from './feature/angular/concepts/custom-element/custom-element.module';\nimport { DataBindingModule } from './feature/angular/concepts/data-binding/data-binding.module';\nimport { DeclarableModule } from './feature/angular/concepts/declarable/declarable.module';\nimport { DecoratorModule } from './feature/angular/concepts/decorator/decorator.module';\nimport { DiTokenComponent } from './feature/angular/concepts/di-token/di-token.component';\nimport { DslComponent } from './feature/angular/concepts/dsl/dsl.component';\nimport { EagerLoadingComponent } from './feature/angular/concepts/eager-loading/eager-loading.component';\nimport { EcmascriptComponent } from './feature/angular/concepts/ecmascript/ecmascript.component';\nimport { ElementComponent } from './feature/angular/concepts/element/element.component';\nimport { EntryPointComponent } from './feature/angular/concepts/entry-point/entry-point.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FirstLetterColorDirective,\n    NavbarComponent,\n    GlossaryComponent,\n    SidebarComponent,\n    ObjToArrPipe,\n    BypassStringIndexPipe,\n    GlossaryPageComponent,\n    BoxWidgetDirective,\n    AotComponent,\n    AngularElementComponent,\n    ApfComponent,\n    AnnotationComponent,\n    AppShellComponent,\n    ArchitectComponent,\n    AttributeDirectiveComponent,\n    BindingComponent,\n    BootstrapComponent,\n    BuilderComponent,\n    CaseTypesComponent,\n    ChangeDetectionComponent,\n    CopyDirective,\n    DependencyInjectionComponent,\n    DirectiveComponent,\n    DynamicComponentLoadingComponent,\n    FormControlComponent,\n    FormModelComponent,\n    FormValidationComponent,\n    LazyLoadingComponent,\n    LifecycleHookComponent,\n    ObservableComponent,\n    PipeComponent,\n    ReactiveFormComponent,\n    ResolverComponent,\n    RouteGuardComponent,\n    RouterComponent,\n    RouterOutletComponent,\n    RoutingComponentComponent,\n    StructuralDirectiveComponent,\n    SubscriberComponent,\n    TemplateComponent,\n    TemplateFormComponent,\n    AfterNextRenderComponent,\n    DiTokenComponent,\n    DslComponent,\n    EagerLoadingComponent,\n    EcmascriptComponent,\n    ElementComponent,\n    EntryPointComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    HighlightModule,\n    HighlightPlusModule,\n    CustomElementModule,\n    DataBindingModule,\n    DeclarableModule,\n    DecoratorModule\n  ],\n  providers: [\n    {\n      provide: HIGHLIGHT_OPTIONS,\n      useValue: {\n        fullLibraryLoader: () => import('highlight.js'),\n      }\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { angular } from \"./feature/angular/data-access/values\";\n\nexport const technologies = {\n  angular,\n  \"rxjs\": {\n    name: \"rxjs\"\n  },\n  \"ngrx\": {\n    name: \"ngrx\"\n  }\n};\n\n\n// \"rxjs\": {\n// },\n// \"ngrx\": {\n// },\n// \"nx\": {\n// },\n// \"git\": {\n// },\n// \"typescript\": {\n// },\n// \"javascript\": {\n// },\n// \"DOM\": {},\n// \"node\": {},\n// \"expressJs\": {},\n// \"nestJS\": {},\n// \"engineering\": {\n// },\n// \"ionic\": {\n// },\n// \"react\": {\n// },\n// \"html\": {\n// },\n// \"css\": {\n// },\n// \"sass\": {\n// },\n// \"tailwindCss\":{\n// },\n// \"material\": {\n// },\n// \"bootstrap\": {\n// },\n// \"ngBootstrap\": {\n// },\n// \"ngxBootstrap\":{\n// },\n// \"firebase\": {\n// },\n// \"mongodb\": {\n// },\n// \"grapql\": {\n// },\n// \"apollo\":{}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { technologies } from '../../app.value';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NavbarComponent {\n  readonly technologies = technologies;\n\n  // items: string[] = Object.keys(this.technologies);\n  // items = this.\n}\n","<nav class=\"bg-gray-900 absolute z-50 sticky\">\n  <div class=\"px-2 \">\n    <div class=\"relative flex h-10 items-center justify-end\">\n      <div class=\"flex items-center px-2 lg:px-0\">\n        <!-- <div class=\"flex-shrink-0\">\n          <img class=\"block h-8 w-auto lg:hidden\" src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500\" alt=\"Your Company\">\n          <img class=\"hidden h-8 w-auto lg:block\" src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500\" alt=\"Your Company\">\n        </div> -->\n        <div class=\"\">\n          <div class=\"flex space-x-4\">\n            <!-- Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" -->\n            <button *ngFor=\"let item of (technologies | objToArr)\"\n              routerLink=\"{{item}}\"\n              class=\"rounded-md bg-gray-900 px-3 py-2 text-sm font-medium text-white\">\n              {{ item }}\n            </button>\n            <!-- <a href=\"#\" class=\"rounded-md px-3 py-2 text-sm font-medium text-gray-300 hover:bg-gray-700 hover:text-white\">\n              Feature\n            </a>\n            <a href=\"#\" class=\"rounded-md px-3 py-2 text-sm font-medium text-gray-300 hover:bg-gray-700 hover:text-white\">\n              Best Practices\n            </a>\n            <a href=\"#\" class=\"rounded-md px-3 py-2 text-sm font-medium text-gray-300 hover:bg-gray-700 hover:text-white\">\n              Tools\n            </a>\n            <a href=\"#\" class=\"rounded-md px-3 py-2 text-sm font-medium text-gray-300 hover:bg-gray-700 hover:text-white\">\n              Reference\n            </a> -->\n          </div>\n        </div>\n      </div>\n      <!-- <div class=\"flex flex-1 justify-center px-2 lg:ml-6 lg:justify-end\">\n        <div class=\"w-full max-w-lg lg:max-w-xs\">\n          <label for=\"search\" class=\"sr-only\">Search</label>\n          <div class=\"relative\">\n            <div class=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\n              <svg class=\"h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                <path fill-rule=\"evenodd\" d=\"M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            <input id=\"search\" name=\"search\" class=\"block w-full rounded-md border-0 bg-gray-700 py-1.5 pl-10 pr-3 text-gray-300 placeholder:text-gray-400 focus:bg-white focus:text-gray-900 focus:ring-0 sm:text-sm sm:leading-6\" placeholder=\"Search\" type=\"search\">\n          </div>\n        </div>\n      </div> -->\n      <div class=\"flex lg:hidden\">\n        <!-- Mobile menu button -->\n        <button type=\"button\" class=\"inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\" aria-controls=\"mobile-menu\" aria-expanded=\"false\">\n          <span class=\"sr-only\">Open main menu</span>\n          <!--\n            Icon when menu is closed.\n\n            Menu open: \"hidden\", Menu closed: \"block\"\n          -->\n          <svg class=\"block h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\" />\n          </svg>\n          <!--\n            Icon when menu is open.\n\n            Menu open: \"block\", Menu closed: \"hidden\"\n          -->\n          <svg class=\"hidden h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n    </div>\n  </div>\n\n</nav>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter, Subject, takeUntil } from 'rxjs';\nimport { technologies } from '../../app.value';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarComponent {\n  private currentRoute!: string;\n  private selectedTech!: string;\n  items!: {};\n  private unsubscribe$ = new Subject<void>();\n  private technologies = technologies;\n\n  constructor(private router: Router) {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        takeUntil(this.unsubscribe$)\n      )\n      .subscribe(() => {\n        this.currentRoute = this.router.url;\n        console.log(this.router)\n        // console.log(this.currentRoute.split('/')[1]);\n        this.selectedTech = this.currentRoute.split('/')[1];\n\n        if (this.selectedTech) console.log(this.technologies)\n        console.log(this.selectedTech)\n        this.items = this.technologies.angular.items;\n        console.log(this.items);\n      });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n}\n","<div class=\"flex min-h-0 flex-1 flex-col  w-64 h-screen pt-6\">\n  <div class=\"flex flex-1 flex-col overflow-y-auto\">\n    <!-- <div class=\"flex flex-shrink-0 items-center px-4\">\n      <img class=\"h-8 w-auto\" src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500\" alt=\"Your Company\">\n    </div> -->\n    <nav class=\"mt-5 flex-1 space-y-1  px-2\" aria-label=\"Sidebar\">\n      <!-- Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" -->\n      <span\n        *ngFor=\"let item of (items | objToArr)\"\n        class=\"bg-[#303030] text-white group\n          grid grid-flow-row auto-rows-max\n          items-center rounded-md px-2 py-2 text-sm font-medium\">\n        <!-- Current: \"text-gray-300\", Default: \"text-gray-400 group-hover:text-gray-300\" -->\n        <!-- <svg class=\"text-gray-300 mr-3 h-6 w-6 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\" />\n        </svg> -->\n        <p class=\"heading-1\">{{ item }}</p>\n\n        <!-- <span> -->\n          <ul>\n            <li *ngFor=\"let nestedItem of (items | bypassStringIndex: item | objToArr)\"\n              class=\"sub-category\">\n              <span class=\"text-content\">\n                {{ items | bypassStringIndex: item | bypassStringIndex: nestedItem | bypassStringIndex: 'name' | lowercase }}\n              </span>\n\n              <!-- {{ nestedItem }} -->\n            </li>\n          </ul>\n        <!-- </span> -->\n\n      </span>\n    </nav>\n  </div>\n  <!-- <div class=\"flex flex-shrink-0 bg-gray-700 p-4\">\n    <a href=\"#\" class=\"group block w-full flex-shrink-0\">\n      <div class=\"flex items-center\">\n        <div>\n          <img class=\"inline-block h-9 w-9 rounded-full\" src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" alt=\"\">\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-white\">Tom Cook</p>\n          <p class=\"text-xs font-medium text-gray-300 group-hover:text-gray-200\">View profile</p>\n        </div>\n      </div>\n    </a>\n  </div> -->\n</div>\n","<div class=\"flex flex-wrap relative overflow-y-auto\">\n\n  <a\n    [routerLink]=\"item.url\"\n    type=\"button\"\n    (click)=\"fn(item)\"\n    *ngFor=\"let item of components; let i = index;\"\n    class=\"wrapper-container-{{i}}   cursor-pointer m-1 relative flex items-center\n      rounded-lg border border-gray-300\n      bg-[#303030] p-2 shadow-sm\n      focus:ring-2 focus:ring-rose-500 focus:ring-offset-1\n      hover:border-rose-400 hover:shadow-lg hover:ring-rose-400 hover:ring-1\n      w-full\n    \">\n    <div class=\"min-w-0 flex-1\">\n      <span\n        appFirstLetterColor\n        text=\"{{item.name}}\"\n        [id]=\"i\"\n        class=\"text-sm font-medium text-content\">\n      </span>\n    </div>\n  </a>\n\n</div>\n\n\n\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { StateService } from '../../data-access/state.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-glossary',\n  templateUrl: './glossary.component.html',\n  styleUrls: ['./glossary.component.scss'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GlossaryComponent implements OnInit {\n  components = [\n    {\n      \"name\": \"ahead-of-time (AOT) compilation\",\n      \"file_location\": \"components/aot\",\n      \"url\": \"aot\",\n      \"hashtags\": [\n        'performance', 'v19'\n      ]\n    },\n    {\n      \"name\": \"afterNextRender\",\n      \"file_location\": \"components/after-next-render\",\n      \"url\": \"after-next-render\",\n      \"hashtags\": [\n        'lifecycle', 'v19'\n      ]\n    },\n    {\n      \"name\": \"afterRender\",\n      \"file_location\": \"components/after-render\",\n      \"url\": \"after-render\",\n      \"hashtags\": [\n        'lifecycle', 'v19'\n      ]\n    },\n    {\n      \"name\": \"Angular DevTools\",\n      \"file_location\": \"components/angular-devtools\",\n      \"url\": \"angular-devtools\",\n      \"hashtags\": [\n        'debugging', 'v19'\n      ]\n    },\n    {\n      \"name\": \"Angular element\",\n      \"file_location\": \"components/angular-element\",\n      \"url\": \"angular-element\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"annotation\",\n      \"file_location\": \"components/annotation\",\n      \"url\": \"annotation\",\n      \"hashtags\": [\n        'v19'\n      ]\n    },\n    {\n      \"name\": \"app-shell\",\n      \"file_location\": \"components/app-shell\",\n      \"url\": \"app-shell\",\n      \"hashtags\": [\n        'v19', 'performance', 'ssr'\n      ]\n    },\n    {\n      \"name\": \"Architect\",\n      \"file_location\": \"components/architect\",\n      \"url\": \"architect\",\n      \"hashtags\": [\n        'v19', 'cli', 'build'\n      ]\n    },\n    {\n      \"name\": \"attribute directive\",\n      \"file_location\": \"components/attribute-directive\",\n      \"url\": \"attribute-directive\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"binding\",\n      \"file_location\": \"components/binding\",\n      \"url\": \"binding\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"bootstrap\",\n      \"file_location\": \"components/bootstrap\",\n      \"url\": \"bootstrap\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"built-in control flow\",\n      \"file_location\": \"components/control-flow\",\n      \"url\": \"control-flow\",\n      \"hashtags\": [\n        'v19'\n      ]\n    },\n    {\n      \"name\": \"builder\",\n      \"file_location\": \"components/builder\",\n      \"url\": \"builder\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"case types\",\n      \"file_location\": \"components/case-types\",\n      \"url\": \"case-types\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"change detection\",\n      \"file_location\": \"components/change-detection\",\n      \"url\": \"change-detection\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"class decorator\",\n      \"file_location\": \"components/class-decorator\",\n      \"url\": \"class-decorator\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"class field decorator\",\n      \"file_location\": \"components/class-field-decorator\",\n      \"url\": \"class-field-decorator\",\n      \"hashtags\": [\n        'v19'\n      ]\n    },\n    {\n      \"name\": \"collection\",\n      \"file_location\": \"components/collection\",\n      \"url\": \"collection\",\n      \"hashtags\": [\n        'v19', 'cli', 'schematics'\n      ]\n    },\n    {\n      \"name\": \"command-line interface (CLI)\",\n      \"file_location\": \"components/cli\",\n      \"url\": \"cli\",\n      \"hashtags\": [\n        'v19', 'tools', 'productivity'\n      ]\n    },\n    {\n      \"name\": \"component\",\n      \"file_location\": \"components/component\",\n      \"url\": \"component\",\n      \"hashtags\": [\n        'v19', 'fundamentals', 'architecture'\n      ]\n    },\n    {\n      \"name\": \"configuration\",\n      \"file_location\": \"components/configuration\",\n      \"url\": \"configuration\",\n      \"hashtags\": [\n        'v19', 'workspace', 'build'\n      ]\n    },\n    {\n      \"name\": \"content projection\",\n      \"file_location\": \"components/content-projection\",\n      \"url\": \"content-projection\",\n      \"hashtags\": [\n        'v19', 'component', 'template'\n      ]\n    },\n    {\n      \"name\": \"custom element\",\n      \"file_location\": \"components/custom-element\",\n      \"url\": \"custom-element\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"data binding\",\n      \"file_location\": \"components/data-binding\",\n      \"url\": \"data-binding\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"declarable\",\n      \"file_location\": \"components/declarable\",\n      \"url\": \"declarable\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"decorator | decoration\",\n      \"file_location\": \"components/decorator\",\n      \"url\": \"decorator\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"deferrable views\",\n      \"file_location\": \"components/deferrable-views\",\n      \"url\": \"deferrable-views\",\n      \"hashtags\": [\n        'v19', 'performance', 'lazy-loading'\n      ]\n    },\n    {\n      \"name\": \"dependency injection (DI)\",\n      \"file_location\": \"components/di\",\n      \"url\": \"di\",\n      \"hashtags\": [\n        'v19', 'core', 'services'\n      ]\n    },\n    {\n      \"name\": \"DI token\",\n      \"file_location\": \"components/di-token\",\n      \"url\": \"di-token\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"directive\",\n      \"file_location\": \"components/directive\",\n      \"url\": \"directive\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"domain-specific language (DSL)\",\n      \"file_location\": \"components/dsl\",\n      \"url\": \"dsl\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"dynamic component loading\",\n      \"file_location\": \"components/dynamic-component-loading\",\n      \"url\": \"dynamic-component-loading\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"eager loading\",\n      \"file_location\": \"components/eager-loading\",\n      \"url\": \"eager-loading\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"ECMAScript\",\n      \"file_location\": \"components/ecmascript\",\n      \"url\": \"ecmascript\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"element\",\n      \"file_location\": \"components/element\",\n      \"url\": \"element\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"entry point\",\n      \"file_location\": \"components/entry-point\",\n      \"url\": \"entry-point\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"form control\",\n      \"file_location\": \"components/form-control\",\n      \"url\": \"form-control\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"form model\",\n      \"file_location\": \"components/form-model\",\n      \"url\": \"form-model\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"form validation\",\n      \"file_location\": \"components/form-validation\",\n      \"url\": \"form-validation\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"hydration\",\n      \"file_location\": \"components/hydration\",\n      \"url\": \"hydration\",\n      \"hashtags\": [\n        'v19', 'performance', 'ssr'\n      ]\n    },\n    {\n      \"name\": \"immutability\",\n      \"file_location\": \"components/immutability\",\n      \"url\": \"immutability\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"injectable\",\n      \"file_location\": \"components/injectable\",\n      \"url\": \"injectable\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"injector\",\n      \"file_location\": \"components/injector\",\n      \"url\": \"injector\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"input\",\n      \"file_location\": \"components/input\",\n      \"url\": \"input\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"input transform\",\n      \"file_location\": \"components/input-transform\",\n      \"url\": \"input-transform\",\n      \"hashtags\": [\n        'v19'\n      ]\n    },\n    {\n      \"name\": \"interpolation\",\n      \"file_location\": \"components/interpolation\",\n      \"url\": \"interpolation\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"Ivy\",\n      \"file_location\": \"components/ivy\",\n      \"url\": \"ivy\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"JavaScript\",\n      \"file_location\": \"components/javascript\",\n      \"url\": \"javascript\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"just-in-time (JIT) compilation\",\n      \"file_location\": \"components/jit\",\n      \"url\": \"jit\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"lazy loading\",\n      \"file_location\": \"components/lazy-loading\",\n      \"url\": \"lazy-loading\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"library\",\n      \"file_location\": \"components/library\",\n      \"url\": \"library\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"lifecycle hook\",\n      \"file_location\": \"components/hooks\",\n      \"url\": \"hooks\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"module\",\n      \"file_location\": \"components/module\",\n      \"url\": \"module\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"ngcc\",\n      \"file_location\": \"components/ngcc\",\n      \"url\": \"ngcc\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"NgModule\",\n      \"file_location\": \"components/ngmodule\",\n      \"url\": \"ngmodule\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"npm package\",\n      \"file_location\": \"components/npm-package\",\n      \"url\": \"npm-package\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"ngc\",\n      \"file_location\": \"components/ngc\",\n      \"url\": \"ngc\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"observable\",\n      \"file_location\": \"components/observable\",\n      \"url\": \"observable\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"observer\",\n      \"file_location\": \"components/observer\",\n      \"url\": \"observer\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"output\",\n      \"file_location\": \"components/output\",\n      \"url\": \"output\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"partial hydration\",\n      \"file_location\": \"components/partial-hydration\",\n      \"url\": \"partial-hydration\",\n      \"hashtags\": [\n        'v19', 'performance', 'ssr'\n      ]\n    },\n    {\n      \"name\": \"pipe\",\n      \"file_location\": \"components/pipe\",\n      \"url\": \"pipe\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"platform\",\n      \"file_location\": \"components/platform\",\n      \"url\": \"platform\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"polyfill\",\n      \"file_location\": \"components/polyfill\",\n      \"url\": \"polyfill\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"project\",\n      \"file_location\": \"components/project\",\n      \"url\": \"project\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"provider\",\n      \"file_location\": \"components/provider\",\n      \"url\": \"provider\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"reactive form\",\n      \"file_location\": \"components/reactive-form\",\n      \"url\": \"reactive-form\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"resolver\",\n      \"file_location\": \"components/resolver\",\n      \"url\": \"resolver\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"route guard\",\n      \"file_location\": \"components/route-guard\",\n      \"url\": \"route-guard\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"router\",\n      \"file_location\": \"components/router\",\n      \"url\": \"router\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"router outlet\",\n      \"file_location\": \"components/router-outlet\",\n      \"url\": \"router-outlet\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"routing component\",\n      \"file_location\": \"components/routing-component\",\n      \"url\": \"routing-component\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"rule\",\n      \"file_location\": \"components/rule\",\n      \"url\": \"rule\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"schematic\",\n      \"file_location\": \"components/schematic\",\n      \"url\": \"schematic\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"Schematics CLI\",\n      \"file_location\": \"components/schematics-cli\",\n      \"url\": \"schematics-cli\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"scoped package\",\n      \"file_location\": \"components/scoped-package\",\n      \"url\": \"scoped-package\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"server-side rendering\",\n      \"file_location\": \"components/ssr\",\n      \"url\": \"ssr\",\n      \"hashtags\": [\n        'v19', 'performance', 'seo'\n      ]\n    },\n    {\n      \"name\": \"service\",\n      \"file_location\": \"components/service\",\n      \"url\": \"service\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"signal-based components\",\n      \"file_location\": \"components/signal-components\",\n      \"url\": \"signal-components\",\n      \"hashtags\": [\n        'v19', 'performance', 'reactive'\n      ]\n    },\n    {\n      \"name\": \"signals\",\n      \"file_location\": \"components/signals\",\n      \"url\": \"signals\",\n      \"hashtags\": [\n        'v19', 'reactivity', 'performance'\n      ]\n    },\n    {\n      \"name\": \"standalone\",\n      \"file_location\": \"components/standalone\",\n      \"url\": \"standalone\",\n      \"hashtags\": [\n        'v19', 'architecture', 'performance'\n      ]\n    },\n    {\n      \"name\": \"structural directive\",\n      \"file_location\": \"components/structural-directive\",\n      \"url\": \"structural-directive\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"styleUrl\",\n      \"file_location\": \"components/style-url\",\n      \"url\": \"style-url\",\n      \"hashtags\": [\n        'v19'\n      ]\n    },\n    {\n      \"name\": \"subscriber\",\n      \"file_location\": \"components/subscriber\",\n      \"url\": \"subscriber\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"target\",\n      \"file_location\": \"components/target\",\n      \"url\": \"target\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"template\",\n      \"file_location\": \"components/template\",\n      \"url\": \"template\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"template-driven forms\",\n      \"file_location\": \"components/template-form\",\n      \"url\": \"template-form\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"template expression\",\n      \"file_location\": \"components/template-expression\",\n      \"url\": \"template-expression\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"template reference variable\",\n      \"file_location\": \"components/template-reference-variable\",\n      \"url\": \"template-reference-variable\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"template input variable\",\n      \"file_location\": \"components/template-input-variable\",\n      \"url\": \"template-input-variable\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"token\",\n      \"file_location\": \"components/token\",\n      \"url\": \"token\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"transpile\",\n      \"file_location\": \"components/transpile\",\n      \"url\": \"transpile\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"tree\",\n      \"file_location\": \"components/tree\",\n      \"url\": \"tree\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"TypeScript\",\n      \"file_location\": \"components/typescript\",\n      \"url\": \"typescript\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"TypeScript configuration file\",\n      \"file_location\": \"components/typescript-configuration\",\n      \"url\": \"typescript-configuration\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"unidirectional data flow\",\n      \"file_location\": \"components/unidirectional-data-flow\",\n      \"url\": \"unidirectional-data-flow\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"Universal\",\n      \"file_location\": \"components/universal\",\n      \"url\": \"universal\",\n      \"hashtags\": [\n        'v19', 'ssr', 'performance'\n      ]\n    },\n    {\n      \"name\": \"view\",\n      \"file_location\": \"components/view\",\n      \"url\": \"view\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"View Engine\",\n      \"file_location\": \"components/view-engine\",\n      \"url\": \"view-engine\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"view hierarchy\",\n      \"file_location\": \"components/view-hierarchy\",\n      \"url\": \"view-hierarchy\",\n      \"hashtags\": [\n        'v19', 'performance', 'rendering'\n      ]\n    },\n    {\n      \"name\": \"view transitions\",\n      \"file_location\": \"components/view-transitions\",\n      \"url\": \"view-transitions\",\n      \"hashtags\": [\n        'v19', 'animation'\n      ]\n    },\n    {\n      \"name\": \"web component\",\n      \"file_location\": \"components/web-component\",\n      \"url\": \"web-component\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"workspace\",\n      \"file_location\": \"components/workspace\",\n      \"url\": \"workspace\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"workspace configuration\",\n      \"file_location\": \"components/workspace-configuration\",\n      \"url\": \"workspace-configuration\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"zone\",\n      \"file_location\": \"components/zone\",\n      \"url\": \"zone\",\n      \"hashtags\": [\n        ''\n      ]\n    },\n    {\n      \"name\": \"zoneless applications\",\n      \"file_location\": \"components/zoneless-applications\",\n      \"url\": \"zoneless-applications\",\n      \"hashtags\": [\n        'v19', 'performance', 'signals'\n      ]\n    },\n  ];\n\n  // bottomPills$!: Observable<{}[]>;\n\n  constructor(\n    private stateService: StateService,\n    private router: Router\n  ) {\n    // this.bottomPills$ = this.stateService.getBottomPills()\n  }\n\n  fn(s: {name: string}) {\n    console.log(s);\n    this.stateService.addBottomPills(s)\n  }\n\n  ngOnInit() {\n    // Update URLs based on routes\n    this.components.forEach(item => {\n      if (item.name === 'built-in control flow') {\n        item.url = '/angular/control-flow';\n      }\n      // ... existing code for other items ...\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-after-next-render',\n  templateUrl: './after-next-render.component.html',\n  styleUrls: ['./after-next-render.component.scss'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AfterNextRenderComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/after-next-render/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/after-next-render/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/after-next-render/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/after-next-render/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/after-next-render/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    afterNextRender\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">afterNextRender</span>\n      is a lifecycle hook introduced in Angular v17 that runs exactly once after the first render of a component is completed and committed to the DOM. This makes it ideal for integration with third-party libraries and executing code that requires the DOM to be fully rendered.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Overview\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Usage Examples\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related APIs\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"usageRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"bestPracticesRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"relatedApisRef;\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"overviewRef;\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #overviewRef>\n  <p class=\"mb-4\">\n    <span class=\"text-zinc-50 tw-font-medium\">afterNextRender</span> is a lifecycle hook designed for interacting with the DOM after the initial render is completed. Unlike <code>ngAfterViewInit</code>, this hook guarantees that the component's view has been fully committed to the DOM, making it safe to perform measurements, initialization of third-party libraries, or any operations requiring a stable DOM.\n  </p>\n\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">Key Features:</h3>\n  <ul class=\"list-disc pl-6 mb-4\">\n    <li>Runs exactly once after the first render is completed</li>\n    <li>Guarantees the DOM has been fully updated and committed</li>\n    <li>Executes in the browser environment only, not during server-side rendering</li>\n    <li>Works with both Zone.js-based and Zoneless applications</li>\n    <li>Available from Angular v17 onwards</li>\n  </ul>\n\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">\n    Syntax:\n    <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code1 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_1\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">When to Use:</h3>\n  <ul class=\"list-disc pl-6 mb-4\">\n    <li>Initializing third-party libraries that need access to DOM elements</li>\n    <li>Taking DOM measurements after the initial render</li>\n    <li>Setting up observers (ResizeObserver, IntersectionObserver, etc.)</li>\n    <li>Making initial API calls that depend on the rendered DOM state</li>\n    <li>Setting up animations that need to start after the first render</li>\n  </ul>\n</ng-template>\n\n<ng-template #usageRef>\n  <h3 class=\"text-lg font-semibold text-sky-400\">\n    Basic Usage:\n    <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n\n  <span #code2 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_2\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold mt-2 text-sky-400\">\n    Initializing a Third-party Library:\n    <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code3 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_3\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold mt-2 text-sky-400\">\n    Taking DOM Measurements:\n    <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code4 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_4\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold mt-2 text-sky-400\">\n    Using with Zoneless Applications:\n    <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code5 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_5\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n</ng-template>\n\n<ng-template #bestPracticesRef>\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">Best Practices:</h3>\n  <ul class=\"list-disc pl-6 mb-4\">\n    <li class=\"mb-3\">\n      <strong>Use for DOM-dependent Operations:</strong> Reserve <code>afterNextRender</code> for operations that genuinely require the DOM to be fully rendered. For data initialization or other non-DOM tasks, consider using <code>ngOnInit</code> instead.\n    </li>\n    <li class=\"mb-3\">\n      <strong>Clean Up Resources:</strong> If you set up subscriptions, observers, or other resources in <code>afterNextRender</code>, make sure to clean them up in <code>ngOnDestroy</code> to prevent memory leaks.\n    </li>\n    <li class=\"mb-3\">\n      <strong>Don't Trigger Additional Change Detection:</strong> Avoid operations that would trigger additional change detection cycles within <code>afterNextRender</code> as this could lead to performance issues.\n    </li>\n    <li class=\"mb-3\">\n      <strong>Consider Server-Side Rendering:</strong> Remember that <code>afterNextRender</code> only runs in browser environments, not during server-side rendering. Design your components to handle both scenarios gracefully.\n    </li>\n    <li class=\"mb-3\">\n      <strong>Prefer Over ngAfterViewInit When:</strong> Use <code>afterNextRender</code> instead of <code>ngAfterViewInit</code> when you need to be certain that the DOM has been fully committed, not just when Angular has initialized the view.\n    </li>\n  </ul>\n</ng-template>\n\n<ng-template #relatedApisRef>\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">Related APIs:</h3>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">afterRender</h4>\n    <p class=\"mb-2\">Similar to <code>afterNextRender</code>, but runs after every render cycle instead of just the first one.</p>\n    <ul class=\"list-disc pl-6 mb-2\">\n      <li>Use when you need to perform operations after every render, not just the initial one</li>\n      <li>Be careful with performance as it runs frequently</li>\n    </ul>\n  </div>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">ngAfterViewInit</h4>\n    <p class=\"mb-2\">Angular's traditional lifecycle hook that runs after a component's view has been initialized.</p>\n    <ul class=\"list-disc pl-6 mb-2\">\n      <li>Less reliable for DOM operations as it doesn't guarantee DOM commitment</li>\n      <li>Available in older Angular versions</li>\n    </ul>\n  </div>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">withAfterNextRender</h4>\n    <p class=\"mb-2\">Functional variant of the lifecycle hook for use in standalone components with functional setup.</p>\n  </div>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">ViewRef.detectChanges</h4>\n    <p class=\"mb-2\">Manual change detection API that can be used to trigger change detection.</p>\n    <ul class=\"list-disc pl-6 mb-2\">\n      <li>Often used in conjunction with afterNextRender for advanced use cases</li>\n    </ul>\n  </div>\n\n  <div class=\"mb-4 p-4 bg-gray-800 rounded border-l-4 border-yellow-500\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">⚠️ Important Note</h4>\n    <p>When using <code>afterNextRender</code> in a zoneless application, remember to manually trigger change detection if your operations might affect the component state.</p>\n  </div>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-after-render',\n  templateUrl: './after-render.component.html',\n  standalone: true,\n  imports: [CommonModule, HighlightModule]\n})\nexport class AfterRenderComponent {\n  selectedTab = 1;\n  counter = 0;\n  lastRenderTime = 0;\n\n  // Code examples for the templates\n  code_1 = `import { Component, afterRender } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html'\n})\nexport class ExampleComponent {\n  constructor() {\n    // Register a callback to run after every render\n    afterRender(() => {\n      // This code runs after each render cycle\n      console.log('View has been fully rendered and committed to DOM');\n    });\n  }\n}`;\n\n  code_2 = `import { Component, afterRender, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  template: \\`\n    <div>Count: {{ count() }}</div>\n    <button (click)=\"increment()\">Increment</button>\n  \\`\n})\nexport class CounterComponent {\n  count = signal(0);\n  renderCount = 0;\n\n  constructor() {\n    afterRender(() => {\n      this.renderCount++;\n      console.log(\\`Component rendered \\${this.renderCount} times\\`);\n\n      // We can safely access DOM elements here\n      const button = document.querySelector('button');\n      console.log('Button width:', button?.offsetWidth);\n    });\n  }\n\n  increment() {\n    this.count.update(val => val + 1);\n  }\n}`;\n\n  code_3 = `import { Component, ElementRef, ViewChild, afterRender } from '@angular/core';\n\n@Component({\n  selector: 'app-chart',\n  template: \\`<div #chartContainer class=\"chart-container\"></div>\\`\n})\nexport class ChartComponent {\n  @ViewChild('chartContainer') chartContainer!: ElementRef;\n  private chart: any;\n  data = [...]; // Chart data\n\n  constructor() {\n    // Set up chart library instance\n    this.chart = new ExternalChartLibrary();\n\n    // Update chart after every render\n    afterRender(() => {\n      if (this.chartContainer && this.data) {\n        // The DOM is guaranteed to be ready here\n        this.chart.render(this.chartContainer.nativeElement, this.data);\n      }\n    });\n  }\n\n  updateData(newData: any) {\n    this.data = newData;\n    // No need to call chart.render() - afterRender will handle it\n  }\n}`;\n\n  code_4 = `import { Component, ElementRef, ViewChild, afterRender, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog',\n  template: \\`\n    <button (click)=\"isOpen.set(true)\">Open Dialog</button>\n\n    @if (isOpen()) {\n      <div class=\"dialog\" role=\"dialog\" aria-labelledby=\"dialog-title\">\n        <h2 id=\"dialog-title\" #dialogTitle>Dialog Title</h2>\n        <div class=\"dialog-content\">Some content here</div>\n        <button (click)=\"isOpen.set(false)\">Close</button>\n      </div>\n    }\n  \\`\n})\nexport class DialogComponent {\n  isOpen = signal(false);\n  @ViewChild('dialogTitle') dialogTitle!: ElementRef;\n\n  constructor() {\n    afterRender(() => {\n      // If dialog is open, focus the title for accessibility\n      if (this.isOpen() && this.dialogTitle) {\n        this.dialogTitle.nativeElement.focus();\n      }\n    });\n  }\n}`;\n\n  code_5 = `import { Component, afterRender, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-optimized',\n  template: \\`\n    <div>{{ data() }}</div>\n    <button (click)=\"updateData()\">Update</button>\n  \\`\n})\nexport class OptimizedComponent {\n  data = signal('Initial data');\n  private needsLayoutUpdate = false;\n\n  constructor() {\n    afterRender(() => {\n      // Only perform expensive operations when needed\n      if (this.needsLayoutUpdate) {\n        this.updateLayout();\n        this.needsLayoutUpdate = false;\n      }\n    });\n  }\n\n  updateData() {\n    this.data.set('Updated: ' + new Date().toISOString());\n    this.needsLayoutUpdate = true;\n  }\n\n  private updateLayout() {\n    // Expensive layout calculations or DOM measurements\n    console.log('Performing expensive layout update');\n\n    // Example: calculate layout metrics\n    const elements = document.querySelectorAll('.layout-item');\n    // ... complex calculations ...\n  }\n}`;\n\n  constructor() {\n    // For live demo, we would use afterRender, but we're just showing code examples here\n    // The code below would be used in an actual implementation\n    /*\n    afterRender(() => {\n      this.counter++;\n      const now = performance.now();\n\n      if (this.lastRenderTime > 0) {\n        console.log(`Render #${this.counter} - Time since last render: ${(now - this.lastRenderTime).toFixed(2)}ms`);\n      }\n\n      this.lastRenderTime = now;\n    });\n    */\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    afterRender\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">afterRender</span>\n      is a lifecycle hook introduced in Angular v17 that runs after every render cycle of a component is completed and committed to the DOM. Unlike afterNextRender which runs only once, afterRender executes multiple times throughout the component's lifecycle, making it useful for consistent DOM synchronization.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Overview\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Usage Examples\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Comparison\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"usageRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"bestPracticesRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"comparisonRef;\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"overviewRef;\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #overviewRef>\n  <p class=\"mb-4\">\n    <span class=\"text-zinc-50 tw-font-medium\">afterRender</span> is a lifecycle hook that executes after each render cycle is completed. Unlike <code>ngAfterViewInit</code> or <code>ngAfterViewChecked</code>, this hook guarantees that the component's view has been fully committed to the DOM before executing, making it reliable for DOM interactions.\n  </p>\n\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">Key Features:</h3>\n  <ul class=\"list-disc pl-6 mb-4\">\n    <li>Runs after <i>every</i> render cycle is completed (not just the first one)</li>\n    <li>Guarantees the DOM has been fully updated and committed</li>\n    <li>Executes in the browser environment only, not during server-side rendering</li>\n    <li>Works with both Zone.js-based and Zoneless applications</li>\n    <li>Available from Angular v17 onwards</li>\n  </ul>\n\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">\n    Syntax:\n    <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code1 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_1\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">When to Use:</h3>\n  <ul class=\"list-disc pl-6 mb-4\">\n    <li>Synchronizing third-party UI components with Angular's state changes</li>\n    <li>Performing DOM measurements after each render</li>\n    <li>Updating canvas or SVG elements in response to data changes</li>\n    <li>Implementing custom scroll position restoration</li>\n    <li>Handling focus management for accessibility after UI updates</li>\n  </ul>\n\n  <div class=\"mb-4 p-4 bg-gray-800 rounded border-l-4 border-yellow-500\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">⚠️ Performance Warning</h4>\n    <p>Since <code>afterRender</code> runs after every render cycle, be mindful of performance implications. Perform expensive operations conditionally when necessary rather than on every render.</p>\n  </div>\n</ng-template>\n\n<ng-template #usageRef>\n  <h3 class=\"text-lg font-semibold text-sky-400\">\n    Basic Usage:\n    <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n\n  <span #code2 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_2\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold mt-2 text-sky-400\">\n    Syncing with Third-party Libraries:\n    <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code3 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_3\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold mt-2 text-sky-400\">\n    Managing Focus for Accessibility:\n    <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code4 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_4\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold mt-2 text-sky-400\">\n    Performance Optimization:\n    <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code5 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_5\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n</ng-template>\n\n<ng-template #bestPracticesRef>\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">Best Practices:</h3>\n  <ul class=\"list-disc pl-6 mb-4\">\n    <li class=\"mb-3\">\n      <strong>Be Performance Conscious:</strong> Since <code>afterRender</code> runs after every render cycle, ensure that the operations performed inside are optimized and not computationally expensive, as they could impact frame rates.\n    </li>\n    <li class=\"mb-3\">\n      <strong>Implement Conditional Execution:</strong> Use state flags or comparisons to determine if operations within <code>afterRender</code> are actually needed for a particular render cycle.\n    </li>\n    <li class=\"mb-3\">\n      <strong>Clean Up Resources:</strong> If you set up subscriptions or observers in <code>afterRender</code>, make sure to clean them up in <code>ngOnDestroy</code> to prevent memory leaks.\n    </li>\n    <li class=\"mb-3\">\n      <strong>Avoid Triggering Change Detection:</strong> Be careful not to trigger additional change detection cycles from within <code>afterRender</code> to prevent infinite loops.\n    </li>\n    <li class=\"mb-3\">\n      <strong>Handle SSR Gracefully:</strong> Remember that <code>afterRender</code> only runs in browser environments. Design your components to handle server-side rendering without relying on this hook.\n    </li>\n    <li class=\"mb-3\">\n      <strong>Compare with afterNextRender:</strong> For one-time DOM initialization, prefer <code>afterNextRender</code> over <code>afterRender</code> for better performance.\n    </li>\n  </ul>\n\n  <div class=\"mb-4 p-4 bg-gray-800 rounded border-l-4 border-green-500\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">💡 Pro Tip</h4>\n    <p>For expensive DOM operations, consider debouncing or throttling the function called within <code>afterRender</code> to improve performance, especially for rapidly changing data.</p>\n  </div>\n</ng-template>\n\n<ng-template #comparisonRef>\n  <h3 class=\"text-lg font-semibold mb-4 text-sky-400\">Comparison with Other Lifecycle Hooks</h3>\n\n  <div class=\"overflow-x-auto\">\n    <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-6\">\n      <thead>\n        <tr class=\"bg-gray-800 text-gray-100\">\n          <th class=\"py-3 px-4 text-left\">Lifecycle Hook</th>\n          <th class=\"py-3 px-4 text-left\">When It Runs</th>\n          <th class=\"py-3 px-4 text-left\">Guaranteed DOM?</th>\n          <th class=\"py-3 px-4 text-left\">Frequency</th>\n          <th class=\"py-3 px-4 text-left\">Best For</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\"><code>afterRender</code></td>\n          <td class=\"py-3 px-4\">After each render cycle is committed</td>\n          <td class=\"py-3 px-4 text-green-500\">Yes</td>\n          <td class=\"py-3 px-4\">Multiple times</td>\n          <td class=\"py-3 px-4\">Continuous DOM sync with state</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\"><code>afterNextRender</code></td>\n          <td class=\"py-3 px-4\">After first render is committed</td>\n          <td class=\"py-3 px-4 text-green-500\">Yes</td>\n          <td class=\"py-3 px-4\">Once only</td>\n          <td class=\"py-3 px-4\">Initial DOM setup</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\"><code>ngAfterViewInit</code></td>\n          <td class=\"py-3 px-4\">After component's view is initialized</td>\n          <td class=\"py-3 px-4 text-red-500\">No</td>\n          <td class=\"py-3 px-4\">Once only</td>\n          <td class=\"py-3 px-4\">Initial component setup</td>\n        </tr>\n        <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\"><code>ngAfterViewChecked</code></td>\n          <td class=\"py-3 px-4\">After change detection checks component's view</td>\n          <td class=\"py-3 px-4 text-red-500\">No</td>\n          <td class=\"py-3 px-4\">Multiple times</td>\n          <td class=\"py-3 px-4\">Responding to view changes</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">Key Differences from afterNextRender:</h3>\n  <ul class=\"list-disc pl-6 mb-4\">\n    <li><code>afterRender</code> runs after every render, while <code>afterNextRender</code> runs only once after the first render.</li>\n    <li>Use <code>afterRender</code> when you need to continuously sync with DOM changes throughout the component's lifecycle.</li>\n    <li>Using <code>afterRender</code> without proper optimization can impact performance more than <code>afterNextRender</code>.</li>\n  </ul>\n\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">Key Differences from ngAfterViewChecked:</h3>\n  <ul class=\"list-disc pl-6 mb-4\">\n    <li><code>afterRender</code> guarantees the DOM has been committed, while <code>ngAfterViewChecked</code> runs after change detection but before the browser has painted.</li>\n    <li><code>afterRender</code> is safer for DOM measurements and manipulations as it ensures the browser has rendered the changes.</li>\n    <li><code>ngAfterViewChecked</code> may run more frequently in some cases, as it's tied to Angular's change detection.</li>\n  </ul>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-angular-devtools',\n  templateUrl: './angular-devtools.component.html',\n  standalone: true,\n  imports: [CommonModule, HighlightModule]\n})\nexport class AngularDevToolsComponent {\n  selectedTab = 1;\n\n  // Code examples for the templates\n  code_1 = `// Installing Angular DevTools Chrome extension\n// Visit the Chrome Web Store and search for \"Angular DevTools\"\n// Or go directly to:\n// https://chrome.google.com/webstore/detail/angular-devtools/ienfalfjdbdpebioblfackkekamfmbnh\n\n// No code required - it's a browser extension!`;\n\n  code_2 = `// Sample code showing how to use the Performance tab\n// In your component:\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-performance-optimized',\n  template: \\`\n    <div>{{ expensiveCalculation() }}</div>\n    <button (click)=\"triggerChange()\">Update</button>\n  \\`,\n  changeDetection: ChangeDetectionStrategy.OnPush // Optimize change detection\n})\nexport class PerformanceOptimizedComponent {\n  data = 0;\n\n  triggerChange() {\n    this.data++;\n  }\n\n  expensiveCalculation() {\n    // This would be detected as a potential performance issue\n    console.time('calculation');\n    // Simulating expensive calculation\n    let result = this.data;\n    for (let i = 0; i < 1000; i++) {\n      result += Math.sqrt(i);\n    }\n    console.timeEnd('calculation');\n    return result.toFixed(2);\n  }\n}`;\n\n  code_3 = `// Sample code showing component debugging with Signals\nimport { Component, signal, computed } from '@angular/core';\n\n@Component({\n  selector: 'app-signals-debug',\n  template: \\`\n    <div>Counter: {{ counter() }}</div>\n    <div>Doubled: {{ doubled() }}</div>\n    <button (click)=\"increment()\">Increment</button>\n  \\`\n})\nexport class SignalsDebugComponent {\n  // These signals will be visible in the Components tab\n  counter = signal(0);\n  doubled = computed(() => this.counter() * 2);\n\n  increment() {\n    this.counter.update(value => value + 1);\n  }\n}`;\n\n  code_4 = `// Sending debug data for profiling\nimport { ApplicationRef, NgZone } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  template: \\`<div>Profiling example</div>\\`\n})\nexport class ProfileComponent implements OnInit {\n  constructor(\n    private appRef: ApplicationRef,\n    private ngZone: NgZone\n  ) {}\n\n  ngOnInit() {\n    // This will trigger events that DevTools can profile\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        // Force several change detection cycles for profiling\n        for (let i = 0; i < 5; i++) {\n          this.appRef.tick();\n        }\n      }, 3000);\n    });\n  }\n}`;\n\n  code_5 = `// Creating a directive that can be inspected\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appInspectable]'\n})\nexport class InspectableDirective {\n  @Input() appInspectable: string = '';\n  @Input() debugData: any;\n\n  // These properties will be visible in the Components tab\n  // when you inspect an element with this directive\n}\n\n// Usage:\n// <div [appInspectable]=\"'Test'\" [debugData]=\"{ key: 'value' }\">\n//   This element can be inspected in DevTools\n// </div>`;\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Angular DevTools\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Angular DevTools</span>\n      is a browser extension for Chrome and Edge that provides debugging and profiling capabilities for Angular applications. It helps developers inspect component state, analyze change detection performance, and debug applications more effectively, with enhanced support for modern Angular features like Signals in Angular 19.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Overview\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Features\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Usage\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Angular 19 Updates\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"featuresRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"usageRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"v19UpdatesRef;\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"overviewRef;\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #overviewRef>\n  <p class=\"mb-4\">\n    <span class=\"text-zinc-50 tw-font-medium\">Angular DevTools</span> is a browser extension developed by the Angular team to help developers debug, profile, and optimize Angular applications. It integrates directly with the browser's developer tools and provides Angular-specific debugging capabilities.\n  </p>\n\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">Installation:</h3>\n  <p class=\"mb-4\">Angular DevTools can be installed from:</p>\n  <ul class=\"list-disc pl-6 mb-4\">\n    <li><a href=\"https://chrome.google.com/webstore/detail/angular-devtools/ienfalfjdbdpebioblfackkekamfmbnh\" class=\"text-sky-400 hover:text-rose-400 underline\" target=\"_blank\">Chrome Web Store</a> for Chrome users</li>\n    <li><a href=\"https://microsoftedge.microsoft.com/addons/detail/angular-devtools/lfnclejohnknlgpgpdelmmmpfmcmnamj\" class=\"text-sky-400 hover:text-rose-400 underline\" target=\"_blank\">Microsoft Edge Add-ons</a> for Edge users</li>\n  </ul>\n\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">\n    Extension Setup:\n    <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code1 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>plaintext</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_1\" [languages]=\"['plaintext']\"></code></pre>\n  </span>\n\n  <div class=\"mb-4 p-4 bg-gray-800 rounded border-l-4 border-green-500\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">💡 Compatibility</h4>\n    <p>Angular DevTools works with Angular v12 and newer applications. The extension automatically detects Angular applications running in the browser and will only activate when needed.</p>\n  </div>\n</ng-template>\n\n<ng-template #featuresRef>\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">Core Features:</h3>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">Components Tab</h4>\n    <ul class=\"list-disc pl-6 mb-3\">\n      <li>Explore component tree with hierarchical visualization</li>\n      <li>Inspect component properties, inputs, outputs, and state</li>\n      <li>View component metadata and source location</li>\n      <li>Real-time updates as component state changes</li>\n      <li>Signal-based state visualization (Angular 19+)</li>\n    </ul>\n    <img src=\"assets/images/angular-devtools-components.png\" alt=\"Angular DevTools Components Tab\" class=\"rounded-md shadow-md mb-2 max-w-full\">\n  </div>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">Profiler Tab</h4>\n    <ul class=\"list-disc pl-6 mb-3\">\n      <li>Record and visualize change detection cycles</li>\n      <li>Identify performance bottlenecks in rendering</li>\n      <li>Measure time spent in change detection</li>\n      <li>Detailed breakdown by component</li>\n      <li>Timeline visualization for performance monitoring</li>\n    </ul>\n    <img src=\"assets/images/angular-devtools-profiler.png\" alt=\"Angular DevTools Profiler Tab\" class=\"rounded-md shadow-md mb-2 max-w-full\">\n  </div>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">Directive Explorer</h4>\n    <ul class=\"list-disc pl-6 mb-3\">\n      <li>Discover directives applied to DOM elements</li>\n      <li>Inspect directive properties and state</li>\n      <li>View directive dependencies and inputs</li>\n    </ul>\n  </div>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">Router Debugging</h4>\n    <ul class=\"list-disc pl-6 mb-3\">\n      <li>Inspect current route configuration</li>\n      <li>View active routes and route parameters</li>\n      <li>Monitor route changes in real-time</li>\n    </ul>\n  </div>\n\n  <div class=\"mb-4 p-4 bg-gray-800 rounded border-l-4 border-blue-500\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">📈 Angular 19 Enhancements</h4>\n    <p>Angular 19 introduced enhanced DevTools support for Signals API, zoneless applications, and improved profiling metrics for modern applications.</p>\n  </div>\n</ng-template>\n\n<ng-template #usageRef>\n  <h3 class=\"text-lg font-semibold mb-2 text-sky-400\">Using Angular DevTools:</h3>\n\n  <p class=\"mb-4\">After installing the extension, follow these steps to debug your Angular application:</p>\n\n  <ol class=\"list-decimal pl-6 mb-4\">\n    <li class=\"mb-2\">Open your Angular application in the browser</li>\n    <li class=\"mb-2\">Right-click and select \"Inspect\" or press F12 to open Developer Tools</li>\n    <li class=\"mb-2\">Find the \"Angular\" tab in the developer tools panel</li>\n    <li class=\"mb-2\">Navigate between Components and Profiler tabs based on your debugging needs</li>\n  </ol>\n\n  <h3 class=\"text-lg font-semibold text-sky-400 mt-6 mb-2\">\n    Performance Profiling:\n    <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code2 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_2\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold text-sky-400 mt-6 mb-2\">\n    Debugging Signals:\n    <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code3 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_3\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold text-sky-400 mt-6 mb-2\">\n    Advanced Profiling:\n    <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code4 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_4\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <h3 class=\"text-lg font-semibold text-sky-400 mt-6 mb-2\">\n    Custom Inspectable Elements:\n    <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  </h3>\n  <span #code5 copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre class=\"mt-4\"><code [highlight]=\"code_5\" [languages]=\"['typescript']\"></code></pre>\n  </span>\n\n  <div class=\"mb-4 p-4 bg-gray-800 rounded border-l-4 border-yellow-500 mt-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">⚠️ Production Mode Limitation</h4>\n    <p>Angular DevTools provides the most detailed information when your application runs in development mode. In production mode with optimizations enabled, some debugging information may be limited due to minification and tree shaking.</p>\n  </div>\n</ng-template>\n\n<ng-template #v19UpdatesRef>\n  <h3 class=\"text-lg font-semibold mb-4 text-sky-400\">Angular 19 DevTools Enhancements</h3>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-2\">Enhanced Signals Debugging</h4>\n    <ul class=\"list-disc pl-6 mb-3\">\n      <li>Full visualization of Signal graphs and dependencies</li>\n      <li>Real-time monitoring of Signal value changes</li>\n      <li>Ability to track computed Signal relationships</li>\n      <li>Signal-based component rendering visualization</li>\n    </ul>\n  </div>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-2\">Zoneless Applications Support</h4>\n    <ul class=\"list-disc pl-6 mb-3\">\n      <li>Debugging capabilities for applications using the new zoneless change detection</li>\n      <li>Performance profiling specifically for zoneless rendering</li>\n      <li>Component update tracking without Zone.js</li>\n    </ul>\n  </div>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-2\">Improved Profiler Performance</h4>\n    <ul class=\"list-disc pl-6 mb-3\">\n      <li>Lower overhead when profiling applications</li>\n      <li>More accurate timing measurements</li>\n      <li>Better visualization of rendering bottlenecks</li>\n      <li>Specific metrics for modern rendering strategies</li>\n    </ul>\n  </div>\n\n  <div class=\"mb-6\">\n    <h4 class=\"font-medium text-zinc-50 mb-2\">Component Explorer Enhancements</h4>\n    <ul class=\"list-disc pl-6 mb-3\">\n      <li>Support for standalone components with their imports</li>\n      <li>Better visualization of component hierarchies</li>\n      <li>Enhanced property inspection for complex objects</li>\n      <li>Direct linking to source code when source maps are available</li>\n    </ul>\n  </div>\n\n  <div class=\"overflow-x-auto mt-6\">\n    <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-6\">\n      <thead>\n        <tr class=\"bg-gray-800 text-gray-100\">\n          <th class=\"py-3 px-4 text-left\">Feature</th>\n          <th class=\"py-3 px-4 text-left\">Pre-Angular 19</th>\n          <th class=\"py-3 px-4 text-left\">Angular 19+</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Signals Support</td>\n          <td class=\"py-3 px-4\">Basic value display</td>\n          <td class=\"py-3 px-4 text-green-500\">Full graph visualization</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Zoneless Applications</td>\n          <td class=\"py-3 px-4\">Limited</td>\n          <td class=\"py-3 px-4 text-green-500\">Full support</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Profiler Overhead</td>\n          <td class=\"py-3 px-4\">Moderate</td>\n          <td class=\"py-3 px-4 text-green-500\">Minimal</td>\n        </tr>\n        <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Component Inspection</td>\n          <td class=\"py-3 px-4\">Basic hierarchy</td>\n          <td class=\"py-3 px-4 text-green-500\">Enhanced with imports</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"mb-4 p-4 bg-gray-800 rounded border-l-4 border-green-500\">\n    <h4 class=\"font-medium text-zinc-50 mb-1\">💡 Developer Experience</h4>\n    <p>Angular 19's DevTools enhancements significantly improve the developer experience when working with modern Angular features like signals and zoneless applications, making debugging and performance optimization more intuitive.</p>\n  </div>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-angular-element',\n  templateUrl: './angular-element.component.html',\n  styleUrls: ['./angular-element.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AngularElementComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_19 = ''; // Modern code example with the sequential number pattern\n\n  // Best practices code examples\n  codeb_1 = '';\n  codeb_2 = '';\n  codeb_3 = '';\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/angular-element/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/angular-element/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/angular-element/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/angular-element/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/angular-element/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n    this.http.get('assets/codes/angular-element/notes/code_19.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_19 = data);\n\n    this.http.get('assets/codes/angular-element/best/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_1 = data);\n\n    this.http.get('assets/codes/angular-element/best/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_2 = data);\n\n    this.http.get('assets/codes/angular-element/best/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_3 = data);\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Angular Element\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Angular Elements</span> is a feature in Angular that allows you to use Angular components as custom elements (Web Components) in non-Angular environments or different frameworks. This is particularly useful for integrating Angular components into existing non-Angular applications or sharing reusable components across various projects.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>What are Angular Elements?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Angular Elements</strong>:\n      A package in Angular that allows you to create custom elements (standard Web Components) from Angular components.\n      Custom elements can be used in any web application, regardless of the underlying framework.\n    </li>\n    <li>\n      <strong>Custom Elements</strong>:\n      Part of the Web Components standard, custom elements are fully encapsulated, reusable HTML elements with custom behavior defined by JavaScript.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Why Use Angular Elements?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Framework Agnostic</strong>:\n      Create reusable components that can be used in any web application (React, Vue, plain HTML, etc.).\n    </li>\n    <li>\n      <strong>Seamless Integration</strong>:\n      Integrate Angular components into existing non-Angular applications without needing a full Angular environment.\n    </li>\n    <li>\n      <strong>Encapsulation</strong>:\n      Custom elements are encapsulated with their styles and scripts, preventing conflicts with other components or frameworks.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>New Features in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Default Standalone Components</strong>:\n      Angular 19 makes standalone components the default, significantly simplifying the creation of Angular Elements by eliminating NgModule boilerplate code and reducing configuration steps.\n    </li>\n    <li>\n      <strong>Enhanced Bootstrap Performance</strong>:\n      Custom elements now bootstrap more efficiently in Angular 19, with optimized initialization that results in faster startup times and smoother integration with host applications.\n    </li>\n    <li>\n      <strong>Improved Browser Compatibility</strong>:\n      Angular 19 provides better support across all browsers, especially those with less mature Web Component implementations, ensuring consistent behavior without additional polyfills in many cases.\n    </li>\n    <li>\n      <strong>Hydration Support</strong>:\n      New hydration techniques allow Angular Elements to initialize faster in server-rendered applications, with optimized state preservation during hydration that significantly improves performance.\n    </li>\n    <li>\n      <strong>Advanced Tree-Shaking</strong>:\n      The Ivy compiler in Angular 19 provides more effective tree-shaking specifically optimized for custom elements, dramatically reducing bundle sizes when compared to previous Angular versions.\n    </li>\n    <li>\n      <strong>Reduced Bundle Size</strong>:\n      Angular 19 produces significantly smaller bundle sizes for custom elements, making them more practical for production use in scenarios where performance is critical.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Key Concepts of Angular Elements</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Creating Custom Elements</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular Elements allows you to convert Angular components into custom elements by wrapping them in a minimal Angular module.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Using <code>createCustomElement</code></strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>The <code>createCustomElement</code> function from <code>&#64;angular/elements</code> is used to define a custom element from an Angular component.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Polyfills for Browser Compatibility</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Some browsers may require polyfills to support custom elements and other Web Component features. Angular Elements includes these polyfills to ensure compatibility across different browsers.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>How to Create an Angular Element</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Install necessary packages</strong>:\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>bash</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['bash']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n\n    <li>\n      <strong>Create an Angular Component</strong>:\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n\n    <li>\n      <strong>Convert the Component to a Custom Element</strong>:\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n\n    <li>\n      <strong>Build and use the custom element</strong>:\n\n      <button (click)=\"code19.hidden = !code19.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code19 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_19\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Common Commands and Tips</p>\n  <br>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Command</th>\n        <th class=\"py-3 px-4 text-left\">Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng add &#64;angular/elements</code></td>\n        <td class=\"py-3 px-4\">Installs Angular Elements and necessary dependencies.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng build --configuration production</code></td>\n        <td class=\"py-3 px-4\">Builds the Angular app in production mode with optimizations.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>npm install &#64;webcomponents/custom-elements</code></td>\n        <td class=\"py-3 px-4\">Installs polyfills for browser compatibility.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>customElements.define('name', element)</code></td>\n        <td class=\"py-3 px-4\">Registers the custom element with the browser.</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Keep Components Lightweight</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Minimize Dependencies</strong>:\n          Ensure that Angular components you convert to custom elements are lightweight and do not depend heavily on Angular-specific libraries or services.\n          Heavy dependencies increase the bundle size and reduce the element's performance.\n        </li>\n        <li>\n          <strong>Reduce Component Complexity</strong>:\n          Keep the logic within Angular Elements simple. Avoid using complex Angular features like dependency injection for services that aren't necessary for the element's functionality.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Build Size and Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Angular CLI Optimizations</strong>:\n          Use Angular's production build flags (<code>ng build --prod</code>) to minimize the bundle size. This enables AOT compilation, tree-shaking, minification, and other optimizations that reduce the size of the custom element and improve its performance.\n        </li>\n        <li>\n          <strong>Remove Unnecessary Angular Features</strong>:\n          If your Angular Element doesn't need <code>Zone.js</code> (used for Angular's change detection), remove it from the build. This will significantly reduce the bundle size and improve performance when using the custom element in non-Angular environments.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Angular's Ivy Rendering Engine</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Ivy's Advantages</strong>:\n          Angular 19 uses the Ivy rendering engine with significant enhancements for Angular Elements. Ivy in Angular 19 provides even smaller bundle sizes, faster compilation, and better performance for custom elements.\n        </li>\n        <li>\n          <strong>Fine-Tune Ivy's Configuration</strong>:\n          Configure the Ivy compiler to optimize for size by enabling specific options like <code>\"sideEffects\": false</code> in the <code>package.json</code> of your Angular project.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Proper Encapsulation and Style Isolation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Shadow DOM</strong>:\n          Use Shadow DOM to encapsulate styles and templates. This ensures that the styles of your Angular Element do not conflict with or leak into the global styles of the host application. You can enable Shadow DOM by setting the <code>encapsulation</code> property in the component decorator.\n\n          <button (click)=\"code1b.hidden = !code1b.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code1b hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"codeb_1\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Minimize Style Dependencies</strong>:\n          Keep the styles of your Angular Element minimal and avoid using global styles or external stylesheets that can interfere with the host application's styles.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Use Polyfills for Cross-Browser Compatibility</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Add Necessary Polyfills</strong>:\n          Ensure your custom elements work across all browsers by adding the required polyfills for Web Components. Include polyfills for custom elements and Shadow DOM if you want to support older browsers like Internet Explorer or Edge Legacy.\n\n          <button (click)=\"codeb2.hidden = !codeb2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #codeb2 hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>bash</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"codeb_2\"\n                [languages]=\"['bash']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Add Polyfills to <code>angular.json</code></strong>:\n\n          <button (click)=\"codeb3.hidden = !codeb3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #codeb3 hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>json</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"codeb_3\"\n                [languages]=\"['json']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Design for Reusability and Configurability</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Input and Output Properties</strong>:\n          Expose configurable inputs and outputs to make your Angular Elements flexible and reusable in different contexts.\n          Use <code>&#64;Input()</code> and <code>&#64;Output()</code> decorators to define properties and events.\n        </li>\n        <li>\n          <strong>Avoid Hardcoding</strong>:\n          Avoid hardcoding values or styles inside your Angular Elements. Allow them to be configured through properties or attributes so they can adapt to different environments.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Testing and Debugging</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Regularly Test Across Different Frameworks</strong>:\n          Test your Angular Elements in various environments, including Angular, React, Vue, and plain HTML, to ensure they behave as expected.\n        </li>\n        <li>\n          <strong>Use Angular DevTools</strong>:\n          Use Angular DevTools or browser development tools to debug and monitor the behavior of your custom elements.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Consider Accessibility</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Ensure Accessibility Standards</strong>:\n          Follow accessibility best practices (like ARIA roles and attributes) to ensure your Angular Elements are accessible to all users.\n          This is especially important when integrating into different environments that might have varying accessibility requirements.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Properly Document the Element API</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Create Documentation</strong>:\n          Provide clear documentation for the custom element, including its inputs, outputs, events, and usage examples.\n          This will make it easier for other developers to understand and use your Angular Element.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Deploy and Distribute Efficiently</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use a CDN or Package Manager</strong>:\n          Distribute your Angular Elements via a Content Delivery Network (CDN) or a package manager (like npm) to make them easily consumable by other projects.\n        </li>\n        <li>\n          <strong>Version Your Elements</strong>:\n          Version your custom elements properly to ensure that updates and changes do not break existing applications using them.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Framework Agnostic</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reusable Across Multiple Frameworks</span>:\n          Angular Elements are framework-agnostic, meaning you can use them in any web application, such as those built with React, Vue, or plain HTML/JavaScript.\n          This promotes component reuse across different projects and teams, saving development time and effort.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Encapsulation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Style and Behavior Isolation</span>:\n          By leveraging the Web Components standard and features like Shadow DOM, Angular Elements provide encapsulation of styles and behaviors.\n          This prevents styles from leaking in or out, ensuring that the custom element behaves consistently across different environments.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration with Existing Applications</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Smooth Integration</span>:\n          Angular Elements allow you to gradually integrate Angular components into existing non-Angular applications without the need for a complete rewrite.\n          This is useful for projects where you want to modernize or enhance parts of an existing app incrementally.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Leverage Angular's Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Rich Component Ecosystem</span>:\n          Angular Elements can take advantage of Angular's powerful component model, including features like dependency injection, two-way data binding, and services.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Support for Ivy Rendering Engine</span>:\n          Angular 19 uses the Ivy rendering engine, which makes Angular Elements smaller and more efficient, benefiting from better performance and improved tree-shaking.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Standard-Based</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Web Standards Compliance</span>:\n          Custom elements are part of the Web Components standard, which means Angular Elements can be used in any environment that supports standard web technologies. This future-proofs the components and ensures broad compatibility.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Ease of Use for Non-Angular Developers</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Simple API</span>:\n          Angular Elements provide a simple API for non-Angular developers, making it easy to use Angular components without needing to understand the full Angular framework.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Maintainability and Versioning</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Decoupled Components</span>:\n          Since Angular Elements can be used as standalone components, they can be maintained, versioned, and deployed independently of the main application, simplifying maintenance and updates.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Increased Bundle Size</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Larger JavaScript Files</span>:\n          When you create an Angular Element, the Angular framework and any dependencies it uses are bundled with the component.\n          This can result in larger file sizes, which may affect load times, especially for small or simple elements.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Requires Polyfills for Older Browsers</span>:\n          To ensure cross-browser compatibility, Angular Elements may require polyfills, which can further increase the bundle size.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Higher Memory and CPU Usage</span>:\n          Because Angular Elements bundle parts of the Angular runtime, there can be additional memory and CPU overhead compared to native Web Components or custom elements created using lighter-weight frameworks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Complex Build Process</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Build Complexity</span>:\n          Setting up the build process for Angular Elements can be more complex than for standard Angular components. This includes configuring polyfills, optimizing for size, and ensuring proper distribution.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Limited Dynamic Behavior</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Static Nature of Custom Elements</span>:\n          Angular Elements are designed to work as static custom elements, which may limit their use cases when highly dynamic behavior or tight integration with other frameworks is required.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Dependency on Angular Framework</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Version Locking</span>:\n          The Angular version used to create the Angular Element might need to match or be compatible with the version of Angular used in the consuming application, if any.\n          This can introduce challenges in mixed-environment teams where multiple Angular versions may coexist.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Heavy Dependency on Angular-Specific Features</span>:\n          The more you rely on Angular-specific features (e.g., services, dependency injection), the harder it may be to use Angular Elements in non-Angular contexts without including significant portions of the Angular runtime.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Testing Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Testing Across Different Environments</span>:\n          Since Angular Elements can be used in various environments, you may need to test them across multiple browsers and frameworks to ensure compatibility and consistent behavior, increasing testing overhead.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Limited Tooling and Debugging Support</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Fewer Debugging Tools</span>:\n          Compared to standard Angular components used within an Angular application, Angular Elements have limited support from Angular-specific debugging tools and IDE integrations.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Summary of Pros and Cons\n  </p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Pros</th>\n        <th class=\"py-3 px-4 text-left\">Cons</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Framework-agnostic; reusable across multiple frameworks</td>\n        <td class=\"py-3 px-4\">Increased bundle size due to the inclusion of Angular runtime and polyfills</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Encapsulation of styles and behaviors (Shadow DOM)</td>\n        <td class=\"py-3 px-4\">Higher memory and CPU usage compared to native custom elements</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Smooth integration into existing applications</td>\n        <td class=\"py-3 px-4\">Complex build process, especially for optimized builds</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Leverages Angular's features and Ivy optimizations</td>\n        <td class=\"py-3 px-4\">Limited dynamic behavior; may not suit highly interactive use cases</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Standards-based; compatible with modern web technologies</td>\n        <td class=\"py-3 px-4\">Dependency on Angular framework can lead to version-locking issues</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Simple API for non-Angular developers</td>\n        <td class=\"py-3 px-4\">Testing complexity across multiple environments</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Improved maintainability and versioning</td>\n        <td class=\"py-3 px-4\">Limited tooling and debugging support</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Web Componentsn</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n            <strong class=\"text-sky-400\">Description</strong>:\n            Web Components are a suite of standardized APIs that allow developers to create reusable, encapsulated components using custom elements, Shadow DOM, HTML templates, and JavaScript.\n            Web Components are framework-agnostic, making them compatible across various front-end frameworks.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Angular Elements</strong>:\n          Angular Elements leverage the Web Components standard to allow Angular components to be used as custom elements, enabling integration with other frameworks (e.g., React, Vue) or vanilla JavaScript applications.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Key Concepts</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">Custom Elements</span>\n              Define new HTML tags with custom behavior.\n            </li>\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">Shadow DOM</span>\n              Encapsulates styles and DOM structure to prevent style leakage.\n            </li>\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">HTML Templates</span>\n              Reusable HTML markup that is inert until instantiated.\n            </li>\n          </ul>\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Resources</strong>:\n          <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_components\" target=\"_blank\">Web Components Guide</a>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular Ivy Rendering Engine</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          <span class=\"text-zinc-50 tw-font-medium\">Ivy</span>\n          is the default rendering engine in Angular, starting from Angular 9. It is a more efficient compilation and rendering pipeline that results in smaller bundles, faster compilation times, and improved debugging.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Angular Elements</strong>:\n          Ivy enhances Angular Elements by making them smaller and more efficient. It allows for more effective tree-shaking (removing unused code) and supports advanced features like lazy loading and partial hydration, which are crucial for creating lightweight and performant custom elements.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Resources</strong>:\n          <a href=\"\" target=\"_blank\">Understanding Ivy</a>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Shadow DOM and Style Encapsulation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          <span class=\"text-zinc-50 tw-font-medium\">Shadow DOM</span>\n          is a Web Components technology that encapsulates a component's internal DOM structure and styles, preventing them from affecting or being affected by the external document's styles.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Angular Elements</strong>:\n          When creating Angular Elements, you can use Shadow DOM to encapsulate styles and behavior, ensuring that your custom elements remain isolated from the rest of the page's CSS. This is done by setting the <code>ViewEncapsulation</code> property to <code>ShadowDom</code> in the component decorator.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Resources</strong>:\n          <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_shadow_DOM\" target=\"_blank\">Shadow DOM Documentation</a>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Custom Elements Polyfills</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Polyfills are JavaScript libraries that provide support for Web Components features (like custom elements and Shadow DOM) in browsers that do not natively support them, such as older versions of Internet Explorer or Edge.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Angular Elements</strong>:\n          To ensure compatibility across different browsers, especially older ones, you need to include polyfills when using Angular Elements. This makes your custom elements usable in any environment.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Key Polyfills</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">&#64;webcomponents/custom-elements</span>:\n              Provides support for custom elements.\n            </li>\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">&#64;webcomponents/shadydom</span>:\n              Provides a polyfill for Shadow DOM.\n            </li>\n          </ul>\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Resources</strong>:\n          <a href=\"\" target=\"_blank\">Web Components Polyfills</a>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Dependency Injection in Angular Elements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Dependency Injection (DI) is a core Angular feature that allows you to inject services and other dependencies into components, pipes, and directives.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Angular Elements</strong>:\n          When creating Angular Elements, consider the impact of dependency injection on the size and complexity of your custom element.\n          Avoid injecting unnecessary services that increase the bundle size, and be mindful of how dependencies might affect the reusability and portability of the custom element.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Best Practices</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              Minimize dependencies within your Angular Elements to reduce the bundle size.\n            </li>\n            <li>\n              Use Angular's <code>Injector</code> to provide services only when necessary.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Lazy Loading and Code Splitting</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          <span class=\"text-zinc-50 tw-font-medium\">Lazy Loading</span>\n          is a technique to load feature modules or components only when they are needed, reducing the initial load time of the application.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Angular Elements</strong>:\n          Use lazy loading to defer loading of custom elements or heavy dependencies until they are required. This reduces the initial bundle size and improves performance, particularly for applications that use multiple custom elements.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Resources</strong>:\n          <a href=\"\" target=\"_blank\">Lazy Loading in Angular</a>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular CLI and Build Optimization</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          The <span class=\"text-zinc-50 tw-font-medium\">Angular CLI</span>\n          is a command-line tool that provides commands to initialize, develop, scaffold, and maintain Angular applications.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Angular Elements</strong>:\n          The Angular CLI can be used to build and package Angular Elements efficiently, applying optimizations like AOT (Ahead-of-Time) compilation, tree shaking, and minification to reduce the size of the custom element bundle.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Commands</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              <code>ng add &#64;angular/elements</code>:\n              Adds Angular Elements to your project.\n            </li>\n            <li>\n              <code>ng build --prod</code>:\n              Builds the application with AOT compilation, minification, and other optimizations enabled.\n            </li>\n          </ul>\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Resources</strong>:\n          <a href=\"\" target=\"_blank\">Angular CLI Documentation</a>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Cross-Framework Interoperability</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Interoperability refers to the ability of components or modules built with one framework (e.g., Angular) to work seamlessly with applications built using other frameworks (e.g., React, Vue).\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Angular Elements</strong>:\n          Angular Elements promote interoperability by allowing Angular components to be wrapped as Web Components, which are compatible across different frameworks. This enables developers to share functionality and UI elements between different projects, regardless of the frameworks involved.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Resources</strong>:\n          <a href=\"\" target=\"_blank\">Web Components with Frameworks</a>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimization Techniques</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Performance optimization techniques focus on reducing the size of the application bundle, improving load times, and minimizing memory usage.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Angular Elements</strong>:\n          Optimizing Angular Elements involves using techniques such as AOT compilation, tree shaking, and minification to produce smaller and faster custom elements. Additionally, developers can optimize the use of Shadow DOM and lazy loading to further improve performance.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Resources</strong>:\n          <a href=\"\" target=\"_blank\">Angular Performance Best Practices</a>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>Angular Elements in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Enhanced Standalone Components</strong>:\n      Angular 19 makes standalone components the default, eliminating the need for NgModules and making Angular Elements creation more streamlined and intuitive.\n    </li>\n    <li>\n      <strong>Faster Bootstrap Performance</strong>:\n      Custom elements bootstrap more efficiently in Angular 19, resulting in quicker initialization and better overall performance.\n    </li>\n    <li>\n      <strong>Improved Browser Compatibility</strong>:\n      Better support across all browsers, including those with less mature Web Component implementations.\n    </li>\n    <li>\n      <strong>Optimized Hydration Support</strong>:\n      Angular 19's hydration mechanisms allow Angular Elements to initialize faster and consume fewer resources when used in server-rendered applications.\n    </li>\n    <li>\n      <strong>Better Tree-Shaking</strong>:\n      Improvements to the Ivy compiler in Angular 19 provide more effective tree-shaking, resulting in smaller bundle sizes for custom elements.\n    </li>\n    <li>\n      <strong>Reduced Bundle Size</strong>:\n      Angular 19 produces significantly smaller bundle sizes for custom elements, making them more practical for production use in scenarios where performance is critical.\n    </li>\n  </ul>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { HttpClient } from '@angular/common/http';\nimport { takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-annotation',\n  templateUrl: './annotation.component.html',\n  styleUrls: ['./annotation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AnnotationComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  @ViewChild('code1') code1?: ElementRef;\n  @ViewChild('code2') code2?: ElementRef;\n  @ViewChild('code3') code3?: ElementRef;\n  @ViewChild('code4') code4?: ElementRef;\n  @ViewChild('code5') code5?: ElementRef;\n\n  componentCode = `@Component({\n  selector: 'app-profile',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div class=\"profile\">\n      <h2>{{ profile.name }}</h2>\n      <p>{{ profile.bio }}</p>\n    </div>\n  \\`\n})\nexport class ProfileComponent {\n  @Input() profile!: UserProfile;\n  @Output() profileUpdated = new EventEmitter<UserProfile>();\n\n  // Host binding example\n  @HostBinding('class.premium-user')\n  get isPremium() { return this.profile.subscription === 'premium'; }\n\n  // Host listener example\n  @HostListener('click')\n  onClick() {\n    console.log('Profile component clicked');\n  }\n}`;\n\n  directiveCode = `@Directive({\n  selector: '[appHighlight]',\n  standalone: true\n})\nexport class HighlightDirective {\n  // Property annotations using @Input with transform function\n  @Input({transform: (value: string) => value || 'yellow'})\n  highlightColor = 'yellow';\n\n  // Using @HostBinding to bind to host properties\n  @HostBinding('style.backgroundColor')\n  backgroundColor!: string;\n\n  // Using @HostListener to respond to events\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    this.backgroundColor = this.highlightColor;\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    this.backgroundColor = '';\n  }\n}`;\n\n  injectableCode = `@Injectable({\n  providedIn: 'root',\n  // Angular 19 adds support for function-based providers\n  factory: () => new LoggingService(inject(ErrorHandler))\n})\nexport class LoggingService {\n  constructor(\n    // Parameter annotations with @Inject\n    @Inject(ERROR_HANDLER) private errorHandler: ErrorHandler,\n    // Optional dependency injection\n    @Optional() @Inject(LOGGING_CONFIG) private config?: LoggingConfig\n  ) {}\n\n  log(message: string): void {\n    console.log(\\`[\\${this.config?.logLevel || 'INFO'}] \\${message}\\`);\n  }\n}`;\n\n  signalInputCode = `@Component({\n  selector: 'app-counter',\n  standalone: true,\n  template: \\`\n    <div>Count: {{ count() }}</div>\n    <button (click)=\"increment()\">Increment</button>\n  \\`\n})\nexport class CounterComponent {\n  // Using the new signal-based input in Angular 19\n  @Input({alias: 'initialValue'})\n  count = input<number>(0);\n\n  // Model input with validation and transform\n  @Model()\n  value = model<number>({\n    initialValue: 0,\n    transform: (v: number) => Math.max(0, v)\n  });\n\n  increment() {\n    this.value.update(v => v + 1);\n  }\n}`;\n\n  pipeCode = `@Pipe({\n  name: 'fileSize',\n  standalone: true,\n  pure: true\n})\nexport class FileSizePipe implements PipeTransform {\n  transform(bytes: number, decimals: number = 2): string {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // We're using inline code examples, but you can load them from files if needed\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Annotations in Angular\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Annotations</span>\n      in Angular 19 are TypeScript decorators that add metadata to classes, properties, methods, and parameters. Angular uses these annotations to understand how components, directives, services, and other features should be processed, instantiated, and used at runtime.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <div *ngIf=\"selectedTab === 1\">\n          <!-- Notes Tab -->\n          <p>Key Types of Angular Annotations</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Class Annotations</strong>:\n              Decorators applied to classes to declare their role in Angular's ecosystem.\n              <ul class=\"list-disc pl-4\">\n                <li><code>&#64;Component</code>: Defines a component with UI and behavior.</li>\n                <li><code>&#64;Directive</code>: Creates a reusable behavior without a template.</li>\n                <li><code>&#64;Injectable</code>: Marks a class as available for dependency injection.</li>\n                <li><code>&#64;Pipe</code>: Declares a transformation function for values in templates.</li>\n                <li><code>&#64;NgModule</code>: Defines a module (less common in Angular 19 with standalone components).</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Property Annotations</strong>:\n              Decorators applied to class properties.\n              <ul class=\"list-disc pl-4\">\n                <li><code>&#64;Input</code>: Declares a property that receives data from parent components.</li>\n                <li><code>&#64;Output</code>: Declares an event emitter that sends data to parent components.</li>\n                <li><code>&#64;HostBinding</code>: Binds a property to an attribute or property of the host element.</li>\n                <li><code>&#64;ViewChild / &#64;ViewChildren</code>: Gets references to elements in the template.</li>\n                <li><code>&#64;ContentChild / &#64;ContentChildren</code>: Gets references to projected content.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Method Annotations</strong>:\n              Decorators applied to class methods.\n              <ul class=\"list-disc pl-4\">\n                <li><code>&#64;HostListener</code>: Subscribes to events on the host element.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Parameter Annotations</strong>:\n              Decorators applied to constructor parameters or method parameters.\n              <ul class=\"list-disc pl-4\">\n                <li><code>&#64;Inject</code>: Specifies a custom provider token.</li>\n                <li><code>&#64;Optional</code>: Makes a dependency optional.</li>\n                <li><code>&#64;Self / &#64;SkipSelf</code>: Controls where to look for dependencies.</li>\n                <li><code>&#64;Host</code>: Limits dependency lookup to the host component.</li>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Angular 19 Annotation Enhancements</p>\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong>Signal-Based Inputs</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>New signal-based input API with the <code>input()</code> function replacing traditional <code>&#64;Input()</code> decorator for reactive programming.</li>\n                <li>Signal inputs are automatically updated when parent component changes the input value.</li>\n                <li>Better performance with fine-grained reactivity compared to traditional inputs.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Transform Functions for Inputs</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>Support for input transform functions that process incoming values before they're assigned.</li>\n                <li>Enables validation, type conversion, and normalization directly in the input definition.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Required Inputs</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>New <code>required</code> option for inputs to enforce providing values at compile time.</li>\n                <li>Better developer experience with clear errors when required inputs are missing.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Model Inputs</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>New <code>&#64;Model()</code> decorator and <code>model()</code> function for two-way binding with better type checking.</li>\n                <li>Provides a more explicit and type-safe alternative to <code>[(ngModel)]</code> or manual two-way binding.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Functional Pattern Support</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>Enhanced support for functional patterns in decorators like <code>&#64;Injectable</code>.</li>\n                <li>Factory functions in provider definitions allow more flexibility and better tree-shaking.</li>\n              </ul>\n            </li>\n          </ol>\n\n          <br>\n          <br>\n\n          <p>Code Examples</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Component with Various Annotations</strong>:\n              <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n              <span #code1 hidden copyToClipboard>\n                <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                  <span>typescript</span>\n                  <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                </div>\n                <pre>\n                  <code [highlight]=\"componentCode\" [languages]=\"['typescript']\"></code>\n                </pre>\n              </span>\n            </li>\n            <li>\n              <strong>Directive with Property and Method Annotations</strong>:\n              <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n              <span #code2 hidden copyToClipboard>\n                <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                  <span>typescript</span>\n                  <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                </div>\n                <pre>\n                  <code [highlight]=\"directiveCode\" [languages]=\"['typescript']\"></code>\n                </pre>\n              </span>\n            </li>\n            <li>\n              <strong>Injectable Service with Parameter Annotations</strong>:\n              <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n              <span #code3 hidden copyToClipboard>\n                <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                  <span>typescript</span>\n                  <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                </div>\n                <pre>\n                  <code [highlight]=\"injectableCode\" [languages]=\"['typescript']\"></code>\n                </pre>\n              </span>\n            </li>\n            <li>\n              <strong>Component with Signal-based Inputs</strong>:\n              <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n              <span #code4 hidden copyToClipboard>\n                <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                  <span>typescript</span>\n                  <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                </div>\n                <pre>\n                  <code [highlight]=\"signalInputCode\" [languages]=\"['typescript']\"></code>\n                </pre>\n              </span>\n            </li>\n            <li>\n              <strong>Pipe Annotation Example</strong>:\n              <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n              <span #code5 hidden copyToClipboard>\n                <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                  <span>typescript</span>\n                  <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                </div>\n                <pre>\n                  <code [highlight]=\"pipeCode\" [languages]=\"['typescript']\"></code>\n                </pre>\n              </span>\n            </li>\n          </ul>\n        </div>\n\n        <div *ngIf=\"selectedTab === 2\">\n          <!-- Best Practices Tab -->\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong class=\"text-sky-400\">Choose the Right Annotation Type</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use <code>&#64;Input()</code> or <code>input()</code> for data passed from parent components</li>\n                <li>Use <code>&#64;Output()</code> for events emitted to parent components</li>\n                <li>Use <code>&#64;HostBinding</code> and <code>&#64;HostListener</code> instead of directly manipulating the DOM</li>\n                <li>Prefer <code>&#64;ViewChild</code> over querying the DOM using native JavaScript selectors</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Signal-Based Inputs for Better Performance</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use the new signal-based <code>input()</code> function for improved change detection</li>\n                <li>Leverage input transforms to normalize or validate incoming data</li>\n                <li>Mark critical inputs as required to catch missing bindings early</li>\n                <li>Use <code>model()</code> for two-way binding scenarios instead of complex input/output combinations</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Dependency Injection Best Practices</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Provide services at the appropriate level using <code>&#64;Injectable()</code> with <code>providedIn</code></li>\n                <li>Use <code>&#64;Optional()</code> for dependencies that might not be available</li>\n                <li>Use <code>&#64;Inject()</code> when the token differs from the class type</li>\n                <li>Take advantage of factory functions for conditional service creation</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Component Architecture</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Keep <code>&#64;Component</code> metadata minimal by externalizing templates and styles</li>\n                <li>Use standalone components with explicit imports for better tree-shaking</li>\n                <li>Group related <code>&#64;ViewChild</code> and <code>&#64;ContentChild</code> queries together</li>\n                <li>Keep the selector name consistent with the component's purpose</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Directive Implementation</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Make directives standalone whenever possible</li>\n                <li>Use attribute selectors with a consistent prefix (e.g., <code>[app-]</code>)</li>\n                <li>Group <code>&#64;HostBinding</code> decorators together for better readability</li>\n                <li>Prefer composition of multiple directives over complex monolithic ones</li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n\n        <div *ngIf=\"selectedTab === 3\">\n          <!-- Pros and Cons Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Angular Annotations</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Declarative Syntax</strong>: Makes code intention clear through metadata annotations</li>\n              <li><strong>Framework Integration</strong>: Seamlessly integrates with Angular's DI system, template engine, and change detection</li>\n              <li><strong>Type Safety</strong>: Enhanced type checking in Angular 19 catches errors during development</li>\n              <li><strong>Signal-Based Reactivity</strong>: New input APIs provide granular reactivity without complex state management</li>\n              <li><strong>IDE Support</strong>: Good tooling support with autocompletion and documentation</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Challenges with Angular Annotations</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Learning Curve</strong>: Understanding all decorator types and their options can be challenging</li>\n              <li><strong>Debugging Complexity</strong>: Errors in decorators can be harder to trace than regular code</li>\n              <li><strong>Decorator Limitations</strong>: TypeScript decorators have limitations in how they can be used</li>\n              <li><strong>Metadata Size</strong>: Heavy use of decorators can increase bundle size slightly</li>\n              <li><strong>Migration Efforts</strong>: Moving from older annotation patterns to new signal-based APIs requires refactoring</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Annotation Pattern Evolution in Angular</p>\n            <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n              <thead>\n                <tr class=\"bg-gray-800 text-gray-100\">\n                  <th class=\"py-3 px-4 text-left\">Traditional Pattern</th>\n                  <th class=\"py-3 px-4 text-left\">Angular 19 Modern Pattern</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\"><code>&#64;Input() value: string;</code></td>\n                  <td class=\"py-3 px-4\"><code>value = input&lt;string&gt;('');</code></td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\"><code>&#64;Output() valueChange = new EventEmitter();</code></td>\n                  <td class=\"py-3 px-4\"><code>value = model&lt;string&gt;('');</code></td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\"><code>&#64;NgModule({{'{...}'}});</code></td>\n                  <td class=\"py-3 px-4\"><code>&#64;Component({{'{standalone: true, imports: [...]}'}})</code></td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\"><code>&#64;Injectable({{'{providedIn: \"root\"}'}})</code></td>\n                  <td class=\"py-3 px-4\"><code>&#64;Injectable({{'{providedIn: \"root\", factory: () => ...}'}})</code></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div *ngIf=\"selectedTab === 4\">\n          <!-- Related Topics Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Decorators</strong>: The TypeScript feature that enables Angular annotations</li>\n              <li><strong>Dependency Injection</strong>: How Angular uses annotations to identify and inject dependencies</li>\n              <li><strong>Signals</strong>: The new reactive primitive that integrates with modern annotations</li>\n              <li><strong>Standalone Components</strong>: Modern components that simplify annotation usage</li>\n              <li><strong>Template Compilation</strong>: How annotations guide the template compiler</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Annotation FAQ</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li>\n                <strong>Q: What's the difference between annotations and decorators?</strong><br>\n                A: In Angular, \"annotations\" refers to the metadata added to classes and members, while \"decorators\" are the TypeScript language feature (&#64;Symbol) that enables this functionality.\n              </li>\n              <li>\n                <strong>Q: Should I use &#64;Input() or input() in Angular 19?</strong><br>\n                A: For new components, use the signal-based <code>input()</code> function as it provides better reactivity, typing, and performance.\n              </li>\n              <li>\n                <strong>Q: How do I handle two-way binding in Angular 19?</strong><br>\n                A: Use the new <code>model()</code> function to create a two-way bindable signal instead of an input/output pair.\n              </li>\n              <li>\n                <strong>Q: How do annotations impact performance?</strong><br>\n                A: Modern Angular annotations are designed for performance with optimized change detection.\n              </li>\n              <li>\n                <strong>Q: Can I create custom decorators in Angular?</strong><br>\n                A: Yes, you can create custom TypeScript decorators, but they won't integrate with Angular's core functionality.\n              </li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n            <ul class=\"list-disc pl-4\">\n              <li><a href=\"https://angular.dev/guide/components\" class=\"text-sky-400 hover:underline\">Angular Components Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/directives\" class=\"text-sky-400 hover:underline\">Angular Directives Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/di\" class=\"text-sky-400 hover:underline\">Angular Dependency Injection Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/signals\" class=\"text-sky-400 hover:underline\">Angular Signals Guide</a></li>\n              <li><a href=\"https://angular.dev/api/core\" class=\"text-sky-400 hover:underline\">Angular Core API Reference</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { HighlightLoader, HighlightAutoResult } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { takeUntil } from 'rxjs';\n\nconst themeGithub: string = 'node_modules/highlight.js/styles/github.css';\nconst themeAndroidStudio: string = 'node_modules/highlight.js/styles/androidstudio.css';\n\n@Component({\n  selector: 'app-aot',\n  templateUrl: './aot.component.html',\n  styleUrls: ['./aot.component.scss'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AotComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  // response!: HighlightAutoResult;\n\n  code_3 = '';\n  code_5 = '';\n  code_6 = '';\n  code_7 = '';\n  code_8 = '';\n  code_9_1 = '';\n  code_9_2 = '';\n  code_10 = '';\n  code_11 = '';\n  code_14 = '';\n  code_15 = '';\n  code_16 = '';\n  code_17 = '';\n  code_18 = '';\n  code_19 = '';\n  code_20 = '';\n  code_21 = '';\n\n  // currentTheme: string = themeGithub;\n\n  constructor(\n    // private hljsLoader: HighlightLoader,\n    private http: HttpClient\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/aot/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/aot/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n    this.http.get('assets/codes/aot/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n    this.http.get('assets/codes/aot/notes/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_7 = data);\n\n    this.http.get('assets/codes/aot/notes/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_8 = data);\n\n    this.http.get('assets/codes/aot/notes/code_9_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_9_1 = data);\n\n    this.http.get('assets/codes/aot/notes/code_9_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_9_2 = data);\n\n    this.http.get('assets/codes/aot/notes/code_10.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_10 = data);\n\n    this.http.get('assets/codes/aot/notes/code_11.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_11 = data);\n\n    this.http.get('assets/codes/aot/notes/code_14.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_14 = data);\n\n    this.http.get('assets/codes/aot/notes/code_15.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_15 = data);\n\n    this.http.get('assets/codes/aot/notes/code_16.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_16 = data);\n\n    this.http.get('assets/codes/aot/notes/code_17.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_17 = data);\n\n    this.http.get('assets/codes/aot/notes/code_18.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_18 = data);\n\n    this.http.get('assets/codes/aot/notes/code_19.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_19 = data);\n\n    this.http.get('assets/codes/aot/notes/code_20.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_20 = data);\n\n    this.http.get('assets/codes/aot/notes/code_21.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_21 = data);\n  }\n\n\n  // onHighlight(e: HighlightAutoResult) {\n  //   this.response = {\n  //     language: e.language,\n  //     relevance: e.relevance,\n  //     secondBest: '{...}',\n  //     value: '{...}',\n  //   };\n  // }\n\n  // changeTheme() {\n  //   this.currentTheme = this.currentTheme === themeGithub ? themeAndroidStudio : themeGithub;\n  //   this.hljsLoader.setTheme(this.currentTheme);\n  // }\n}\n\n\n\n\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Ahead-of-time (AOT) compilation\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Ahead-of-Time (AOT) Compilation</span>\n      in Angular 19 pre-compiles Angular templates and TypeScript code into highly optimized JavaScript at build time. This process improves application performance by reducing load times, shrinking bundle sizes, enhancing security, and catching template errors early in the development cycle.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>Why Use AOT Compilation?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Faster Rendering</strong>:\n      Pre-compiles code, so the browser doesn't have to compile it at runtime, reducing initial load time.\n    </li>\n    <li>\n      <strong>Smaller Bundle Sizes</strong>:\n      Removes the Angular compiler from the bundle, resulting in smaller files.\n    </li>\n    <li>\n      <strong>Improved Security</strong>:\n      Reduces the risk of injection attacks by compiling templates at build time.\n    </li>\n    <li>\n      <strong>Early Error Detectionn</strong>:\n      Identifies template errors during build time, reducing runtime errors.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>New Features and Enhancements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Fully Stabilized Zoneless Applications</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 fully stabilizes zoneless applications, eliminating dependency on <code>zone.js</code>, using native async functions, and achieving significantly smaller, faster bundles with improved AOT optimization.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Signal-based Components</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces a completely signal-based component model that AOT can optimize more effectively, providing better performance and more predictable rendering.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Advanced Partial Hydration Strategy</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Offers improved partial hydration for server-side rendering (SSR) with granular control over which components are hydrated, significantly improving performance for complex applications.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Stable Built-in Control Flow</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>The built-in control flow syntax (<code>&#64;if</code>, <code>&#64;for</code>, <code>&#64;switch</code>) is now fully stable and optimized for AOT compilation, resulting in more efficient bundles than the previous directive-based approach.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved DevTools Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular DevTools now provides enhanced debugging capabilities specifically for AOT-compiled applications, making it easier to identify performance bottlenecks and optimize rendering.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>How to Enable AOT Compilation</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Using Angular CLI</strong>:\n      Compiles the app with AOT enabled.\n\n      <button (click)=\"code16.hidden = !code16.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code16 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>bash</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_16\"\n            [languages]=\"['bash']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Production Builds (AOT Enabled by Default)</strong>:\n      Automatically enables AOT and other optimizations.\n\n      <button (click)=\"code17.hidden = !code17.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code17 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>bash</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_17\"\n            [languages]=\"['bash']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Configuring in <code>angular.json</code></strong>:\n      Sets AOT as the default for all builds.\n\n      <button (click)=\"code18.hidden = !code18.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code18 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>json</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_18\"\n            [languages]=\"['json']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Common Commands for AOT Compilation</p>\n  <br>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Command</th>\n        <th class=\"py-3 px-4 text-left\">Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng build --aot</code></td>\n        <td class=\"py-3 px-4\">Builds the application with AOT enabled.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng serve --aot</code></td>\n        <td class=\"py-3 px-4\">Serves the application locally with AOT enabled.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng build --prod</code></td>\n        <td class=\"py-3 px-4\">Production build with AOT and other optimizations.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng build --aot --source-map</code></td>\n        <td class=\"py-3 px-4\">AOT build with source maps for debugging purposes.</td>\n      </tr>\n    </tbody>\n  </table>\n\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use Static Templates and Expressions</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Avoid Dynamic Constructs</strong>:\n          Ensure templates use static, predictable expressions. Avoid using dynamic constructs like function calls or complex logic inside templates, as they can prevent AOT from optimizing properly.\n        </li>\n        <li>\n          <strong>Leverage Pure Pipes</strong>:\n          Use pure pipes for complex data transformations. Pure pipes are cached and only recomputed when their input changes, which helps optimize performance during AOT.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Ensure Type Safety and Static Metadata</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Explicit Typing</strong>:\n          Use strict TypeScript types and avoid the any type. Angular's AOT compiler relies heavily on TypeScript's type system for generating metadata, so always define explicit types for variables, function parameters, and return types.\n        </li>\n        <li>\n          <strong>Avoid Dynamic Metadata</strong>:\n          Use static values in decorators and component metadata. Avoid using dynamic expressions (like functions) to define metadata such as component selectors, template URLs, etc., as AOT requires all metadata to be statically analyzable.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\"></strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Production Builds</strong>:\n          Use the Angular CLI to ensure AOT is enabled for all production builds. This command enables AOT by default, along with other optimizations like minification and tree-shaking.\n\n          <button (click)=\"code17.hidden = !code17.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code17 hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>bash</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_17\"\n                [languages]=\"['bash']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Development Builds</strong>:\n          Enable AOT during development to catch errors early. This allows you to detect template-related errors early in the development process.\n\n          <button (click)=\"code19.hidden = !code19.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code19 hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>bash</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_19\"\n                [languages]=\"['bash']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Configuration in <code>angular.json</code></strong>:\n          Set AOT as the default for all builds.\n\n          <button (click)=\"code18.hidden = !code18.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code18 hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>bash</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_18\"\n                [languages]=\"['bash']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Component Structure and Lifecycle</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use <code>ChangeDetectionStrategy.OnPush</code></strong>:\n          Minimize change detection cycles by using <code>ChangeDetectionStrategy.OnPush</code> for components that do not rely on global state:\n\n          <button (click)=\"code20.hidden = !code20.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code20 hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_20\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Break Down Complex Components</strong>:\n          Divide large, complex components into smaller, focused components. This makes them easier to analyze and optimize by the AOT compiler.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Utilize Lazy Loading for Feature Modules</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Implement Lazy Loading</strong>:\n          Use lazy loading to defer the loading of feature modules that are not required immediately, reducing the initial bundle size.\n          This reduces the initial load time by only loading necessary modules when needed.\n\n          <button (click)=\"code21.hidden = !code21.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code21 hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_21\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Ensure Compatibility of Third-Party Libraries</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use AOT-Compatible Libraries</strong>:\n          Verify that all third-party libraries are compatible with AOT. Some libraries might rely on dynamic runtime features that are not supported by AOT.\n        </li>\n        <li>\n          <strong>Tree-Shaking</strong>:\n          Remove unused libraries and dependencies to reduce the final bundle size. AOT, combined with tree-shaking, can eliminate dead code during the build process.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Avoid Direct DOM Manipulation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Angular's <code>Renderer2</code> API</strong>:\n          Instead of directly manipulating the DOM using native methods or third-party libraries like jQuery, use Angular's <code>Renderer2</code> API.\n          This ensures compatibility with Angular's rendering engine and supports AOT.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Styles and Assets</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Inline Critical CSS</strong>:\n          Inline critical CSS to reduce the number of HTTP requests and speed up initial rendering.\n        </li>\n        <li>\n          <strong>Minimize Asset Size</strong>:\n          Compress images, fonts, and other assets to reduce their size and optimize the app's load time.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Monitor Build Performance and Diagnostics</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Analyze Build Outputs</strong>:\n          Regularly check build outputs for any warnings or errors during AOT compilation. Use tools like Webpack Bundle Analyzer to analyze bundle sizes and identify performance bottlenecks.\n        </li>\n        <li>\n          <strong>Use Angular DevTools</strong>:\n          Utilize Angular DevTools to inspect component performance, detect hydration issues, and debug AOT-related errors more effectively.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Use Angular's Partial Hydration and Improved SSR Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Partial Hydration</strong>:\n          In Angular 19, partial hydration helps optimize server-side rendering (SSR) by hydrating only necessary parts of the app, improving load times and overall performance.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Faster Initial Load Time</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          AOT compiles templates and components during the build process, eliminating the need for Just-in-Time (JIT) compilation in the browser.\n          This reduces the amount of JavaScript the browser needs to process at runtime, resulting in a faster initial load time.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Smaller Bundle Sizes</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          By removing the Angular compiler from the application bundle, AOT reduces the size of the JavaScript files sent to the client.\n          Smaller bundle sizes lead to faster downloads and improved app performance, particularly on slower networks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Security</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          AOT compiles templates into JavaScript before deployment, preventing the risk of injection attacks that can occur if templates are dynamically compiled at runtime.\n          This makes the app more secure by reducing the surface area for potential vulnerabilities.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Early Error Detection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Errors in templates, components, and metadata are detected during the build phase, allowing developers to identify and fix them early in the development process.\n          This leads to fewer runtime errors and more stable applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Optimized Performance for Production</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          AOT is optimized for production use, ensuring that the application performs well under various conditions.\n          It is fully compatible with Angular's change detection strategies and supports advanced features like partial hydration for server-side rendering (SSR).\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Compatibility with Zoneless Applications and Signal-based Components</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19 fully stabilizes zoneless applications and introduces an optimized signal-based component model, reducing reliance on <code>zone.js</code> and enabling more efficient, smaller bundles with AOT.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Increased Build Time</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          AOT compilation adds extra processing time to the build process because it performs template compilation, type checking, and optimization at build time.\n          This can increase the time required for builds, which might be noticeable in large projects.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Limited Support for Dynamic Code</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          AOT relies on static analysis, which means it cannot handle dynamic code constructs or certain types of JavaScript expressions (e.g., dynamically generated templates or code that uses reflection).\n          This can be a limitation if your app requires highly dynamic behavior.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Requires Strict Type Checking</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          AOT requires strict adherence to TypeScript types and Angular best practices. This means any loose typing or use of dynamic types (any) can lead to compilation errors.\n          While this is generally a good practice, it may require additional work for legacy projects or applications with less strict typing.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Compatibility Issues with Third-Party Libraries</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Not all third-party libraries are compatible with AOT, especially those that rely on dynamic runtime behavior or use reflection.\n          You may need to modify or replace incompatible libraries, which can add extra work and complexity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">More Complex Debugging in Some Cases</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          While AOT catches many errors at build time, debugging AOT-specific issues can sometimes be more complex due to the additional build steps and optimizations involved.\n          Developers may need to use specific tools like Angular DevTools to diagnose and resolve AOT-related problems.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Initial Setup and Configuration Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Configuring an application to use AOT, especially if transitioning from JIT, may involve some initial setup and refactoring.\n          This can include ensuring that all templates, components, and metadata are statically analyzable and updating any dynamic code that is incompatible with AOT.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Summary\n  </p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mt-4\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left w-1/2\">Pros</th>\n        <th class=\"py-3 px-4 text-left w-1/2\">Cons</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Faster initial load times</td>\n        <td class=\"py-3 px-4\">Increased build time</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Smaller bundle sizes</td>\n        <td class=\"py-3 px-4\">Limited support for dynamic code</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Improved security</td>\n        <td class=\"py-3 px-4\">Requires strict type checking</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Early error detection</td>\n        <td class=\"py-3 px-4\">Compatibility issues with some third-party libraries</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Optimized performance for production</td>\n        <td class=\"py-3 px-4\">More complex debugging in certain scenarios</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Supports zoneless applications and signal-based components</td>\n        <td class=\"py-3 px-4\">Initial setup and configuration overhead</td>\n      </tr>\n    </tbody>\n  </table>\n\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Just-in-Time (JIT) Compilation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n            <strong class=\"text-sky-400\">Description</strong>:\n            In contrast to AOT, <span class=\"text-zinc-50 tw-font-medium\">Just-in-Time (JIT) Compilation</span> compiles Angular templates and components in the browser at runtime.\n            This approach allows for a more dynamic development experience since changes can be quickly reloaded without rebuilding the entire app.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Key Differences with AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">JIT</span> is faster during development because it avoids the initial build time, while\n              <span class=\"text-zinc-50 tw-font-medium\">AOT</span> is faster for end users because it reduces the app's load time.\n            </li>\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">JIT</span> is suitable for development environments where quick iteration is needed, whereas\n              <span class=\"text-zinc-50 tw-font-medium\">AOT</span> is better for production deployments where performance and security are priorities.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular Ivy</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          <span class=\"text-zinc-50 tw-font-medium\">Ivy</span> is the default rendering engine in Angular starting from Angular 9. It offers a more efficient compilation and rendering pipeline, resulting in smaller bundles and faster compilation times.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">Ivy</span> makes AOT compilation faster and more efficient by compiling templates more effectively and eliminating unnecessary code.\n              It also enables new features like partial hydration and support for zoneless applications.\n            </li>\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">Angular 19</span> leverages Ivy to enhance the performance of both JIT and AOT compilations.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Change Detection Strategies</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">Default Strategy</span>: Checks the entire component tree for changes, which can be inefficient for large applications.\n            </li>\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">OnPush Strategy</span>: Checks only when input properties change, an event occurs, or a component's view is initialized.\n            </li>\n          </ul>\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              Using <span class=\"text-zinc-50 tw-font-medium\">ChangeDetectionStrategy.OnPush</span> with AOT can improve performance by reducing the number of change detection cycles, especially in large applications.\n            </li>\n            <li>\n              With <span class=\"text-zinc-50 tw-font-medium\">AOT</span>, Angular can statically analyze the templates, optimize change detection, and eliminate unnecessary checks.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Lazy Loading</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          <span class=\"text-zinc-50 tw-font-medium\">Lazy Loading</span> allows Angular to load feature modules on demand rather than upfront, reducing the initial bundle size and improving application load times.\n\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">AOT</span> and lazy loading work together to optimize application performance by reducing the amount of code loaded initially.\n            </li>\n            <li>\n              With Angular 19, AOT can be used alongside lazy loading to ensure that only the necessary modules are loaded when needed, which minimizes the download size and speeds up initial rendering.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Tree Shaking</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          <span class=\"text-zinc-50 tw-font-medium\">Tree Shaking</span> is a technique used to eliminate unused code from the final bundle, reducing the size of the application.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              <span class=\"text-zinc-50 tw-font-medium\">AOT</span> works well with tree shaking to eliminate parts of the Angular framework that are not used by the application. This leads to smaller bundle sizes and faster load times.\n            </li>\n            <li>\n              Angular's build optimizer, enabled with AOT, enhances tree-shaking effectiveness by marking unused code for removal.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Partial Hydration and Server-Side Rendering (SSR)</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          <span class=\"text-zinc-50 tw-font-medium\">Partial Hydration</span> is a strategy where only the necessary parts of an application are hydrated or made interactive after server-side rendering (SSR).\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              Angular 19's AOT supports partial hydration to optimize server-side rendering (SSR) by hydrating only necessary parts of the app after initial SSR, improving performance and reducing load times.\n            </li>\n            <li>\n              AOT ensures that the JavaScript required for hydration is minimal and only contains what's necessary to make the server-rendered content interactive.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular CLI and Build Optimization</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          The <span class=\"text-zinc-50 tw-font-medium\">Angular CLI</span> is a command-line tool that provides commands to initialize, develop, scaffold, and maintain Angular applications.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              The <span class=\"text-zinc-50 tw-font-medium\">CLI</span> provides commands like <code>ng build --aot</code> to enable AOT compilation. It also includes build optimization flags (<code>--prod</code>) that enable AOT by default along with other optimizations like minification, tree shaking, and code splitting.\n            </li>\n            <li>\n              The <span class=\"text-zinc-50 tw-font-medium\">CLI</span> helps automate the build process with AOT, making it easier to integrate AOT into the CI/CD pipeline.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular DevTools</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          <span class=\"text-zinc-50 tw-font-medium\">Angular DevTools</span> is a browser extension for debugging and profiling Angular applications.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              It provides tools for inspecting the component tree, detecting performance bottlenecks, and understanding the impact of AOT compilation on the application's runtime behavior.\n            </li>\n            <li>\n              Angular DevTools can be used to monitor the effectiveness of AOT optimizations, including how change detection strategies affect performance.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>NgModules and Modular Architecture</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          <span class=\"text-zinc-50 tw-font-medium\">NgModules</span> are fundamental building blocks of Angular applications, used to group related components, directives, services, and pipes.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              Properly organizing code into NgModules improves AOT compilation by making code more modular, manageable, and easier for the compiler to optimize.\n            </li>\n            <li>\n              With Angular 19, modular architecture allows for better compatibility with new features like zoneless apps and native async functions.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Zoneless applications in Angular remove the reliance on <code>zone.js</code> for change detection, relying instead on native async capabilities like <code>async/await</code>.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              Angular 19's fully stabilized support for zoneless applications benefits AOT by allowing for smaller bundles and more efficient change detection, optimizing both runtime and build-time performance.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal-based Components</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Signal-based components are a new way to build Angular components with fine-grained reactivity using signals instead of traditional property bindings.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to AOT</strong>:\n          <ul class=\"list-disc pl-4\">\n            <li>\n              Angular 19's signal-based component model is designed to work optimally with AOT compilation, providing better performance through more efficient change detection and rendering.\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-apf',\n  templateUrl: './apf.component.html',\n  styleUrls: ['./apf.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ApfComponent {\n\n}\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb2\">\n    Angular package format (APF)\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      An Angular specific specification for layout of npm packages that is used by all first-party Angular packages, and most third-party Angular libraries.\n    </p>\n\n    <br>\n\n    <p>\n      Learn more in the <a>Angular Package Format specification</a>.\n    </p>\n  </div>\n</section>\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-app-shell',\n  templateUrl: './app-shell.component.html',\n  styleUrls: ['./app-shell.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppShellComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  @ViewChild('code1') code1?: ElementRef;\n  @ViewChild('code2') code2?: ElementRef;\n  @ViewChild('code3') code3?: ElementRef;\n  @ViewChild('code4') code4?: ElementRef;\n  @ViewChild('code5') code5?: ElementRef;\n\n  // Configuration for app-shell in angular.json\n  configCode = `{\n  \"projects\": {\n    \"my-app\": {\n      \"architect\": {\n        \"build\": {\n          \"configurations\": {\n            \"production\": {\n              \"optimization\": true,\n              \"outputHashing\": \"all\",\n              \"sourceMap\": false,\n              \"namedChunks\": false,\n              \"extractLicenses\": true,\n              \"vendorChunk\": false,\n              \"buildOptimizer\": true\n            }\n          }\n        },\n        \"app-shell\": {\n          \"builder\": \"@angular-devkit/build-angular:app-shell\",\n          \"options\": {\n            \"browserTarget\": \"my-app:build\",\n            \"serverTarget\": \"my-app:server\",\n            \"route\": \"shell\"\n          },\n          \"configurations\": {\n            \"production\": {\n              \"browserTarget\": \"my-app:build:production\",\n              \"serverTarget\": \"my-app:server:production\"\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n\n  // App shell module setup\n  appModuleCode = `import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { ShellComponent } from './shell/shell.component';\n\n@NgModule({\n  declarations: [AppComponent, ShellComponent],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'my-app' }),\n    RouterModule.forRoot([\n      { path: 'shell', component: ShellComponent }\n    ])\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }`;\n\n  // Modern App Shell with Standalone Components\n  standaloneCode = `// app.config.ts\nimport { ApplicationConfig } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app.routes';\nimport { provideClientHydration, withNoDomReuse } from '@angular/core';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(\n      withNoDomReuse()\n    )\n  ]\n};`;\n\n  // Shell Component\n  shellComponentCode = `import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-shell',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div class=\"app-shell\">\n      <header>\n        <h1>My Application</h1>\n        <div class=\"nav-placeholder\"></div>\n      </header>\n      <main>\n        <div class=\"content-placeholder\">\n          <div class=\"loading-spinner\"></div>\n        </div>\n      </main>\n      <footer>© 2025 My App</footer>\n    </div>\n  \\`,\n  styles: [\\`\n    .app-shell {\n      display: flex;\n      flex-direction: column;\n      min-height: 100vh;\n    }\n    .nav-placeholder, .content-placeholder {\n      background: #f0f0f0;\n      border-radius: 4px;\n      margin: 10px 0;\n      min-height: 50px;\n    }\n    .content-placeholder {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      min-height: 300px;\n    }\n    .loading-spinner {\n      border: 3px solid rgba(0, 0, 0, 0.1);\n      border-radius: 50%;\n      border-top: 3px solid #3498db;\n      width: 30px;\n      height: 30px;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n  \\`]\n})\nexport class ShellComponent { }`;\n\n  // Modern Command to generate App Shell\n  shellCommandCode = `# Generate a new Angular 19 app with SSR and App Shell\nng new my-app --ssr\n\n# Or add it to an existing app\nng add @angular/ssr --app-shell\n\n# Build with App Shell\nng build --configuration production`;\n\n  constructor() {\n    super();\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    App Shell\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">App Shell</span>\n      in Angular 19 is a technique that delivers a minimal HTML, CSS, and JavaScript needed to power a user interface before the full application has loaded. It helps improve perceived performance by showing a static rendering of your application while the full JavaScript bundle downloads and executes in the background.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <div *ngIf=\"selectedTab === 1\">\n          <!-- Notes Tab -->\n          <p>Key Benefits of App Shell</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Enhanced Perceived Performance</strong>:\n              Users see a meaningful interface almost immediately instead of a blank screen or loading spinner, creating a better first impression.\n            </li>\n            <li>\n              <strong>Improved SEO</strong>:\n              Search engines can more effectively index your static content, leading to better search rankings.\n            </li>\n            <li>\n              <strong>Progressive Enhancement</strong>:\n              App Shell delivers a basic user interface that works without JavaScript, then enhances the experience as resources load.\n            </li>\n            <li>\n              <strong>Reliable Loading Experience</strong>:\n              Provides a consistent loading experience regardless of network conditions or device capabilities.\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Angular 19 App Shell Enhancements</p>\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong>Improved Hydration Process</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>Angular 19 introduces advanced hydration techniques that preserve the server-rendered DOM while progressively activating client-side features.</li>\n                <li>New <code>withNoDomReuse</code> option lets you control DOM preservation during hydration for full control over the rendering process.</li>\n                <li>Enhanced state transfer between server and client keeps user interactions consistent during hydration.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Partial Hydration Support</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>Selectively hydrate components based on their importance or visibility, prioritizing interactive elements.</li>\n                <li>Deferrable views work seamlessly with App Shell to progressively load and hydrate components as needed.</li>\n                <li>Reduces Time to Interactive (TTI) by focusing on critical UI components first.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Standalone Component Support</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>App Shell now works seamlessly with standalone components, simplifying implementation.</li>\n                <li>Reduced configuration complexity with the new App Shell builder that integrates with standalone architecture.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Streamlined Setup Process</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>The new <code>&#64;angular/ssr</code> package includes App Shell functionality with a simpler setup process.</li>\n                <li>CLI command <code>ng add &#64;angular/ssr --app-shell</code> automatically configures everything needed for App Shell.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Zoneless Support</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>App Shell now works efficiently with zoneless applications, improving performance by reducing the JavaScript bundle size.</li>\n                <li>Better integration with signal-based components for more efficient rendering and hydration.</li>\n              </ul>\n            </li>\n          </ol>\n\n          <br>\n          <br>\n\n          <p>Implementation in Angular 19</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Modern App Shell Setup Commands</strong>:\n              <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n              <span #code1 hidden copyToClipboard>\n                <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                  <span>bash</span>\n                  <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                </div>\n                <pre>\n                  <code [highlight]=\"shellCommandCode\" [languages]=\"['bash']\"></code>\n                </pre>\n              </span>\n            </li>\n            <li>\n              <strong>Configuration in angular.json</strong>:\n              <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n              <span #code2 hidden copyToClipboard>\n                <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                  <span>json</span>\n                  <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                </div>\n                <pre>\n                  <code [highlight]=\"configCode\" [languages]=\"['json']\"></code>\n                </pre>\n              </span>\n            </li>\n            <li>\n              <strong>App Module Setup (Traditional Approach)</strong>:\n              <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n              <span #code3 hidden copyToClipboard>\n                <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                  <span>typescript</span>\n                  <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                </div>\n                <pre>\n                  <code [highlight]=\"appModuleCode\" [languages]=\"['typescript']\"></code>\n                </pre>\n              </span>\n            </li>\n            <li>\n              <strong>Modern App Config with Standalone Components</strong>:\n              <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n              <span #code4 hidden copyToClipboard>\n                <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                  <span>typescript</span>\n                  <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                </div>\n                <pre>\n                  <code [highlight]=\"standaloneCode\" [languages]=\"['typescript']\"></code>\n                </pre>\n              </span>\n            </li>\n            <li>\n              <strong>Shell Component Implementation</strong>:\n              <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n              <span #code5 hidden copyToClipboard>\n                <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                  <span>typescript</span>\n                  <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                </div>\n                <pre>\n                  <code [highlight]=\"shellComponentCode\" [languages]=\"['typescript']\"></code>\n                </pre>\n              </span>\n            </li>\n          </ul>\n        </div>\n\n        <div *ngIf=\"selectedTab === 2\">\n          <!-- Best Practices Tab -->\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong class=\"text-sky-400\">Design for Progressive Enhancement</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Create a minimal, functional UI that works without JavaScript first</li>\n                <li>Focus on critical UI elements that users need immediately</li>\n                <li>Avoid complex animations or interactions in the shell component</li>\n                <li>Keep the App Shell lightweight (under 50KB compressed) for fast loading</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Implement Efficient Hydration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use <code>provideClientHydration()</code> with appropriate options in your app config</li>\n                <li>Consider <code>withNoDomReuse()</code> for dynamic content that changes significantly between server and client</li>\n                <li>Implement partial hydration for large applications to prioritize interactive components</li>\n                <li>Use <code>&#64;defer</code> blocks for non-critical components to reduce initial load time</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Cache Shell Resources Effectively</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Configure appropriate cache headers for App Shell static resources</li>\n                <li>Use service workers to cache the App Shell for offline access</li>\n                <li>Implement a versioning strategy to update the shell when your application changes</li>\n                <li>Consider using HTTP/2 server push to deliver critical shell resources</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Optimize for SEO</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Include proper metadata (title, description, OpenGraph tags) in the shell</li>\n                <li>Implement schema.org structured data where appropriate</li>\n                <li>Test your App Shell with Google's Mobile-Friendly and Rich Results Test tools</li>\n                <li>Ensure all critical content is visible in the initial server-rendered HTML</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Measure and Improve Performance</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Track Core Web Vitals (LCP, FID, CLS) before and after implementing App Shell</li>\n                <li>Use Chrome DevTools \"Performance\" tab to analyze loading and hydration</li>\n                <li>Implement analytics to measure real-user metrics (RUM) for different devices and connections</li>\n                <li>Set performance budgets for your App Shell and main application bundle</li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n\n        <div *ngIf=\"selectedTab === 3\">\n          <!-- Pros and Cons Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Advantages of App Shell</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Faster Perceived Loading</strong>: Users see content immediately, even on slow connections</li>\n              <li><strong>Improved Core Web Vitals</strong>: Helps with Largest Contentful Paint (LCP) and First Contentful Paint (FCP)</li>\n              <li><strong>Better SEO Performance</strong>: Search engines can index the static content effectively</li>\n              <li><strong>Works with Progressive Web Apps</strong>: Enables offline-first experience when combined with Service Workers</li>\n              <li><strong>Smooth Transitions</strong>: Creates a seamless transition from static to interactive content</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Challenges with App Shell</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Implementation Complexity</strong>: Requires server-side rendering configuration</li>\n              <li><strong>Increased Build Time</strong>: Adds an additional step to the build process</li>\n              <li><strong>Hydration Issues</strong>: Potential for hydration mismatches if not implemented carefully</li>\n              <li><strong>Additional Testing</strong>: Requires testing both server-rendered and client-rendered states</li>\n              <li><strong>Content Flickering</strong>: May cause visual shifts during hydration if not properly designed</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Performance Comparison: With vs. Without App Shell</p>\n            <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n              <thead>\n                <tr class=\"bg-gray-800 text-gray-100\">\n                  <th class=\"py-3 px-4 text-left\">Metric</th>\n                  <th class=\"py-3 px-4 text-left\">Without App Shell</th>\n                  <th class=\"py-3 px-4 text-left\">With App Shell</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">First Contentful Paint</td>\n                  <td class=\"py-3 px-4\">2-3 seconds</td>\n                  <td class=\"py-3 px-4\">0.8-1.2 seconds</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Largest Contentful Paint</td>\n                  <td class=\"py-3 px-4\">3-5 seconds</td>\n                  <td class=\"py-3 px-4\">1.5-2.5 seconds</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Time to Interactive</td>\n                  <td class=\"py-3 px-4\">4-7 seconds</td>\n                  <td class=\"py-3 px-4\">3-5 seconds</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Initial Bundle Size</td>\n                  <td class=\"py-3 px-4\">Full application</td>\n                  <td class=\"py-3 px-4\">Shell only (20-50KB)</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div *ngIf=\"selectedTab === 4\">\n          <!-- Related Topics Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Server-Side Rendering (SSR)</strong>: The foundation that enables App Shell, rendering the initial HTML on the server</li>\n              <li><strong>Hydration</strong>: The process of making server-rendered content interactive on the client</li>\n              <li><strong>Partial Hydration</strong>: Selectively hydrating components based on priority or visibility</li>\n              <li><strong>Deferrable Views</strong>: Delaying the loading and rendering of non-critical components</li>\n              <li><strong>Progressive Web Apps (PWAs)</strong>: Web applications that can work offline and provide app-like experiences</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">App Shell FAQ</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li>\n                <strong>Q: How is App Shell different from regular SSR?</strong><br>\n                A: App Shell focuses on rendering a minimal UI skeleton, while full SSR renders the complete initial state of your application.\n              </li>\n              <li>\n                <strong>Q: Can I use App Shell with standalone components?</strong><br>\n                A: Yes, Angular 19 fully supports App Shell with standalone components and provides simplified setup.\n              </li>\n              <li>\n                <strong>Q: How does App Shell affect SEO?</strong><br>\n                A: App Shell improves SEO by ensuring search engines can index meaningful content without executing JavaScript.\n              </li>\n              <li>\n                <strong>Q: Does App Shell work with lazy-loaded modules?</strong><br>\n                A: Yes, App Shell can work with lazy-loaded modules. The shell loads first, then lazy modules load as needed.\n              </li>\n              <li>\n                <strong>Q: Is App Shell compatible with signal-based components?</strong><br>\n                A: Yes, Angular 19's App Shell is fully compatible with signal-based reactivity and provides efficient hydration.\n              </li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n            <ul class=\"list-disc pl-4\">\n              <li><a href=\"https://angular.dev/guide/ssr\" class=\"text-sky-400 hover:underline\">Angular Server-Side Rendering Guide</a></li>\n              <li><a href=\"https://angular.dev/api/platform-server\" class=\"text-sky-400 hover:underline\">Angular Platform Server API</a></li>\n              <li><a href=\"https://web.dev/articles/performance-get-started\" class=\"text-sky-400 hover:underline\">Web Performance Optimization Guide</a></li>\n              <li><a href=\"https://web.dev/articles/app-shell\" class=\"text-sky-400 hover:underline\">App Shell Model</a></li>\n              <li><a href=\"https://web.dev/articles/service-workers\" class=\"text-sky-400 hover:underline\">Service Workers and PWAs</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Architect\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Architect</span>\n      is the build system that the Angular CLI uses to perform complex tasks such as compilation, testing, and deployment according to a provided configuration. It is a shell that runs a <a href=\"\">builder</a> with a given <a href=\"\">target configuration</a>. The <a href=\"\">builder</a> is defined in an <a href=\"\">npm package</a>.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>Key Features in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Enhanced Performance</strong>:\n      Significantly faster builds with esbuild integration for improved compilation times.\n    </li>\n    <li>\n      <strong>SSR Integration</strong>:\n      Streamlined server-side rendering and prerendering through Architect targets.\n    </li>\n    <li>\n      <strong>Improved Tree Shaking</strong>:\n      Better optimization for smaller bundle sizes and more efficient code.\n    </li>\n    <li>\n      <strong>Progress Reporting</strong>:\n      Enhanced visibility into build steps with the --progress flag.\n    </li>\n    <li>\n      <strong>Simplified Configuration</strong>:\n      Better defaults for standalone applications with reduced boilerplate.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>CLI Commands</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Command</th>\n        <th class=\"py-3 px-4 text-left\">Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng run my-app:build</code></td>\n        <td class=\"py-3 px-4\">Runs the build target for the specified project.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng run my-app:build:production</code></td>\n        <td class=\"py-3 px-4\">Runs the build with the production configuration.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng run my-app:build --prerender --ssr</code></td>\n        <td class=\"py-3 px-4\">Builds with server-side rendering and prerendering enabled.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng run my-app:test</code></td>\n        <td class=\"py-3 px-4\">Runs the test target for the specified project.</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <br>\n  <br>\n\n  <p>Custom Builders Configuration</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>json</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre>\n      <code [highlight]=\"customBuilderCode\" [languages]=\"['json']\"></code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Workspace Configuration</p>\n  <p class=\"text-sm mt-2 mb-4\">\n    In the workspace configuration file (angular.json), an \"architect\" section provides configuration options for Architect builders. Angular 19 introduces new options for improved performance and rendering.\n  </p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>json</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre>\n      <code [highlight]=\"architectConfigCode\" [languages]=\"['json']\"></code>\n    </pre>\n  </span>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Workspace Configuration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use environment-specific configurations</strong>:\n          Leverage production, development, and custom configurations for different deployment scenarios.\n        </li>\n        <li>\n          <strong>Set sensible defaults</strong>:\n          Configure default values that work for most team members to maintain consistency.\n        </li>\n        <li>\n          <strong>Extract common settings</strong>:\n          Use the global options section for settings shared across configurations to avoid duplication.\n        </li>\n        <li>\n          <strong>Use the right builder</strong>:\n          Choose the appropriate builder for each task (browser, server, application, etc.) based on your needs.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Custom Builders</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Follow the contract</strong>:\n          Builders should return a BuilderOutput with success/failure status for proper error handling.\n        </li>\n        <li>\n          <strong>Handle errors gracefully</strong>:\n          Properly catch and report errors instead of crashing to improve developer experience.\n        </li>\n        <li>\n          <strong>Provide good logging</strong>:\n          Use the context.logger for progress and diagnostic information to aid debugging.\n        </li>\n        <li>\n          <strong>Create well-defined schemas</strong>:\n          Define your builder options with clear JSON schemas for better IDE support.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Performance Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Set appropriate budget thresholds</strong>:\n          Configure size budgets to prevent application bloat and maintain performance.\n        </li>\n        <li>\n          <strong>Use cache effectively</strong>:\n          The cache option can dramatically speed up subsequent builds during development.\n        </li>\n        <li>\n          <strong>Optimize source maps</strong>:\n          Use appropriate sourceMap settings for each environment to balance debugging and build size.\n        </li>\n        <li>\n          <strong>Configure incremental builds</strong>:\n          Enable incremental TypeScript compilation to improve build times.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Advantages</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Extensibility</strong>: Create custom builders for specialized tasks</li>\n      <li><strong>Standardization</strong>: Consistent approach to building across Angular projects</li>\n      <li><strong>Configuration Management</strong>: Environment-specific settings managed in one place</li>\n      <li><strong>Integration with CLI</strong>: Access through familiar Angular CLI commands</li>\n      <li><strong>Parallel Execution</strong>: Run multiple tasks concurrently for better performance</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Challenges</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Learning Curve</strong>: Understanding the builder API and creating custom builders can be complex</li>\n      <li><strong>Configuration Verbosity</strong>: The angular.json file can become large and hard to manage</li>\n      <li><strong>Limited IDE Support</strong>: Schema validation for custom builders may not be available in all editors</li>\n      <li><strong>Debugging Difficulty</strong>: Troubleshooting failed builds can be challenging</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Comparison with Other Build Systems</p>\n    <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n      <thead>\n        <tr class=\"bg-gray-800 text-gray-100\">\n          <th class=\"py-3 px-4 text-left\">Feature</th>\n          <th class=\"py-3 px-4 text-left\">Angular Architect</th>\n          <th class=\"py-3 px-4 text-left\">Webpack Directly</th>\n          <th class=\"py-3 px-4 text-left\">Nx Workspace</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Configuration Style</td>\n          <td class=\"py-3 px-4\">JSON in angular.json</td>\n          <td class=\"py-3 px-4\">JavaScript file</td>\n          <td class=\"py-3 px-4\">Extended Angular Architect</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">CLI Integration</td>\n          <td class=\"py-3 px-4\">Native with ng CLI</td>\n          <td class=\"py-3 px-4\">Requires custom scripts</td>\n          <td class=\"py-3 px-4\">Enhanced with nx CLI</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Extensibility</td>\n          <td class=\"py-3 px-4\">Via custom builders</td>\n          <td class=\"py-3 px-4\">Via plugins and loaders</td>\n          <td class=\"py-3 px-4\">Via builders and executors</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Angular 19 Compatibility</td>\n          <td class=\"py-3 px-4\">Native support</td>\n          <td class=\"py-3 px-4\">Requires configuration</td>\n          <td class=\"py-3 px-4\">Enhanced support</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</ng-template>\n\n<ng-template #topicsRef>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Features</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Angular CLI</strong>: Command-line interface used to invoke Architect builders</li>\n      <li><strong>Builders</strong>: Functions that implement different build tasks</li>\n      <li><strong>Workspace Configuration</strong>: The angular.json file that defines target configurations</li>\n      <li><strong>Schematics</strong>: Generator templates used by the CLI to create code</li>\n      <li><strong>Webpack</strong>: The underlying bundler used by Angular's build system</li>\n      <li><strong>esbuild</strong>: Fast JavaScript bundler integrated with Angular 19</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Changes in Angular 19</p>\n    <ul class=\"list-disc pl-4\">\n      <li>Improved build performance using esbuild for faster compilation</li>\n      <li>Better tree-shaking for smaller bundle sizes</li>\n      <li>Enhanced SSR and prerendering capabilities</li>\n      <li>More efficient content compression algorithms</li>\n      <li>Simplified configuration for standalone applications</li>\n      <li>Improved progress reporting during builds</li>\n      <li>Better support for custom ESLint configurations</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mt-6 mb-2\">Recommended Documentation</p>\n    <ul class=\"list-disc pl-4\">\n      <li><a href=\"https://angular.dev/tools/cli/builders\" class=\"text-sky-400 hover:underline\">Angular.dev: Builders</a></li>\n      <li><a href=\"https://angular.dev/tools/cli/configuration\" class=\"text-sky-400 hover:underline\">Angular.dev: Workspace Configuration</a></li>\n      <li><a href=\"https://angular.dev/tools/cli/cli-builder\" class=\"text-sky-400 hover:underline\">Angular.dev: Creating Custom Builders</a></li>\n    </ul>\n  </div>\n</ng-template>\n\n\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-architect',\n  templateUrl: './architect.component.html',\n  styleUrls: ['./architect.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ArchitectComponent {\n  selectedTab = 1;\n\n  @ViewChild('code1') code1!: ElementRef;\n  @ViewChild('code2') code2!: ElementRef;\n\n  customBuilderCode = `// builders.json\n{\n  \"$schema\": \"../node_modules/@angular-devkit/architect/src/builders-schema.json\",\n  \"builders\": {\n    \"custom-build\": {\n      \"implementation\": \"./builders/custom-build/index.js\",\n      \"schema\": \"./builders/custom-build/schema.json\",\n      \"description\": \"Custom build process\"\n    }\n  }\n}`;\n\n  architectConfigCode = `// angular.json example\n{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"projects\": {\n    \"my-app\": {\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.scss\"]\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                }\n              ],\n              \"outputHashing\": \"all\"\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, ViewChild, ElementRef, TemplateRef } from '@angular/core';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { takeUntil } from 'rxjs';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-attribute-directive',\n  templateUrl: './attribute-directive.component.html',\n  styleUrls: ['./attribute-directive.component.scss']\n})\nexport class AttributeDirectiveComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  @ViewChild('code1') code1?: ElementRef;\n  @ViewChild('code2') code2?: ElementRef;\n  @ViewChild('code3') code3?: ElementRef;\n  @ViewChild('code4') code4?: ElementRef;\n  @ViewChild('code5') code5?: ElementRef;\n  @ViewChild('code8') code8?: ElementRef;\n  @ViewChild('code9') code9?: ElementRef;\n  @ViewChild('code10') code10?: ElementRef;\n  @ViewChild('codeb1') codeb1?: ElementRef;\n  @ViewChild('codeb2') codeb2?: ElementRef;\n  @ViewChild('codeb3') codeb3?: ElementRef;\n  @ViewChild('codeb4') codeb4?: ElementRef;\n  @ViewChild('codeb5') codeb5?: ElementRef;\n  @ViewChild('codeb6') codeb6?: ElementRef;\n\n  // Angular 19 specific code examples\n  standaloneDirectiveCode = `import { Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  standalone: true,\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n  @Input() highlightColor = 'yellow';\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.el.nativeElement.style.backgroundColor = this.highlightColor;\n  }\n}`;\n\n  signalDirectiveCode = `import { Directive, ElementRef, effect, input, signal } from '@angular/core';\n\n@Directive({\n  standalone: true,\n  selector: '[appTheme]'\n})\nexport class ThemeDirective {\n  // Signal-based input with default value\n  theme = input<'light' | 'dark'>('light');\n\n  // Internal signal for state\n  private backgroundColor = signal('transparent');\n  private textColor = signal('#000000');\n\n  constructor(private el: ElementRef) {\n    // Effect to update styles when theme changes\n    effect(() => {\n      if (this.theme() === 'dark') {\n        this.backgroundColor.set('#333333');\n        this.textColor.set('#ffffff');\n      } else {\n        this.backgroundColor.set('#ffffff');\n        this.textColor.set('#333333');\n      }\n\n      // Apply the styles\n      this.el.nativeElement.style.backgroundColor = this.backgroundColor();\n      this.el.nativeElement.style.color = this.textColor();\n    });\n  }\n}`;\n\n  hostDirectiveCode = `import { Directive, input } from '@angular/core';\n\n// Base directive for validation errors\n@Directive({\n  standalone: true,\n  selector: '[appErrorState]',\n  host: {\n    '[class.error]': 'hasError'\n  }\n})\nexport class ErrorStateDirective {\n  hasError = input<boolean>(false);\n}\n\n// Tooltip directive for messages\n@Directive({\n  standalone: true,\n  selector: '[appTooltip]',\n  host: {\n    '(mouseenter)': 'showTooltip()',\n    '(mouseleave)': 'hideTooltip()'\n  }\n})\nexport class TooltipDirective {\n  message = input<string>('');\n\n  private tooltipElement: HTMLElement | null = null;\n\n  showTooltip() {\n    // Create tooltip logic\n    this.tooltipElement = document.createElement('div');\n    this.tooltipElement.textContent = this.message();\n    this.tooltipElement.classList.add('tooltip');\n    document.body.appendChild(this.tooltipElement);\n  }\n\n  hideTooltip() {\n    if (this.tooltipElement) {\n      document.body.removeChild(this.tooltipElement);\n      this.tooltipElement = null;\n    }\n  }\n}\n\n// Combined directive using Host Directives\n@Directive({\n  standalone: true,\n  selector: '[appValidation]',\n  // Host multiple directives together\n  hostDirectives: [\n    {\n      directive: ErrorStateDirective,\n      inputs: ['hasError']\n    },\n    {\n      directive: TooltipDirective,\n      inputs: ['message']\n    }\n  ]\n})\nexport class ValidationDirective {}`;\n\n  directiveUsageCode = `<!-- Using standalone directive -->\n<div appHighlight highlightColor=\"lightblue\">\n  This text has a light blue background\n</div>\n\n<!-- Using signal-based directive -->\n<p [appTheme]=\"isDarkMode ? 'dark' : 'light'\">\n  This text adapts to the current theme\n</p>\n\n<!-- Using composed host directives -->\n<input\n  appValidation\n  [hasError]=\"form.controls.email.invalid\"\n  [message]=\"'Please enter a valid email address'\"\n/>\n\n<!-- Using multiple directives -->\n<button\n  appHighlight\n  [appTheme]=\"'dark'\"\n  [disabled]=\"isLoading\"\n>\n  Submit\n</button>`;\n\n  deferredDirectiveCode = `<!-- Defer loading heavy directives -->\n@defer {\n  <div class=\"chart-container\"\n       appChartDirective\n       [chartData]=\"complexData\">\n  </div>\n} @loading {\n  <div class=\"loading-indicator\">Loading chart...</div>\n} @error {\n  <div class=\"error-message\">Failed to load chart directive</div>\n}\n\n<!-- Prefetching directive with signal input -->\n@defer (on viewport; prefetch on idle) {\n  <div class=\"interactive-element\"\n       appInteractive\n       [config]=\"interactiveConfig\">\n  </div>\n}`;\n\n  // Legacy code examples\n  code_8 = `ng generate directive highlight`;\n  code_9 = `import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n  @Input() appHighlightColor = 'yellow';\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.highlight(this.appHighlightColor);\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.highlight(null);\n  }\n\n  private highlight(color: string | null) {\n    this.renderer.setStyle(\n      this.el.nativeElement,\n      'background-color',\n      color\n    );\n  }\n}`;\n  code_10 = `<p appHighlight appHighlightColor=\"blue\">Hover over me!</p>`;\n  codeb_1 = `// Incorrect way (avoid)\n@Directive({\n  selector: '[appUnsafe]'\n})\nexport class UnsafeDirective {\n  constructor(private el: ElementRef) {\n    // Direct DOM manipulation (unsafe)\n    this.el.nativeElement.style.backgroundColor = 'yellow';\n  }\n}\n\n// Correct way (recommended)\n@Directive({\n  selector: '[appSafe]'\n})\nexport class SafeDirective {\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    // Using Renderer2 for safe DOM manipulation\n    this.renderer.setStyle(\n      this.el.nativeElement,\n      'backgroundColor',\n      'yellow'\n    );\n  }\n}`;\n  codeb_2 = `@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n  // Using HostBinding to bind to the host element's property\n  @HostBinding('style.backgroundColor') backgroundColor: string;\n\n  // Using HostListener to listen for events\n  @HostListener('mouseenter') onMouseEnter() {\n    this.backgroundColor = 'yellow';\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.backgroundColor = null;\n  }\n}`;\n  codeb_3 = `@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n  // Use input properties to make the directive configurable\n  @Input() highlightColor = 'yellow';\n  @Input() defaultColor = 'transparent';\n\n  // Using HostBinding with the input property\n  @HostBinding('style.backgroundColor') backgroundColor: string;\n\n  // Using HostListener with the input properties\n  @HostListener('mouseenter') onMouseEnter() {\n    this.backgroundColor = this.highlightColor;\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.backgroundColor = this.defaultColor;\n  }\n}`;\n  codeb_4 = `// highlight.directive.spec.ts\nimport { Component, DebugElement } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { HighlightDirective } from './highlight.directive';\n\n@Component({\n  template: \\`<div appHighlight\n                   [highlightColor]=\"color\">Test</div>\\`\n})\nclass TestComponent {\n  color = 'yellow';\n}\n\ndescribe('HighlightDirective', () => {\n  let component: TestComponent;\n  let fixture: ComponentFixture<TestComponent>;\n  let element: DebugElement;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      declarations: [\n        TestComponent,\n        HighlightDirective\n      ]\n    });\n\n    fixture = TestBed.createComponent(TestComponent);\n    component = fixture.componentInstance;\n    element = fixture.debugElement.query(By.css('div'));\n\n    fixture.detectChanges();\n  });\n\n  it('should have yellow background on mouse enter', () => {\n    element.triggerEventHandler('mouseenter', {});\n    fixture.detectChanges();\n\n    expect(element.nativeElement.style.backgroundColor).toBe('yellow');\n  });\n\n  it('should have transparent background on mouse leave', () => {\n    element.triggerEventHandler('mouseenter', {});\n    fixture.detectChanges();\n\n    element.triggerEventHandler('mouseleave', {});\n    fixture.detectChanges();\n\n    expect(element.nativeElement.style.backgroundColor).toBe('transparent');\n  });\n});`;\n  codeb_5 = `@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() highlightColor = 'yellow';\n  private listener: () => void;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    // Initialization logic\n    this.setupEventListeners();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // React to input changes\n    if (changes.highlightColor && !changes.highlightColor.firstChange) {\n      // Update appearance when color changes\n      this.updateHighlight();\n    }\n  }\n\n  private setupEventListeners(): void {\n    // Set up event listeners\n    this.listener = this.renderer.listen(\n      this.el.nativeElement,\n      'mouseenter',\n      () => {\n        this.updateHighlight();\n      }\n    );\n  }\n\n  private updateHighlight(): void {\n    this.renderer.setStyle(\n      this.el.nativeElement,\n      'backgroundColor',\n      this.highlightColor\n    );\n  }\n\n  ngOnDestroy(): void {\n    // Clean up to prevent memory leaks\n    if (this.listener) {\n      this.listener();\n    }\n  }\n}`;\n  codeb_6 = `@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n  // Default value for the highlight color\n  @Input() highlightColor = 'yellow';\n\n  // Default value for the default color\n  @Input() defaultColor = 'transparent';\n\n  // More default values as needed\n  @Input() transitionDuration = '0.3s';\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.highlight(this.highlightColor);\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.highlight(this.defaultColor);\n  }\n\n  private highlight(color: string) {\n    this.renderer.setStyle(\n      this.el.nativeElement,\n      'backgroundColor',\n      color\n    );\n    this.renderer.setStyle(\n      this.el.nativeElement,\n      'transition',\n      \\`background-color \\${this.transitionDuration}\\`\n    );\n  }\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n    this.getCode();\n  }\n\n  private getCode() {\n    this.http.get('/assets/examples/attribute-directives/highlight.directive.ts', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => {\n        // Process legacy code examples if needed\n      });\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Attribute Directive\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Attribute Directives</span>\n      in Angular 19 are used to change the appearance, behavior, or layout of a DOM element. Unlike structural directives that change the DOM layout by adding or removing elements, attribute directives only affect the element they are applied to. Angular 19 introduces powerful enhancements for directives including signal-based inputs, host directives, and better integration with standalone components.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n\n\n<ng-template #notesRef>\n  <p>Angular 19 Directive Enhancements</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Standalone Directives</strong>:\n      Directives can now be fully standalone, making them more modular and easier to distribute.\n    </li>\n    <li>\n      <strong>Signal-based Inputs</strong>:\n      Angular 19 introduces signal-based inputs for directives, improving performance and reactivity.\n    </li>\n    <li>\n      <strong>Host Directives</strong>:\n      Compose multiple directives together to create more powerful, reusable directive combinations.\n    </li>\n    <li>\n      <strong>Improved Performance</strong>:\n      Enhanced change detection and optimized rendering for directives in Angular 19.\n    </li>\n    <li>\n      <strong>Deferrable Views Integration</strong>:\n      Directives can work with Angular's new deferrable views for improved loading performance.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Creating a Standalone Directive in Angular 19</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre>\n      <code [highlight]=\"standaloneDirectiveCode\" [languages]=\"['typescript']\"></code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Signal-Based Directives</p>\n  <p class=\"text-sm mt-2 mb-4\">\n    Angular 19 introduces powerful signal-based inputs for directives, allowing for more efficient reactivity:\n  </p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre>\n      <code [highlight]=\"signalDirectiveCode\" [languages]=\"['typescript']\"></code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Host Directives for Composition</p>\n  <p class=\"text-sm mt-2 mb-4\">\n    Angular 19 enhances Host Directives for better directive composition:\n  </p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre>\n      <code [highlight]=\"hostDirectiveCode\" [languages]=\"['typescript']\"></code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Using Directives in Templates</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre>\n      <code [highlight]=\"directiveUsageCode\" [languages]=\"['html']\"></code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Deferrable Views with Directives</p>\n  <p class=\"text-sm mt-2 mb-4\">\n    Angular 19's deferrable views feature works seamlessly with directives:\n  </p>\n  <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n  <span #code5 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n    <pre>\n      <code [highlight]=\"deferredDirectiveCode\" [languages]=\"['html']\"></code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Common Angular 19 Directive Scenarios</p>\n  <br>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Scenario</th>\n        <th class=\"py-3 px-4 text-left\">Implementation</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Theme Switching</td>\n        <td class=\"py-3 px-4\">Signal-based directive that dynamically updates styles</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Form Validation</td>\n        <td class=\"py-3 px-4\">Host directive combining error state and validation message directives</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Lazy Loading</td>\n        <td class=\"py-3 px-4\">Directive with deferrable views to load content on demand</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Performance Monitoring</td>\n        <td class=\"py-3 px-4\">Directive that tracks render times and reports to analytics</td>\n      </tr>\n    </tbody>\n  </table>\n\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Prefer Standalone Directives</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Modular Design</strong>:\n          Create standalone directives that don't rely on NgModules for better isolation and sharing.\n        </li>\n        <li>\n          <strong>Avoid Global Imports</strong>:\n          Import only the directives you need directly in components for better tree-shaking.\n        </li>\n        <li>\n          <strong>Consider Packaging</strong>:\n          Package related directives together for better distribution and maintenance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Signal-Based Inputs</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Input Signals</strong>:\n          Replace &#64;Input() with the new input() signal function for improved performance.\n        </li>\n        <li>\n          <strong>Create Computed Properties</strong>:\n          Use computed() for derived values to avoid unnecessary calculations.\n        </li>\n        <li>\n          <strong>Apply Effects Carefully</strong>:\n          Use effect() for side effects but be cautious of performance implications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize for Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Minimize DOM Manipulations</strong>:\n          Batch DOM changes and use renderer2 instead of direct DOM manipulation.\n        </li>\n        <li>\n          <strong>Avoid Expensive Calculations</strong>:\n          Cache results and use memoization for complex calculations.\n        </li>\n        <li>\n          <strong>Profile and Measure</strong>:\n          Use Angular DevTools to profile directive performance and identify bottlenecks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Directive Composition</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Host Directives</strong>:\n          Compose multiple directives together using the hostDirectives feature.\n        </li>\n        <li>\n          <strong>Balance Granularity</strong>:\n          Create small, focused directives that can be composed rather than monolithic directives.\n        </li>\n        <li>\n          <strong>Consider API Surface</strong>:\n          Carefully design which inputs and outputs to expose from composed directives.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Defensive Programming</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Handle Edge Cases</strong>:\n          Implement checks for null or undefined values to prevent runtime errors.\n        </li>\n        <li>\n          <strong>Clean Up Resources</strong>:\n          Use ngOnDestroy to remove event listeners and clean up resources.\n        </li>\n        <li>\n          <strong>Provide Meaningful Error Messages</strong>:\n          Include clear error messages for common misconfigurations.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Angular 19 Directives</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Improved Performance</strong>: Signal-based reactivity for faster rendering and updates</li>\n      <li><strong>Better Modularity</strong>: Standalone directives for improved tree-shaking and code organization</li>\n      <li><strong>Enhanced Composition</strong>: Host directives for combining multiple behaviors</li>\n      <li><strong>Type Safety</strong>: Stronger type checking and improved type inference</li>\n      <li><strong>Deferrable Integration</strong>: Seamless integration with deferrable views for lazy loading</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Challenges</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Migration Effort</strong>: Updating existing directives to use new patterns requires effort</li>\n      <li><strong>Learning Curve</strong>: Signal-based inputs and host directives introduce new concepts</li>\n      <li><strong>Debugging Complexity</strong>: Composed directives can be harder to debug</li>\n      <li><strong>Integration with Legacy Code</strong>: Mixing old and new directive patterns can be challenging</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Traditional vs. Signal-Based Directives</p>\n    <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n      <thead>\n        <tr class=\"bg-gray-800 text-gray-100\">\n          <th class=\"py-3 px-4 text-left\">Feature</th>\n          <th class=\"py-3 px-4 text-left\">Traditional Directive</th>\n          <th class=\"py-3 px-4 text-left\">Signal-Based Directive</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Input Change Detection</td>\n          <td class=\"py-3 px-4\">OnChanges lifecycle hook</td>\n          <td class=\"py-3 px-4\">Automatic with signals</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Derived Values</td>\n          <td class=\"py-3 px-4\">Manual recalculation</td>\n          <td class=\"py-3 px-4\">Computed signals</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Reactivity</td>\n          <td class=\"py-3 px-4\">Zone.js based</td>\n          <td class=\"py-3 px-4\">Fine-grained reactivity</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Performance</td>\n          <td class=\"py-3 px-4\">Potentially wasteful checks</td>\n          <td class=\"py-3 px-4\">Only updates when signals change</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Related Angular 19 Features</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Signals</strong>: Core reactive primitive used by directives for fine-grained reactivity</li>\n      <li><strong>Standalone Components</strong>: Complement to standalone directives for modular architecture</li>\n      <li><strong>Deferrable Views</strong>: Works with directives to improve initial load performance</li>\n      <li><strong>Zoneless Applications</strong>: Signal-based directives work well in zoneless mode</li>\n      <li><strong>Server-Side Rendering</strong>: Directives in SSR contexts with improved hydration</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Directive Types in Angular 19</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Attribute Directives</strong>: Change appearance, behavior, or layout of elements</li>\n      <li><strong>Structural Directives</strong>: Change DOM layout by adding/removing elements</li>\n      <li><strong>Component Directives</strong>: Components are technically specialized directives</li>\n      <li><strong>Host Directives</strong>: Composed directives for combining behaviors</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Angular 19 Improvements for Directives</p>\n    <ul class=\"list-disc pl-4\">\n      <li>Signal-based input() function for better performance</li>\n      <li>Enhanced hostDirectives API for better composition</li>\n      <li>Improved type checking and inference for directive inputs/outputs</li>\n      <li>Better tree-shaking for directive dependencies</li>\n      <li>Integration with deferrable views and dynamic imports</li>\n      <li>Improved tooling and debugging experience in Angular DevTools</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mt-6 mb-2\">Recommended Documentation</p>\n    <ul class=\"list-disc pl-4\">\n      <li><a href=\"https://angular.dev/guide/directives\" class=\"text-sky-400 hover:underline\">Angular.dev: Directive Overview</a></li>\n      <li><a href=\"https://angular.dev/guide/directives/attribute-directives\" class=\"text-sky-400 hover:underline\">Angular.dev: Attribute Directives</a></li>\n      <li><a href=\"https://angular.dev/guide/signals\" class=\"text-sky-400 hover:underline\">Angular.dev: Signals</a></li>\n      <li><a href=\"https://angular.dev/guide/host-directives\" class=\"text-sky-400 hover:underline\">Angular.dev: Host Directives</a></li>\n    </ul>\n  </div>\n</ng-template>\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Data Binding\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Data Binding</span>\n      in Angular 19 provides a powerful mechanism to synchronize data between component class and template view. Angular 19 offers enhanced binding capabilities with signals, standalone components, and improved change detection for more efficient updates and better performance.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>Types of Data Binding in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Interpolation</strong>:\n      Displays component data in the view using double curly braces syntax.\n    </li>\n    <li>\n      <strong>Property Binding</strong>:\n      Binds values to properties of DOM elements using square brackets.\n    </li>\n    <li>\n      <strong>Event Binding</strong>:\n      Listens for DOM events using parentheses.\n    </li>\n    <li>\n      <strong>Two-way Binding</strong>:\n      Combines property and event binding using the banana-in-a-box syntax [()].\n    </li>\n    <li>\n      <strong>Signal-based Binding</strong>:\n      Angular 19's reactive approach for fine-grained updates.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Binding Enhancements</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Signal-based Reactive Binding</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces streamlined syntax for binding to signals, providing more efficient change detection and granular updates.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Standalone Component Binding</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Simplified input/output binding syntax for standalone components with better tree-shaking and performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Control Flow Binding</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>New <code>&#64;if</code>, <code>&#64;for</code>, and <code>&#64;switch</code> syntax in templates for more efficient conditional and list rendering with optimized binding.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Zoneless Change Detection</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Explicit, fine-grained control over when bindings update without relying on Zone.js for improved performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Type-safe Template Binding</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved TypeScript integration with template binding for stronger type checking and better developer experience.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Binding Syntax Examples</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Interpolation</strong>:\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>html</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"interpolationCode\" [languages]=\"['html']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Property Binding</strong>:\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>html</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"propertyBindingCode\" [languages]=\"['html']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Event Binding</strong>:\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>html</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"eventBindingCode\" [languages]=\"['html']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Two-way Binding</strong>:\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>html</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"twoWayBindingCode\" [languages]=\"['html']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Signal-based Binding</strong>:\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript+html</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"signalBindingCode\" [languages]=\"['typescript']\"></code>\n        </pre>\n      </span>\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Binding Use Cases</p>\n  <br>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Binding Type</th>\n        <th class=\"py-3 px-4 text-left\">Best Use Cases</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Interpolation</td>\n        <td class=\"py-3 px-4\">Displaying text content, calculated values, or formatting data</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Property Binding</td>\n        <td class=\"py-3 px-4\">Setting element attributes, styles, classes, or component inputs</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Event Binding</td>\n        <td class=\"py-3 px-4\">Handling user actions like clicks, input, and form submissions</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Two-way Binding</td>\n        <td class=\"py-3 px-4\">Form inputs, custom components with input/output pairs</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Signal-based</td>\n        <td class=\"py-3 px-4\">Real-time data, performance-critical views, reactive patterns</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Prefer Signal-based Binding</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Signal Primitives</strong>:\n          Use signal() for reactive state, computed() for derived values, and effect() for side effects.\n        </li>\n        <li>\n          <strong>Explicit Change Detection</strong>:\n          Signals allow more predictable and efficient change detection compared to NgZone-based detection.\n        </li>\n        <li>\n          <strong>Fine-grained Updates</strong>:\n          Angular 19 signals provide more granular updates than traditional property binding.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement OnPush Change Detection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Immutable Data</strong>:\n          Use immutable data structures and create new object references when data changes.\n        </li>\n        <li>\n          <strong>Change Detection Strategy</strong>:\n          Set ChangeDetectionStrategy.OnPush for all components to improve performance.\n        </li>\n        <li>\n          <strong>Avoid Deep Object Nesting</strong>:\n          Flatten data structures to make change detection more efficient.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Template Binding</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Pure Pipes</strong>:\n          Leverage pure pipes for transformations instead of methods in interpolation.\n        </li>\n        <li>\n          <strong>Track Items By</strong>:\n          Always include trackBy functions with ngFor to improve rendering performance.\n        </li>\n        <li>\n          <strong>New Control Flow</strong>:\n          Use the new &#64;for syntax with tracking instead of *ngFor for better performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Minimize DOM Updates</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Debounce Inputs</strong>:\n          Debounce event handlers for inputs that update frequently.\n        </li>\n        <li>\n          <strong>Async Pipe</strong>:\n          Use the async pipe to automatically handle subscription and unsubscription.\n        </li>\n        <li>\n          <strong>Virtual Scrolling</strong>:\n          For large lists, use the Angular CDK's virtual scrolling with efficient bindings.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Type-safe Templates</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Strict Type Checking</strong>:\n          Enable strictTemplates in tsconfig.json for type-safe templates.\n        </li>\n        <li>\n          <strong>Type Coercion</strong>:\n          Use appropriate type coercion for inputs to avoid runtime errors.\n        </li>\n        <li>\n          <strong>Template Context</strong>:\n          Define proper types for template context variables in ViewChild and ContentChild.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Angular 19 Data Binding</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Reactive Updates</strong>: Signal-based binding provides fine-grained reactivity</li>\n      <li><strong>Type Safety</strong>: Enhanced template type checking prevents runtime errors</li>\n      <li><strong>Performance</strong>: Improved change detection with OnPush and zoneless options</li>\n      <li><strong>Declarative Syntax</strong>: Clear separation between component logic and view</li>\n      <li><strong>Control Flow Integration</strong>: Seamless integration with new built-in control flow</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Challenges</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Learning Curve</strong>: Signal-based binding introduces new concepts</li>\n      <li><strong>Migration Effort</strong>: Updating existing applications to use signals</li>\n      <li><strong>Debugging Complexity</strong>: Can be challenging to track reactive data flow</li>\n      <li><strong>Boilerplate</strong>: Some binding patterns require additional setup code</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Traditional vs. Signal-Based Binding</p>\n    <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n      <thead>\n        <tr class=\"bg-gray-800 text-gray-100\">\n          <th class=\"py-3 px-4 text-left\">Feature</th>\n          <th class=\"py-3 px-4 text-left\">Traditional Binding</th>\n          <th class=\"py-3 px-4 text-left\">Signal-Based Binding</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Change Detection</td>\n          <td class=\"py-3 px-4\">Zone.js-based</td>\n          <td class=\"py-3 px-4\">Fine-grained, explicit</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Performance</td>\n          <td class=\"py-3 px-4\">Can trigger unnecessary checks</td>\n          <td class=\"py-3 px-4\">Only updates affected parts</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Reactivity</td>\n          <td class=\"py-3 px-4\">Coarse-grained</td>\n          <td class=\"py-3 px-4\">Fine-grained with dependency tracking</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Derived Values</td>\n          <td class=\"py-3 px-4\">Manual or getter methods</td>\n          <td class=\"py-3 px-4\">Efficient computed signals</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</ng-template>\n\n<ng-template #topicsRef>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Related Angular 19 Features</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Signals API</strong>: Core reactive primitives used for state management</li>\n      <li><strong>Built-in Control Flow</strong>: New template syntax for conditionals and loops</li>\n      <li><strong>Zoneless Applications</strong>: Running Angular without Zone.js</li>\n      <li><strong>Standalone Components</strong>: Simplified, self-contained components</li>\n      <li><strong>Input Signal Function</strong>: New way to define component inputs</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Advanced Binding Techniques</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Content Projection</strong>: Advanced techniques for ng-content</li>\n      <li><strong>Dynamic Component Loading</strong>: Binding to dynamically created components</li>\n      <li><strong>Custom Two-way Binding</strong>: Creating custom ngModel implementations</li>\n      <li><strong>Template Context Variables</strong>: Using let-* variables in templates</li>\n      <li><strong>Attribute Directives</strong>: Creating custom attribute directives with bindings</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Performance Considerations</p>\n    <ul class=\"list-disc pl-4\">\n      <li>Using OnPush change detection strategy with immutable data patterns</li>\n      <li>Implementing trackBy functions to optimize rendering of lists</li>\n      <li>Avoiding expensive computations in template expressions</li>\n      <li>Using pure pipes instead of methods in templates</li>\n      <li>Leveraging signal-based reactivity for fine-grained updates</li>\n      <li>Employing deferrable views to lazy-load non-critical UI sections</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mt-6 mb-2\">Recommended Documentation</p>\n    <ul class=\"list-disc pl-4\">\n      <li><a href=\"https://angular.dev/guide/templates/binding\" class=\"text-sky-400 hover:underline\">Angular.dev: Data Binding</a></li>\n      <li><a href=\"https://angular.dev/guide/signals\" class=\"text-sky-400 hover:underline\">Angular.dev: Signals</a></li>\n      <li><a href=\"https://angular.dev/guide/templates/control-flow\" class=\"text-sky-400 hover:underline\">Angular.dev: Built-in Control Flow</a></li>\n      <li><a href=\"https://angular.dev/guide/change-detection\" class=\"text-sky-400 hover:underline\">Angular.dev: Change Detection</a></li>\n    </ul>\n  </div>\n</ng-template>\n\n\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-binding',\n  templateUrl: './binding.component.html',\n  styleUrls: ['./binding.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BindingComponent {\n  selectedTab = 1;\n\n  @ViewChild('code1') code1?: ElementRef;\n  @ViewChild('code2') code2?: ElementRef;\n  @ViewChild('code3') code3?: ElementRef;\n  @ViewChild('code4') code4?: ElementRef;\n  @ViewChild('code5') code5?: ElementRef;\n\n  // Code examples for different binding types\n  interpolationCode = `<!-- Interpolation with double curly braces -->\n<h1>Hello, {{ name }}</h1>\n<p>Sum: {{ 1 + 2 + 3 }}</p>\n<div>Status: {{ isActive ? 'Active' : 'Inactive' }}</div>\n<p>{{ getFullName() }}</p>`;\n\n  propertyBindingCode = `<!-- Property binding with square brackets -->\n<img [src]=\"imageUrl\" [alt]=\"imageAlt\">\n<button [disabled]=\"isSubmitting\">Submit</button>\n<div [class.highlight]=\"isSelected\">Selected item</div>\n<app-user-profile [user]=\"currentUser\"></app-user-profile>`;\n\n  eventBindingCode = `<!-- Event binding with parentheses -->\n<button (click)=\"saveData()\">Save</button>\n<input (input)=\"handleInput($event)\">\n<div (mouseenter)=\"showTooltip()\" (mouseleave)=\"hideTooltip()\">\n  Hover me\n</div>\n<form (submit)=\"submitForm($event)\"></form>`;\n\n  twoWayBindingCode = `<!-- Two-way binding with [(ngModel)] -->\n<input [(ngModel)]=\"userName\" placeholder=\"Enter username\">\n\n<!-- Two-way binding can also be written as: -->\n<input\n  [ngModel]=\"userName\"\n  (ngModelChange)=\"userName = $event\">\n\n<!-- Custom two-way binding for components -->\n<app-color-picker\n  [(color)]=\"selectedColor\">\n</app-color-picker>`;\n\n  signalBindingCode = `// Component with signal-based state\nimport { Component, signal, computed } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  template: \\`\n    <!-- Binding to signal values directly -->\n    <div>Count: {{ count() }}</div>\n    <div>Squared: {{ countSquared() }}</div>\n\n    <!-- Event binding to update signals -->\n    <button (click)=\"increment()\">Increment</button>\n    <button (click)=\"decrement()\">Decrement</button>\n    <button (click)=\"reset()\">Reset</button>\n  \\`\n})\nexport class CounterComponent {\n  // Create a signal with initial value\n  count = signal(0);\n\n  // Computed signal that automatically updates\n  countSquared = computed(() => this.count() * this.count());\n\n  increment() {\n    // Update signal value with set method\n    this.count.set(this.count() + 1);\n  }\n\n  decrement() {\n    // Alternative update approach\n    this.count.update(value => value - 1);\n  }\n\n  reset() {\n    this.count.set(0);\n  }\n}`;\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Bootstrapping Angular Applications\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Bootstrapping</span>\n      in Angular 19 is the process of initializing and launching an application. Angular 19 provides a modern, streamlined bootstrapping approach that focuses on performance, flexibility, and developer experience with support for standalone components, zoneless operation, and server-side rendering.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>Angular 19 Bootstrapping Methods</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Standalone Component Bootstrapping</strong>:\n      Bootstrap directly with a standalone root component without a root NgModule.\n    </li>\n    <li>\n      <strong>Zoneless Bootstrapping</strong>:\n      Bootstrap without Zone.js for better performance and more explicit change detection.\n    </li>\n    <li>\n      <strong>Server-Side Rendering (SSR) Bootstrap</strong>:\n      Specialized bootstrapping for server-rendered applications with hydration.\n    </li>\n    <li>\n      <strong>Progressive Web App Bootstrap</strong>:\n      Bootstrap with service worker integration for offline capabilities.\n    </li>\n    <li>\n      <strong>Multiple App Bootstrap</strong>:\n      Bootstrap multiple Angular applications in the same page.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Bootstrapping Enhancements</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Streamlined Configuration API</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 provides a cleaner, more modular approach to application configuration using provider functions.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Advanced Dependency Injection</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved provider handling with more granular control over provider scopes and environments.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Optimized Hydration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Better client-side hydration for server-rendered applications with preserved DOM state and minimized layout shifts.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Stable Zoneless Operation</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Fully stabilized zoneless change detection that eliminates the need for Zone.js, reducing bundle size and improving runtime performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Server-Side Rendering</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved integration with modern server environments including support for partial hydration and streaming.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Bootstrapping Code Examples</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Standalone Component Bootstrapping (main.ts)</strong>:\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"mainTsCode\" [languages]=\"['typescript']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Application Configuration (app.config.ts)</strong>:\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"appConfigCode\" [languages]=\"['typescript']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Standalone Root Component</strong>:\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"appComponentCode\" [languages]=\"['typescript']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Zoneless Bootstrapping</strong>:\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"zonelessBootstrapCode\" [languages]=\"['typescript']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Server-Side Rendering Bootstrap</strong>:\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"serverBootstrapCode\" [languages]=\"['typescript']\"></code>\n        </pre>\n      </span>\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Bootstrapping Providers Reference</p>\n  <br>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Provider Function</th>\n        <th class=\"py-3 px-4 text-left\">Purpose</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>provideRouter()</code></td>\n        <td class=\"py-3 px-4\">Configure routing capabilities for the application</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>provideHttpClient()</code></td>\n        <td class=\"py-3 px-4\">Enable HTTP capabilities with optional features like fetch API</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>provideClientHydration()</code></td>\n        <td class=\"py-3 px-4\">Enable client-side hydration for server-rendered applications</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>provideAnimations()</code></td>\n        <td class=\"py-3 px-4\">Configure animation capabilities for the application</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>provideZoneChangeDetection()</code></td>\n        <td class=\"py-3 px-4\">Configure change detection with or without Zone.js</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use Standalone Component Bootstrapping</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Default for New Applications</strong>:\n          Use standalone bootstrapping for all new Angular 19 applications for a more streamlined experience.\n        </li>\n        <li>\n          <strong>Use Application Config</strong>:\n          Keep the configuration in a separate app.config.ts file to maintain clean separation of concerns.\n        </li>\n        <li>\n          <strong>Explicit Provider Functions</strong>:\n          Use the provider functions (provideX) instead of direct provider arrays for better tree-shaking.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Consider Zoneless Bootstrapping</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Evaluate Performance Benefits</strong>:\n          Measure if the zoneless approach provides meaningful benefits for your specific application.\n        </li>\n        <li>\n          <strong>Signal-Based Components</strong>:\n          If using zoneless bootstrapping, ensure components use signals for state management.\n        </li>\n        <li>\n          <strong>Manual Change Detection</strong>:\n          Be disciplined about triggering change detection manually when needed in zoneless mode.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Server-Side Rendering</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Enable Partial Hydration</strong>:\n          Configure bootstrapping to support partial hydration for better performance.\n        </li>\n        <li>\n          <strong>Use Transfer State</strong>:\n          Configure state transfer between server and client to avoid duplicate data fetching.\n        </li>\n        <li>\n          <strong>Appropriate Prerendering Strategy</strong>:\n          Choose between static prerendering and dynamic SSR based on content update frequency.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Configure for Production</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Environment-Specific Configuration</strong>:\n          Use different bootstrap configurations for development and production.\n        </li>\n        <li>\n          <strong>Enable Strict Mode</strong>:\n          Bootstrap with strict runtime checks during development but disable for production.\n        </li>\n        <li>\n          <strong>Configure Error Handling</strong>:\n          Add global error handling during bootstrap to gracefully handle application errors.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Consider Progressive Web App Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Service Worker Registration</strong>:\n          Configure service worker during bootstrap for offline capabilities.\n        </li>\n        <li>\n          <strong>Lazy Loading Strategy</strong>:\n          Plan your bootstrapping to support efficient lazy loading of application modules.\n        </li>\n        <li>\n          <strong>Initial Render Optimization</strong>:\n          Bootstrap with a focus on fast initial rendering through preloading critical components.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Angular 19 Bootstrapping</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Simplified Configuration</strong>: More intuitive application setup with provider functions</li>\n      <li><strong>Better Performance</strong>: Zoneless bootstrapping and optimized change detection</li>\n      <li><strong>Improved Tree-shaking</strong>: More granular inclusion of framework features</li>\n      <li><strong>Enhanced SSR Support</strong>: Better hydration and server integration</li>\n      <li><strong>Modular Provider System</strong>: Ability to conditionally include or configure providers</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Challenges</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Migration Complexity</strong>: Adapting existing NgModule-based applications can be challenging</li>\n      <li><strong>Zoneless Learning Curve</strong>: Understanding when to trigger change detection manually</li>\n      <li><strong>Configuration Spread</strong>: Application configuration can be spread across multiple files</li>\n      <li><strong>Third-party Library Compatibility</strong>: Some libraries may not be fully compatible with new bootstrapping</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">NgModule vs. Standalone Bootstrapping</p>\n    <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n      <thead>\n        <tr class=\"bg-gray-800 text-gray-100\">\n          <th class=\"py-3 px-4 text-left\">Feature</th>\n          <th class=\"py-3 px-4 text-left\">NgModule Bootstrapping</th>\n          <th class=\"py-3 px-4 text-left\">Standalone Bootstrapping</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Configuration</td>\n          <td class=\"py-3 px-4\">Via module imports and providers</td>\n          <td class=\"py-3 px-4\">Via provider functions</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Bundle Size</td>\n          <td class=\"py-3 px-4\">Potentially larger due to module structure</td>\n          <td class=\"py-3 px-4\">Typically smaller with better tree-shaking</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Compatibility</td>\n          <td class=\"py-3 px-4\">Works with all Angular libraries</td>\n          <td class=\"py-3 px-4\">May require adapters for older libraries</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Flexibility</td>\n          <td class=\"py-3 px-4\">Constrained by module boundaries</td>\n          <td class=\"py-3 px-4\">More granular control over dependencies</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</ng-template>\n\n<ng-template #topicsRef>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Related Angular 19 Features</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Standalone Components</strong>: Self-contained components that don't require NgModules</li>\n      <li><strong>Server-Side Rendering</strong>: Rendering Angular applications on the server</li>\n      <li><strong>Hydration</strong>: Process of attaching event listeners to server-rendered HTML</li>\n      <li><strong>Signals</strong>: Reactive primitives for state management and change detection</li>\n      <li><strong>Dependency Injection</strong>: Framework for providing services to components</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Advanced Bootstrapping Scenarios</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Multiple Apps in One Page</strong>: Bootstrapping separate Angular applications in different DOM elements</li>\n      <li><strong>Dynamic Component Loading</strong>: Loading components programmatically after bootstrap</li>\n      <li><strong>Micro-Frontend Architecture</strong>: Creating modular applications with separate bootstrapping</li>\n      <li><strong>Testing Environment Setup</strong>: Bootstrapping components for isolated testing</li>\n      <li><strong>Custom Elements Integration</strong>: Bootstrapping Angular as web components</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Performance Considerations</p>\n    <ul class=\"list-disc pl-4\">\n      <li>Zoneless bootstrapping for applications with frequent updates</li>\n      <li>Server-side rendering for improved initial load performance</li>\n      <li>Deferred loading of non-critical components</li>\n      <li>Strategic preloading of commonly accessed features</li>\n      <li>Environment-specific providers for development vs. production</li>\n      <li>Careful configuration of global providers to minimize bundle size</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mt-6 mb-2\">Recommended Documentation</p>\n    <ul class=\"list-disc pl-4\">\n      <li><a href=\"https://angular.dev/guide/standalone-components\" class=\"text-sky-400 hover:underline\">Angular.dev: Standalone Components</a></li>\n      <li><a href=\"https://angular.dev/guide/ssr\" class=\"text-sky-400 hover:underline\">Angular.dev: Server-side Rendering</a></li>\n      <li><a href=\"https://angular.dev/guide/signals\" class=\"text-sky-400 hover:underline\">Angular.dev: Signals</a></li>\n      <li><a href=\"https://angular.dev/guide/dependency-injection\" class=\"text-sky-400 hover:underline\">Angular.dev: Dependency Injection</a></li>\n    </ul>\n  </div>\n</ng-template>\n\n\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-bootstrap',\n  templateUrl: './bootstrap.component.html',\n  styleUrls: ['./bootstrap.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BootstrapComponent {\n  selectedTab = 1;\n\n  @ViewChild('code1') code1?: ElementRef;\n  @ViewChild('code2') code2?: ElementRef;\n  @ViewChild('code3') code3?: ElementRef;\n  @ViewChild('code4') code4?: ElementRef;\n  @ViewChild('code5') code5?: ElementRef;\n\n  // Code examples for bootstrapping\n  mainTsCode = `// main.ts\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { appConfig } from './app/app.config';\n\n// Bootstrap with standalone components and application config\nbootstrapApplication(AppComponent, appConfig)\n  .catch(err => console.error(err));`;\n\n  appConfigCode = `// app.config.ts\nimport { ApplicationConfig } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { provideHttpClient, withFetch } from '@angular/common/http';\nimport { provideClientHydration } from '@angular/platform-browser';\nimport { provideAnimations } from '@angular/platform-browser/animations';\n\nimport { routes } from './app.routes';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(withFetch()),\n    provideClientHydration(),\n    provideAnimations()\n  ]\n};`;\n\n  appComponentCode = `// app.component.ts\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, CommonModule],\n  template: \\`\n    <main>\n      <h1>Angular 19 Application</h1>\n      <router-outlet></router-outlet>\n    </main>\n  \\`\n})\nexport class AppComponent {\n  title = 'angular19-app';\n}`;\n\n  zonelessBootstrapCode = `// Angular 19 zoneless bootstrapping\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport {\n  ApplicationConfig,\n  ɵNoopNgZone,\n  provideZoneChangeDetection\n} from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app/app.routes';\n\nconst appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(routes),\n    provideZoneChangeDetection({\n      // Use signal-based change detection without Zone.js\n      ngZoneInjector: () => new ɵNoopNgZone(),\n      eventCoalescing: true\n    })\n  ]\n};\n\nbootstrapApplication(AppComponent, appConfig)\n  .catch(err => console.error(err));`;\n\n  serverBootstrapCode = `// Angular 19 server-side rendering bootstrap\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { ApplicationConfig } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app/app.routes';\nimport { provideClientHydration } from '@angular/platform-browser';\nimport { provideServerRendering } from '@angular/platform-server';\n\nconst serverConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(),\n    provideServerRendering()\n  ]\n};\n\nbootstrapApplication(AppComponent, serverConfig)\n  .catch(err => console.error(err));`;\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Builders in Angular\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Builders</span>\n      in Angular 19 are specialized functions that implement the Angular Architect API to perform complex tasks like building, serving, testing, or deploying applications. Builders encapsulate build processes, allowing for custom, reusable build steps with well-defined inputs and outputs.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>Understanding Builders in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      Functions that implement the Architect API to perform complex build, test, or deployment processes.\n    </li>\n    <li>\n      <strong>Core Function</strong>:\n      Handle transformation tasks like bundling, minification, tree-shaking, and AOT compilation.\n    </li>\n    <li>\n      <strong>Usage</strong>:\n      Invoked via the Angular CLI's <code>ng run</code> command with specific target configurations.\n    </li>\n    <li>\n      <strong>Configuration</strong>:\n      Defined in the project's <code>angular.json</code> workspace configuration file.\n    </li>\n    <li>\n      <strong>Extensibility</strong>:\n      Can be customized or extended to create specialized build processes beyond the default ones.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Built-in Builders in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>application (Replaces browser in Angular 19)</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Processes and bundles the application for browsers with improved Vite-based bundling, offering faster builds and better performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>server</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Bundles the application for server-side rendering with enhanced hydration support.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>dev-server</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Serves the application during development with live reloading, now with improved refresh performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>karma</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Runs unit tests using Karma, now with better integration with modern testing tools.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>protractor</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Legacy builder for end-to-end testing (largely replaced by Cypress and Playwright in modern projects).</li>\n      </ul>\n    </li>\n    <li>\n      <strong>extract-i18n</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Extracts internationalization messages for translation, now with improved support for standalone components.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>ssr-dev-server</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>New in Angular 19 - Specialized development server with integrated server-side rendering capabilities for more accurate local development.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Creating Custom Builders</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Custom Builder Implementation</strong>:\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"customBuilderCode\" [languages]=\"['typescript']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Builder Configuration (builders.json)</strong>:\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>json</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"builderJsonCode\" [languages]=\"['json']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Options Schema (schema.json)</strong>:\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>json</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"schemaJsonCode\" [languages]=\"['json']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Using in angular.json</strong>:\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>json</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"angularJsonCode\" [languages]=\"['json']\"></code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Running Builders</strong>:\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n        <pre>\n          <code [highlight]=\"runBuilderCode\" [languages]=\"['typescript']\"></code>\n        </pre>\n      </span>\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Builder Enhancements</p>\n  <br>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Feature</th>\n        <th class=\"py-3 px-4 text-left\">Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Vite Integration</td>\n        <td class=\"py-3 px-4\">New application builder uses Vite for significantly faster build times</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ESBuild Support</td>\n        <td class=\"py-3 px-4\">Utilizes ESBuild for faster transpilation and bundling processes</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Advanced Caching</td>\n        <td class=\"py-3 px-4\">Improved caching strategies for faster incremental builds</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">SSR Integration</td>\n        <td class=\"py-3 px-4\">Better developer experience for server-side rendering workflows</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Partial Compilation</td>\n        <td class=\"py-3 px-4\">More efficient rebuilds by only compiling changed parts of the application</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Build Executor API</td>\n        <td class=\"py-3 px-4\">Enhanced API for creating custom build processes with better type safety</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use Appropriate Built-in Builders</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use application Builder</strong>:\n          For modern browser applications, prefer the new application builder over the legacy browser builder for better performance.\n        </li>\n        <li>\n          <strong>Server + Client Configuration</strong>:\n          For SSR applications, configure both application and server builders with consistent options.\n        </li>\n        <li>\n          <strong>Development Environments</strong>:\n          Use ssr-dev-server for more accurate local development when building SSR applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Builder Configuration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Production Builds</strong>:\n          Enable optimization, bundleBudgets, and extractLicenses for production builds.\n        </li>\n        <li>\n          <strong>Budget Planning</strong>:\n          Set appropriate budget warnings and errors to maintain bundle size discipline.\n        </li>\n        <li>\n          <strong>Browser Compatibility</strong>:\n          Configure the correct browserslist to optimize polyfill inclusion.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Creating Custom Builders</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Package Structure</strong>:\n          Organize custom builders in dedicated packages with proper exports.\n        </li>\n        <li>\n          <strong>Schema Validation</strong>:\n          Create comprehensive JSON schemas for builder options to enable CLI validation.\n        </li>\n        <li>\n          <strong>Composable Builders</strong>:\n          Design builders to be composable, allowing them to work together in pipelines.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Testing and Debugging</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Unit Testing</strong>:\n          Write proper unit tests for custom builders using the Architect testing utilities.\n        </li>\n        <li>\n          <strong>Verbose Logging</strong>:\n          Implement detailed logging in custom builders to aid debugging.\n        </li>\n        <li>\n          <strong>Incremental Builds</strong>:\n          Support incremental building where possible to improve performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Performance Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Parallel Execution</strong>:\n          Design builders to utilize multi-core processing where applicable.\n        </li>\n        <li>\n          <strong>Caching Strategy</strong>:\n          Implement effective caching for intermediate build artifacts.\n        </li>\n        <li>\n          <strong>Memory Management</strong>:\n          Be mindful of memory usage, particularly when processing large applications.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Angular Builders</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Standardized Interface</strong>: Provides a consistent API for all build processes</li>\n      <li><strong>Extensibility</strong>: Allows for customization of build processes to meet specific requirements</li>\n      <li><strong>Integration with CLI</strong>: Seamless integration with Angular CLI workflows</li>\n      <li><strong>Configuration Management</strong>: Centralized configuration in workspace files</li>\n      <li><strong>Reusability</strong>: Custom builders can be shared across projects and teams</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Challenges and Limitations</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Learning Curve</strong>: Creating custom builders requires understanding the Architect API</li>\n      <li><strong>Documentation Gaps</strong>: Limited detailed documentation on creating complex builders</li>\n      <li><strong>Testing Difficulty</strong>: Testing builders can be complex due to build system dependencies</li>\n      <li><strong>Versioning Challenges</strong>: Custom builders may need updates with Angular version changes</li>\n      <li><strong>Performance Overhead</strong>: The Architect system adds some overhead to simple build processes</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Angular 19 Builder Improvements</p>\n    <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n      <thead>\n        <tr class=\"bg-gray-800 text-gray-100\">\n          <th class=\"py-3 px-4 text-left\">Previous Angular</th>\n          <th class=\"py-3 px-4 text-left\">Angular 19</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Webpack-based browser builder</td>\n          <td class=\"py-3 px-4\">Vite-powered application builder with faster builds</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Limited SSR development support</td>\n          <td class=\"py-3 px-4\">Dedicated ssr-dev-server builder for better dev experience</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Slower incremental builds</td>\n          <td class=\"py-3 px-4\">Enhanced caching and partial compilation</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n          <td class=\"py-3 px-4\">Basic builder API</td>\n          <td class=\"py-3 px-4\">Enhanced typings and better diagnostic tools</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</ng-template>\n\n<ng-template #topicsRef>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Architect</strong>: The underlying system that runs builders in Angular</li>\n      <li><strong>Angular CLI</strong>: Command-line interface that invokes builders</li>\n      <li><strong>Workspace Configuration</strong>: Where builder configurations are stored</li>\n      <li><strong>Schematics</strong>: Code generators that can be used alongside builders</li>\n      <li><strong>Build Process</strong>: The compilation and bundling pipeline in Angular</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Common Builder Use Cases</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Custom webpack configuration</strong>: Extending the default webpack configuration</li>\n      <li><strong>Multiple entry points</strong>: Building multiple applications from one codebase</li>\n      <li><strong>Static site generation</strong>: Creating pre-rendered static websites</li>\n      <li><strong>Specialized deployments</strong>: Preparing applications for unique hosting environments</li>\n      <li><strong>Build pipeline integration</strong>: Connecting Angular builds with CI/CD systems</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Popular Custom Builders</p>\n    <ul class=\"list-disc pl-4\">\n      <li><strong>&#64;angular-builders/custom-webpack</strong>: For extending webpack configuration</li>\n      <li><strong>&#64;nrwl/angular</strong>: Enhanced builders for Nx workspaces</li>\n      <li><strong>&#64;angular-eslint/builder</strong>: ESLint integration for Angular projects</li>\n      <li><strong>&#64;angular-devkit/build-optimizer</strong>: Advanced build optimization</li>\n      <li><strong>ngx-build-plus</strong>: Extended build capabilities for Angular applications</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mt-6 mb-2\">Additional Resources</p>\n    <ul class=\"list-disc pl-4\">\n      <li><a href=\"https://angular.dev/tools/cli/builders\" class=\"text-sky-400 hover:underline\">Angular.dev: Builders</a></li>\n      <li><a href=\"https://angular.dev/tools/cli/workspace-config\" class=\"text-sky-400 hover:underline\">Angular.dev: Workspace Configuration</a></li>\n      <li><a href=\"https://github.com/angular/angular-cli\" class=\"text-sky-400 hover:underline\">Angular CLI Repository</a></li>\n      <li><a href=\"https://github.com/just-jeb/angular-builders\" class=\"text-sky-400 hover:underline\">Angular Builders Collection</a></li>\n    </ul>\n  </div>\n</ng-template>\n\n\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-builder',\n  templateUrl: './builder.component.html',\n  styleUrls: ['./builder.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BuilderComponent {\n  selectedTab = 1;\n\n  @ViewChild('code1') code1?: ElementRef;\n  @ViewChild('code2') code2?: ElementRef;\n  @ViewChild('code3') code3?: ElementRef;\n  @ViewChild('code4') code4?: ElementRef;\n  @ViewChild('code5') code5?: ElementRef;\n\n  // Code examples for builders\n  customBuilderCode = `// custom-webpack.builder.ts\nimport { BuilderContext, BuilderOutput, createBuilder } from '@angular-devkit/architect';\nimport { JsonObject } from '@angular-devkit/core';\nimport * as webpack from 'webpack';\nimport * as fs from 'fs';\n\ninterface Options extends JsonObject {\n  webpackConfig: string;\n  outputPath: string;\n}\n\nexport default createBuilder<Options>((options, context) => {\n  return new Promise<BuilderOutput>(async (resolve, reject) => {\n    // Load custom webpack config\n    const webpackConfig = require(options.webpackConfig);\n\n    // Create compiler instance\n    const compiler = webpack(webpackConfig);\n\n    // Run webpack\n    compiler.run((err, stats) => {\n      if (err) {\n        context.logger.error('Error during compilation!', err);\n        reject({ success: false });\n        return;\n      }\n\n      context.logger.info(stats?.toString({ colors: true }));\n      resolve({ success: true });\n    });\n  });\n});`;\n\n  builderJsonCode = `// builders.json\n{\n  \"$schema\": \"../../node_modules/@angular-devkit/architect/src/builders-schema.json\",\n  \"builders\": {\n    \"custom-webpack\": {\n      \"implementation\": \"./custom-webpack.builder\",\n      \"schema\": \"./schema.json\",\n      \"description\": \"Custom webpack builder that uses a provided webpack config\"\n    }\n  }\n}`;\n\n  schemaJsonCode = `// schema.json\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema\",\n  \"title\": \"Custom Webpack Builder\",\n  \"description\": \"Custom webpack builder options\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"webpackConfig\": {\n      \"type\": \"string\",\n      \"description\": \"Path to webpack configuration\"\n    },\n    \"outputPath\": {\n      \"type\": \"string\",\n      \"description\": \"Path to output directory\"\n    }\n  },\n  \"required\": [\"webpackConfig\", \"outputPath\"]\n}`;\n\n  angularJsonCode = `// angular.json (excerpt)\n{\n  \"architect\": {\n    \"build\": {\n      \"builder\": \"@angular-devkit/build-angular:browser\",\n      \"options\": {\n        \"outputPath\": \"dist/my-app\",\n        \"index\": \"src/index.html\",\n        \"main\": \"src/main.ts\"\n        // other options...\n      }\n    },\n    \"custom-build\": {\n      \"builder\": \"./builders:custom-webpack\",\n      \"options\": {\n        \"webpackConfig\": \"./webpack.custom.js\",\n        \"outputPath\": \"dist/custom-build\"\n      }\n    }\n  }\n}`;\n\n  runBuilderCode = `// Usage with Angular CLI\nng run my-project:custom-build\n\n// Programmatic usage in Node.js\nconst { Architect } = require('@angular-devkit/architect');\nconst { WorkspaceNodeModulesArchitectHost } = require('@angular-devkit/architect/node');\nconst { TestingWorkspaceHost } = require('@angular-devkit/core/node/testing');\nconst { join } = require('path');\n\nasync function runBuilder() {\n  const workspaceRoot = join(__dirname, '../..');\n  const workspaceHost = new TestingWorkspaceHost(workspaceRoot);\n\n  const architectHost = new WorkspaceNodeModulesArchitectHost(workspaceRoot, workspaceRoot);\n  const architect = new Architect(architectHost, workspaceHost);\n\n  const run = await architect.scheduleBuilder(\n    './builders:custom-webpack',\n    {\n      webpackConfig: './webpack.custom.js',\n      outputPath: 'dist/custom'\n    },\n    { logger: console }\n  );\n\n  const output = await run.output.toPromise();\n  console.log('Builder output:', output);\n  await run.stop();\n}`;\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Case Types in Angular\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Case Types</span>\n      in Angular 19 follow specific naming conventions that improve code readability, maintainability, and adherence to TypeScript and JavaScript best practices. These conventions apply to different elements like components, interfaces, services, and variables, each with its own recommended case style.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ol class=\"list-decimal px-4 text-sm\">\n              <li>\n                <strong class=\"text-sky-400\">Maintain Consistency</strong>\n                <ul class=\"list-disc pl-4\">\n                  <li>Follow established conventions consistently throughout the project</li>\n                  <li>Establish team-wide conventions and document them</li>\n                  <li>Align with library conventions when working with specific libraries</li>\n                </ul>\n              </li>\n              <li>\n                <strong class=\"text-sky-400\">Use Proper Casing for File Names</strong>\n                <ul class=\"list-disc pl-4\">\n                  <li>Angular files should use kebab-case: user-profile.component.ts</li>\n                  <li>Always include appropriate suffixes (.component, .service, etc.)</li>\n                  <li>Use kebab-case for folder names as well</li>\n                </ul>\n              </li>\n              <li>\n                <strong class=\"text-sky-400\">Component and Class Naming</strong>\n                <ul class=\"list-disc pl-4\">\n                  <li>Use descriptive PascalCase names for component classes</li>\n                  <li>Always include appropriate suffixes (Component, Service, etc.)</li>\n                  <li>Use a consistent prefix for selectors (e.g., app-)</li>\n                </ul>\n              </li>\n              <li>\n                <strong class=\"text-sky-400\">Constants and Configuration</strong>\n                <ul class=\"list-disc pl-4\">\n                  <li>Prefer camelCase for constants in Angular 19 applications</li>\n                  <li>Reserve UPPER_SNAKE_CASE for truly immutable values</li>\n                  <li>Use camelCase for properties in configuration objects</li>\n                </ul>\n              </li>\n              <li>\n                <strong class=\"text-sky-400\">Automated Enforcement</strong>\n                <ul class=\"list-disc pl-4\">\n                  <li>Configure ESLint to enforce naming conventions</li>\n                  <li>Share editor config files across the team</li>\n                  <li>Use pre-commit hooks to validate naming conventions</li>\n                </ul>\n              </li>\n            </ol>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <div class=\"text-sm\">\n              <p class=\"font-semibold text-sky-400 mb-2\">Benefits of Standardized Case Types</p>\n              <ul class=\"list-disc pl-4 mb-6\">\n                <li><strong>Code Readability</strong>: Cases provide visual cues about element types</li>\n                <li><strong>Searchability</strong>: Consistent casing improves search in large codebases</li>\n                <li><strong>Framework Alignment</strong>: Follows TypeScript and JavaScript best practices</li>\n                <li><strong>Automated Tooling</strong>: Enables effective linting and code generation</li>\n                <li><strong>Reduced Cognitive Load</strong>: Developers follow established patterns</li>\n              </ul>\n\n              <p class=\"font-semibold text-sky-400 mb-2\">Challenges with Case Types</p>\n              <ul class=\"list-disc pl-4 mb-6\">\n                <li><strong>Legacy Integration</strong>: May conflict with older codebases</li>\n                <li><strong>Library Conflicts</strong>: Third-party libraries may use different conventions</li>\n                <li><strong>Cross-Language Projects</strong>: Different languages have different conventions</li>\n                <li><strong>Learning Curve</strong>: New team members may need to adapt</li>\n                <li><strong>Constants Debate</strong>: Ongoing camelCase vs. UPPER_SNAKE_CASE discussion</li>\n              </ul>\n\n              <p class=\"font-semibold text-sky-400 mb-2\">Case Type Evolution in Angular</p>\n              <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n                <thead>\n                  <tr class=\"bg-gray-800 text-gray-100\">\n                    <th class=\"py-3 px-4 text-left\">Early Angular</th>\n                    <th class=\"py-3 px-4 text-left\">Angular 19</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr class=\"border-b border-gray-700 bg-gray-900\">\n                    <td class=\"py-3 px-4\">UPPER_SNAKE_CASE common for constants</td>\n                    <td class=\"py-3 px-4\">camelCase preferred for most constants</td>\n                  </tr>\n                  <tr class=\"border-b border-gray-700 bg-gray-950\">\n                    <td class=\"py-3 px-4\">Less strict naming requirements</td>\n                    <td class=\"py-3 px-4\">More formalized conventions in style guide</td>\n                  </tr>\n                  <tr class=\"border-b border-gray-700 bg-gray-900\">\n                    <td class=\"py-3 px-4\">Module-based structure influenced naming</td>\n                    <td class=\"py-3 px-4\">Standalone components maintain same patterns</td>\n                  </tr>\n                  <tr class=\"border-b border-gray-700 bg-gray-950\">\n                    <td class=\"py-3 px-4\">Limited signal/reactive naming guidance</td>\n                    <td class=\"py-3 px-4\">Clear naming patterns for signals and reactive primitives</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <div class=\"text-sm\">\n              <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n              <ul class=\"list-disc pl-4 mb-6\">\n                <li><strong>Style Guide</strong>: Official guide with naming recommendations</li>\n                <li><strong>Angular CLI</strong>: Generates files with proper conventions</li>\n                <li><strong>ESLint Configuration</strong>: Enforces case conventions</li>\n                <li><strong>TypeScript Conventions</strong>: Angular follows TypeScript patterns</li>\n                <li><strong>Component Architecture</strong>: Cases distinguish architectural elements</li>\n              </ul>\n\n              <p class=\"font-semibold text-sky-400 mb-2\">Case Type FAQ</p>\n              <ul class=\"list-disc pl-4 mb-6\">\n                <li>\n                  <strong>Q: camelCase or UPPER_SNAKE_CASE for constants?</strong><br>\n                  A: Angular 19 prefers camelCase for most constants, reserving UPPER_SNAKE_CASE for special configuration\n                </li>\n                <li>\n                  <strong>Q: How to name signals in Angular 19?</strong><br>\n                  A: Use camelCase for signals just like regular properties\n                </li>\n                <li>\n                  <strong>Q: Where to use kebab-case?</strong><br>\n                  A: Only for selectors in decorators and file names, not for TypeScript variables\n                </li>\n                <li>\n                  <strong>Q: Do standalone components follow the same conventions?</strong><br>\n                  A: Yes, PascalCase for class names and kebab-case for selectors\n                </li>\n                <li>\n                  <strong>Q: How to name services?</strong><br>\n                  A: PascalCase with a descriptive name and 'Service' suffix\n                </li>\n              </ul>\n\n              <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n              <ul class=\"list-disc pl-4\">\n                <li><a href=\"https://angular.dev/style-guide\" class=\"text-sky-400 hover:underline\">Angular Style Guide</a></li>\n                <li><a href=\"https://typescript-eslint.io/rules/\" class=\"text-sky-400 hover:underline\">TypeScript ESLint Rules</a></li>\n                <li><a href=\"https://github.com/angular-eslint/angular-eslint\" class=\"text-sky-400 hover:underline\">Angular ESLint</a></li>\n                <li><a href=\"https://angular.dev/guide/signals\" class=\"text-sky-400 hover:underline\">Angular Signals Guide</a></li>\n                <li><a href=\"https://angular.dev/guide/standalone-components\" class=\"text-sky-400 hover:underline\">Standalone Components Guide</a></li>\n              </ul>\n            </div>\n          </div>\n          <div *ngSwitchDefault>\n            <p>Case Types in Angular 19</p>\n            <div class=\"overflow-x-auto\">\n              <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n                <thead>\n                  <tr class=\"bg-gray-800 text-gray-100\">\n                    <th class=\"py-3 px-4 text-left\">Case Type</th>\n                    <th class=\"py-3 px-4 text-left\">Usage</th>\n                    <th class=\"py-3 px-4 text-left\">Example</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                    <td class=\"py-3 px-4 text-rose-400 font-medium\">camelCase</td>\n                    <td class=\"py-3 px-4\">\n                      <ul class=\"list-disc pl-4\">\n                        <li>Properties</li>\n                        <li>Variables</li>\n                        <li>Methods</li>\n                        <li>Function names</li>\n                        <li>Signal declarations</li>\n                        <li>Input/Output properties</li>\n                      </ul>\n                    </td>\n                    <td class=\"py-3 px-4 font-mono\">\n                      userName<br>\n                      firstName<br>\n                      getUserData()<br>\n                      httpClient<br>\n                      counterValue = signal(0)\n                    </td>\n                  </tr>\n                  <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                    <td class=\"py-3 px-4 text-rose-400 font-medium\">PascalCase</td>\n                    <td class=\"py-3 px-4\">\n                      <ul class=\"list-disc pl-4\">\n                        <li>Classes</li>\n                        <li>Interfaces</li>\n                        <li>Type aliases</li>\n                        <li>Enums</li>\n                        <li>Components</li>\n                        <li>Directives</li>\n                        <li>Pipes</li>\n                      </ul>\n                    </td>\n                    <td class=\"py-3 px-4 font-mono\">\n                      UserProfile<br>\n                      AuthService<br>\n                      AppComponent<br>\n                      HoverDirective<br>\n                      DateFormatPipe\n                    </td>\n                  </tr>\n                  <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                    <td class=\"py-3 px-4 text-rose-400 font-medium\">kebab-case</td>\n                    <td class=\"py-3 px-4\">\n                      <ul class=\"list-disc pl-4\">\n                        <li>Component selectors</li>\n                        <li>File names</li>\n                        <li>Directive selectors</li>\n                        <li>Custom elements</li>\n                        <li>Angular CLI commands</li>\n                      </ul>\n                    </td>\n                    <td class=\"py-3 px-4 font-mono\">\n                      app-user-profile<br>\n                      user-profile.component.ts<br>\n                      app-hover-effect<br>\n                      ng-container\n                    </td>\n                  </tr>\n                  <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                    <td class=\"py-3 px-4 text-rose-400 font-medium\">UPPER_SNAKE_CASE</td>\n                    <td class=\"py-3 px-4\">\n                      <ul class=\"list-disc pl-4\">\n                        <li>Traditional constants</li>\n                        <li>Enum values (sometimes)</li>\n                        <li>Hard-coded config values</li>\n                      </ul>\n                    </td>\n                    <td class=\"py-3 px-4 font-mono\">\n                      MAX_RETRY_ATTEMPTS<br>\n                      DEFAULT_LANGUAGE<br>\n                      API_ENDPOINTS\n                    </td>\n                  </tr>\n                  <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                    <td class=\"py-3 px-4 text-rose-400 font-medium\">snake_case</td>\n                    <td class=\"py-3 px-4\">\n                      <ul class=\"list-disc pl-4\">\n                        <li>Not commonly used in Angular</li>\n                        <li>Sometimes in configuration files</li>\n                        <li>Legacy code bases</li>\n                      </ul>\n                    </td>\n                    <td class=\"py-3 px-4 font-mono\">\n                      user_profile<br>\n                      convert_currency\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <br>\n            <br>\n\n            <p>Angular 19 Case Type Guidelines</p>\n            <ol class=\"list-decimal pl-4 text-sm\">\n              <li>\n                <strong>Signals and Reactivity</strong>:\n                <ul class=\"list-disc pl-4\">\n                  <li>Signal declarations use camelCase like regular properties</li>\n                  <li>Signal accessors maintain camelCase in templates</li>\n                  <li>Computed signals follow the same pattern</li>\n                </ul>\n              </li>\n              <li>\n                <strong>Standalone Components</strong>:\n                <ul class=\"list-disc pl-4\">\n                  <li>Follow the same casing rules as NgModule-based components</li>\n                  <li>Class names: PascalCase</li>\n                  <li>Selector: kebab-case</li>\n                </ul>\n              </li>\n              <li>\n                <strong>Type Safety Enhancements</strong>:\n                <ul class=\"list-disc pl-4\">\n                  <li>Interface names use PascalCase</li>\n                  <li>Type aliases use PascalCase</li>\n                  <li>Generic type parameters use PascalCase, typically single letters</li>\n                </ul>\n              </li>\n              <li>\n                <strong>Angular Control Flow</strong>:\n                <ul class=\"list-disc pl-4\">\n                  <li>New control flow keywords (&#64;if, &#64;for, &#64;switch) are lowercase in templates</li>\n                  <li>Template variables are camelCase</li>\n                </ul>\n              </li>\n              <li>\n                <strong>Configuration and Constants</strong>:\n                <ul class=\"list-disc pl-4\">\n                  <li>Angular 19 recommends camelCase for constants</li>\n                  <li>Configuration objects use camelCase</li>\n                  <li>UPPER_SNAKE_CASE is acceptable but camelCase is preferred</li>\n                </ul>\n              </li>\n            </ol>\n\n            <br>\n            <br>\n\n            <p>Code Examples</p>\n            <ul class=\"list-disc pl-4 text-sm\">\n              <li>\n                <strong>Component Example</strong>:\n                <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #code1 hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"componentCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </li>\n              <li>\n                <strong>Interface and Type Example</strong>:\n                <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #code2 hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"interfaceCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </li>\n              <li>\n                <strong>Constants Example</strong>:\n                <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #code3 hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"constantsCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-case-types',\n  templateUrl: './case-types.component.html',\n  styleUrls: ['./case-types.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CaseTypesComponent {\n  selectedTab = 1;\n\n  @ViewChild('code1') code1?: ElementRef;\n  @ViewChild('code2') code2?: ElementRef;\n  @ViewChild('code3') code3?: ElementRef;\n\n  componentCode = `// Component class using PascalCase for class name and camelCase for properties\nimport { Component, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard', // kebab-case for selectors\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <h1>{{pageTitle}}</h1>\n    <p>Count: {{counterValue()}}</p>\n    <button (click)=\"incrementCounter()\">Increment</button>\n  \\`\n})\nexport class DashboardComponent {\n  pageTitle = 'My Dashboard'; // camelCase for properties\n  counterValue = signal(0); // camelCase for signals\n\n  // camelCase for methods\n  incrementCounter() {\n    this.counterValue.update(value => value + 1);\n  }\n}`;\n\n  interfaceCode = `// PascalCase for interface names, camelCase for properties\nexport interface UserProfile {\n  id: number;\n  firstName: string;\n  lastName: string;\n  emailAddress: string;\n  isActive: boolean;\n  lastLoginDate?: Date;\n}\n\n// Type aliases also use PascalCase\nexport type UserRole = 'admin' | 'editor' | 'viewer';\n\n// Enums use PascalCase\nexport enum AuthStatus {\n  Authenticated,\n  Anonymous,\n  Pending\n}`;\n\n  constantsCode = `// Constants using camelCase (preferred in Angular 19)\nexport const apiBaseUrl = 'https://api.example.com';\nexport const maxRetryAttempts = 3;\n\n// Alternative: UPPER_SNAKE_CASE (traditional but less common in modern Angular)\nexport const API_BASE_URL = 'https://api.example.com';\nexport const MAX_RETRY_ATTEMPTS = 3;\n\n// For configuration objects, use camelCase\nexport const environmentConfig = {\n  production: true,\n  apiUrl: 'https://api.example.com',\n  featureFlags: {\n    enableNewDashboard: true,\n    enableAnalytics: false\n  }\n};`;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-change-detection',\n  templateUrl: './change-detection.component.html',\n  styleUrls: ['./change-detection.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChangeDetectionComponent extends UnsubscribeService {\n\n  selectedTab = 1;\n\n  @ViewChild('signalBasicCodeEl') signalBasicCodeEl?: ElementRef;\n  @ViewChild('signalComputedCodeEl') signalComputedCodeEl?: ElementRef;\n  @ViewChild('signalEffectCodeEl') signalEffectCodeEl?: ElementRef;\n  @ViewChild('zonelessCodeEl') zonelessCodeEl?: ElementRef;\n  @ViewChild('hybridCodeEl') hybridCodeEl?: ElementRef;\n  @ViewChild('onPushCodeEl') onPushCodeEl?: ElementRef;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n  code_7 = '';\n  code_8 = '';\n  code_9 = '';\n  code_10 = '';\n  code_11 = '';\n  code_12 = '';\n  code_13 = '';\n  code_14 = '';\n  code_15 = '';\n\n  codeb_1 = '';\n  codeb_2 = '';\n  codeb_3 = '';\n  codeb_4 = '';\n  codeb_5 = '';\n  codeb_6 = '';\n  codeb_7 = '';\n  codeb_8 = '';\n  codeb_9 = '';\n\n  // New Angular 19 signal-based examples\n  signalBasicCode = `import { Component, signal, computed } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  standalone: true,\n  template: \\`\n    <div>\n      <h2>Count: {{ count() }}</h2>\n      <button (click)=\"increment()\">Increment</button>\n      <button (click)=\"decrement()\">Decrement</button>\n    </div>\n  \\`\n})\nexport class CounterComponent {\n  // Create a signal with initial value\n  count = signal(0);\n\n  increment() {\n    // Update the signal (triggers only the necessary UI updates)\n    this.count.update(value => value + 1);\n  }\n\n  decrement() {\n    this.count.update(value => value - 1);\n  }\n}`;\n\n  signalComputedCode = `import { Component, signal, computed } from '@angular/core';\n\n@Component({\n  selector: 'app-product-card',\n  standalone: true,\n  template: \\`\n    <div class=\"product-card\">\n      <h3>{{ name() }}</h3>\n      <p>Price: $\\${price()}</p>\n      <p>Quantity:\n        <input\n          type=\"number\"\n          [ngModel]=\"quantity()\"\n          (ngModelChange)=\"updateQuantity($event)\"\n          min=\"1\"\n        />\n      </p>\n      <p class=\"total\">Total: $\\${totalPrice()}</p>\n    </div>\n  \\`\n})\nexport class ProductCardComponent {\n  name = signal('Angular 19 Book');\n  price = signal(49.99);\n  quantity = signal(1);\n\n  // Computed value automatically updates when dependencies change\n  totalPrice = computed(() => {\n    return this.price() * this.quantity();\n  });\n\n  updateQuantity(newValue: number) {\n    this.quantity.set(newValue);\n    // totalPrice updates automatically!\n  }\n}`;\n\n  signalEffectCode = `import { Component, signal, effect, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-user-status',\n  standalone: true,\n  template: \\`\n    <div>\n      <h3>User Status</h3>\n      <p>Status: {{ isOnline() ? 'Online' : 'Offline' }}</p>\n      <button (click)=\"toggleStatus()\">Toggle Status</button>\n      <p *ngIf=\"notifications().length > 0\">\n        New notifications: {{ notifications().length }}\n      </p>\n    </div>\n  \\`\n})\nexport class UserStatusComponent implements OnInit, OnDestroy {\n  isOnline = signal(false);\n  notifications = signal<string[]>([]);\n\n  // Store cleanup function\n  private disposeEffect?: () => void;\n\n  ngOnInit() {\n    // Effect runs initially and whenever dependencies change\n    this.disposeEffect = effect(() => {\n      if (this.isOnline()) {\n        console.log('User is now online');\n        this.checkForNotifications();\n      } else {\n        console.log('User is now offline');\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // Important: Clean up effects when component is destroyed\n    if (this.disposeEffect) {\n      this.disposeEffect();\n    }\n  }\n\n  toggleStatus() {\n    this.isOnline.update(status => !status);\n  }\n\n  private checkForNotifications() {\n    // Simulating API call for new notifications\n    setTimeout(() => {\n      if (this.isOnline()) {\n        this.notifications.update(notifications =>\n          [...notifications, \\`Notification at \\${new Date().toLocaleTimeString()}\\`]\n        );\n      }\n    }, 1000);\n  }\n}`;\n\n  zonelessAppCode = `import { bootstrapApplication } from '@angular/platform-browser';\nimport { Component, signal } from '@angular/core';\nimport { provideZonelessChangeDetection } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  template: \\`\n    <h1>Zoneless Application</h1>\n    <p>Counter: {{ counter() }}</p>\n    <button (click)=\"increment()\">Increment</button>\n  \\`\n})\nexport class AppComponent {\n  counter = signal(0);\n\n  increment() {\n    this.counter.update(c => c + 1);\n    // No zone.js, but UI updates automatically because of signals!\n  }\n}\n\n// Bootstrap the app without Zone.js\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideZonelessChangeDetection()\n  ]\n});`;\n\n  hybridDetectionCode = `import { Component, ChangeDetectionStrategy, ChangeDetectorRef, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-hybrid-detection',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: \\`\n    <div>\n      <h2>Hybrid Change Detection</h2>\n      <p>Signal Counter: {{ signalCounter() }}</p>\n      <p>Regular Counter: {{ regularCounter }}</p>\n      <button (click)=\"incrementSignal()\">Increment Signal</button>\n      <button (click)=\"incrementRegular()\">Increment Regular</button>\n    </div>\n  \\`\n})\nexport class HybridDetectionComponent {\n  // Signal-based state (auto-updates UI)\n  signalCounter = signal(0);\n\n  // Traditional property (needs manual change detection)\n  regularCounter = 0;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  incrementSignal() {\n    this.signalCounter.update(c => c + 1);\n    // No need to call detectChanges() - UI updates automatically\n  }\n\n  incrementRegular() {\n    this.regularCounter++;\n    // With OnPush strategy, we need to tell Angular to detect changes\n    this.cdr.detectChanges();\n  }\n}`;\n\n  onPushCode = `import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-on-push-example',\n  changeDetection: ChangeDetectionStrategy.OnPush, // Using OnPush strategy\n  template: \\`\n    <div class=\"card\">\n      <h3>{{ title }}</h3>\n      <p>Count: {{ count }}</p>\n      <p>User: {{ user.name }}, Age: {{ user.age }}</p>\n\n      <div class=\"actions\">\n        <button (click)=\"incrementCount()\">Increment Count</button>\n        <button (click)=\"updateUserAge()\">Update User Age</button>\n        <button (click)=\"replaceUser()\">Replace User</button>\n        <button (click)=\"forceDetection()\">Force Detection</button>\n      </div>\n    </div>\n  \\`\n})\nexport class OnPushExampleComponent {\n  @Input() title = 'OnPush Change Detection';\n  count = 0;\n  user = { name: 'John', age: 25 };\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  incrementCount() {\n    this.count++;\n    // UI won't update automatically with OnPush\n    // since internal property mutation isn't detected\n  }\n\n  updateUserAge() {\n    this.user.age++;\n    // UI won't update automatically with OnPush\n    // since this mutates an object property (not changing the reference)\n  }\n\n  replaceUser() {\n    this.user = { ...this.user, age: this.user.age + 1 };\n    // UI WILL update automatically with OnPush\n    // because the object reference changed\n  }\n\n  forceDetection() {\n    // Manually tell Angular to check for changes\n    this.cdr.detectChanges();\n  }\n}\n\n// Parent component example\n@Component({\n  selector: 'app-parent',\n  template: \\`\n    <h2>OnPush Change Detection Demo</h2>\n    <app-on-push-example\n      [title]=\"componentTitle\"\n    ></app-on-push-example>\n    <button (click)=\"changeTitle()\">Change Input</button>\n  \\`\n})\nexport class ParentComponent {\n  componentTitle = 'Initial Title';\n\n  changeTitle() {\n    this.componentTitle = 'Updated Title ' + new Date().toLocaleTimeString();\n    // This will trigger change detection in the child component\n    // because the input property reference changed\n  }\n}`;\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/change-detection/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_7 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_8 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_9.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_9 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_10.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_10 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_11.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_11 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_12.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_12 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_13.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_13 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_14.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_14 = data);\n\n    this.http.get('assets/codes/change-detection/notes/code_15.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_15 = data);\n\n    this.http.get('assets/codes/change-detection/best/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_1 = data);\n\n    this.http.get('assets/codes/change-detection/best/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_2 = data);\n\n    this.http.get('assets/codes/change-detection/best/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_3 = data);\n\n    this.http.get('assets/codes/change-detection/best/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_4 = data);\n\n    this.http.get('assets/codes/change-detection/best/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_5 = data);\n\n    this.http.get('assets/codes/change-detection/best/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_6 = data);\n\n    this.http.get('assets/codes/change-detection/best/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_7 = data);\n\n    this.http.get('assets/codes/change-detection/best/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_8 = data);\n\n    this.http.get('assets/codes/change-detection/best/code_9.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.codeb_9 = data);\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Change Detection\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Change Detection</span>\n      in Angular 19 is the process of synchronizing the application state with the UI. It determines when and how the DOM is updated to reflect the current state of your application's data model. Angular 19 introduces significant improvements to change detection through signals and zoneless applications.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <div *ngIf=\"selectedTab === 1\">\n          <!-- Notes Tab -->\n          <p>Evolution of Change Detection in Angular 19</p>\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong>Traditional Change Detection Approaches</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>\n                  <strong>Default Strategy</strong>: Checks the entire component tree whenever an event occurs (mouse click, HTTP request, timer).\n                </li>\n                <li>\n                  <strong>OnPush Strategy</strong>: Only checks a component when its input properties change by reference or events occur within the component.\n                  <button (click)=\"onPushCodeEl.hidden = !onPushCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                  <span #onPushCodeEl hidden copyToClipboard>\n                    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                      <span>typescript</span>\n                      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                    </div>\n                    <pre>\n                      <code [highlight]=\"onPushCode\" [languages]=\"['typescript']\"></code>\n                    </pre>\n                  </span>\n                </li>\n                <li>\n                  <strong>Manual Control</strong>: Explicitly controlling change detection using ChangeDetectorRef methods like detectChanges(), markForCheck(), detach(), and reattach().\n                </li>\n              </ul>\n            </li>\n            <li>\n              <strong>Signal-Based Change Detection (Angular 19)</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>\n                  <strong>Fine-Grained Reactivity</strong>: Only updates exactly what needs to be updated, at the level of individual UI elements.\n                </li>\n                <li>\n                  <strong>Automatic and Efficient</strong>: Angular automatically knows what parts of the DOM to update when signals change.\n                </li>\n                <li>\n                  <strong>No ngZone Required</strong>: When using signal-based components and state, change detection works without relying on Zone.js.\n                </li>\n                <li>\n                  <strong>Predictable Updates</strong>: Clear connection between state changes and UI updates, making debugging easier.\n                </li>\n              </ul>\n            </li>\n            <li>\n              <strong>Zoneless Applications</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>\n                  <strong>Fully Stable in Angular 19</strong>: Zoneless applications are now fully supported for production use.\n                </li>\n                <li>\n                  <strong>Smaller Bundle Size</strong>: Eliminates Zone.js (10-20KB reduction in bundle size).\n                </li>\n                <li>\n                  <strong>Better Compatibility</strong>: Works with third-party libraries that aren't Zone-compatible.\n                </li>\n                <li>\n                  <strong>Improved Performance</strong>: Reduces processing overhead from Zone.js patching.\n                </li>\n              </ul>\n            </li>\n          </ol>\n\n          <br>\n          <br>\n\n          <p>Key Signal-Based Features</p>\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong>Basic Signals</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>\n                  <code>signal(initialValue)</code>: Creates a signal with the given initial value.\n                </li>\n                <li>\n                  <code>mySignal()</code>: Gets the current value of the signal.\n                </li>\n                <li>\n                  <code>mySignal.set(newValue)</code>: Sets a new value for the signal.\n                </li>\n                <li>\n                  <code>mySignal.update(fn)</code>: Updates the signal value based on its current value.\n                </li>\n                <li>\n                  <code>mySignal.asReadonly()</code>: Creates a read-only version of the signal.\n                </li>\n                <button (click)=\"signalBasicCodeEl.hidden = !signalBasicCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #signalBasicCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"signalBasicCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Computed Signals</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>\n                  <code>computed(() => expression)</code>: Creates a read-only signal that derives its value from other signals.\n                </li>\n                <li>\n                  Automatically updates when any dependency signal changes.\n                </li>\n                <li>\n                  Memoizes the value to avoid unnecessary recalculations.\n                </li>\n                <button (click)=\"signalComputedCodeEl.hidden = !signalComputedCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #signalComputedCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"signalComputedCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Effects</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>\n                  <code>effect(() => {{ '{' }} code {{ '}' }})</code>: Executes code when signal dependencies change.\n                </li>\n                <li>\n                  Useful for side effects like logging, analytics, or syncing with non-Angular systems.\n                </li>\n                <li>\n                  Returns a cleanup function that should be called to prevent memory leaks.\n                </li>\n                <button (click)=\"signalEffectCodeEl.hidden = !signalEffectCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #signalEffectCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"signalEffectCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n          </ol>\n\n          <br>\n          <br>\n\n          <p>Angular 19 Change Detection Models</p>\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong>Zoneless Applications</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>\n                  <strong>Configuration</strong>: Use <code>provideZonelessChangeDetection()</code> in your application bootstrap.\n                </li>\n                <li>\n                  <strong>Requirements</strong>: Application must use signals for all state that affects the UI.\n                </li>\n                <li>\n                  <strong>Benefits</strong>: Reduced bundle size, better performance, no Zone.js patching issues.\n                </li>\n                <button (click)=\"zonelessCodeEl.hidden = !zonelessCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #zonelessCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"zonelessAppCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Hybrid Approach</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>\n                  <strong>Mixed Model</strong>: Use signals for some parts of the application while retaining traditional change detection for others.\n                </li>\n                <li>\n                  <strong>Migration Strategy</strong>: Ideal for gradually updating existing applications to the signal-based approach.\n                </li>\n                <li>\n                  <strong>Incremental Benefits</strong>: Get performance improvements for parts of the application without rewriting everything.\n                </li>\n                <button (click)=\"hybridCodeEl.hidden = !hybridCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #hybridCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"hybridDetectionCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Signal-Based Components</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>\n                  <strong>New in Angular 19</strong>: Components can now be fully signal-based with the <code>&#64;angular/core/signals</code> package.\n                </li>\n                <li>\n                  <strong>Auto-Detection</strong>: UI updates automatically when signals change, without manual intervention.\n                </li>\n                <li>\n                  <strong>Performance</strong>: Optimized rendering with targeted DOM updates for better overall application performance.\n                </li>\n              </ul>\n            </li>\n          </ol>\n\n          <br>\n          <br>\n\n          <p>Performance Comparison</p>\n          <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n            <thead>\n              <tr class=\"bg-gray-800 text-gray-100\">\n                <th class=\"py-3 px-4 text-left\">Feature</th>\n                <th class=\"py-3 px-4 text-left\">Traditional Change Detection</th>\n                <th class=\"py-3 px-4 text-left\">Signal-Based Change Detection</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Update Granularity</td>\n                <td class=\"py-3 px-4\">Component level</td>\n                <td class=\"py-3 px-4\">Property/UI element level</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Bundle Size</td>\n                <td class=\"py-3 px-4\">Includes Zone.js (~10-20KB)</td>\n                <td class=\"py-3 px-4\">Optional Zone.js</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Performance Impact</td>\n                <td class=\"py-3 px-4\">Higher overhead for large applications</td>\n                <td class=\"py-3 px-4\">Minimal overhead, scales efficiently</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Debugging</td>\n                <td class=\"py-3 px-4\">Complex (Zone patching, async)</td>\n                <td class=\"py-3 px-4\">Predictable, synchronous updates</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div *ngIf=\"selectedTab === 2\">\n          <!-- Best Practices Tab -->\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong class=\"text-sky-400\">Design for Signal-Based Reactivity</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use signals for any state that affects the UI</li>\n                <li>Make all signal updates synchronous and predictable</li>\n                <li>Prefer computed signals over manual calculations in templates</li>\n                <li>Keep signal transformations pure (no side effects in computed signals)</li>\n                <li>Split complex state into multiple smaller signals for fine-grained updates</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Optimize Component Change Detection</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Apply OnPush change detection to all components when using the traditional model</li>\n                <li>Consider migrating critical performance paths to signal-based components first</li>\n                <li>Avoid deep object nesting that makes change detection more complex</li>\n                <li>Use immutable data patterns or signals to make changes detectable</li>\n                <li>Remember to clean up effects in ngOnDestroy to prevent memory leaks</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Implement Zoneless Applications Effectively</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Start new applications with zoneless change detection from the beginning</li>\n                <li>For existing applications, consider a hybrid approach during migration</li>\n                <li>Ensure all asynchronous operations update signals for UI changes</li>\n                <li>Use appropriate wrappers for third-party libraries to work with signals</li>\n                <li>Test thoroughly since async events won't automatically trigger change detection</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Structure Your Application for Performance</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Break large components into smaller, focused components</li>\n                <li>Use lazy loading to reduce initial bundle size</li>\n                <li>Apply signal-based state management instead of heavy frameworks</li>\n                <li>Implement proper component and signal architecture that minimizes unnecessary updates</li>\n                <li>Use the Angular DevTools to profile and identify change detection bottlenecks</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Keep Change Detection Predictable</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Avoid manipulating the DOM directly, which can cause inconsistencies</li>\n                <li>Don't call detectChanges() in template expressions or use it in a stable way</li>\n                <li>Keep signal updates at the appropriate component level</li>\n                <li>Batch multiple signal updates when possible to reduce rendering cycles</li>\n                <li>Make signal dependencies explicit for better maintainability</li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n\n        <div *ngIf=\"selectedTab === 3\">\n          <!-- Pros and Cons Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Signal-Based Change Detection Advantages</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Fine-Grained Updates</strong>: Only updates exactly what needs to change in the DOM</li>\n              <li><strong>Improved Performance</strong>: Reduced overhead, especially for large applications</li>\n              <li><strong>Smaller Bundle Size</strong>: Optional Zone.js removes 10-20KB from the bundle</li>\n              <li><strong>Predictable Data Flow</strong>: Clear connection between state changes and UI updates</li>\n              <li><strong>Better Developer Experience</strong>: Simplified debugging and more explicit reactivity patterns</li>\n              <li><strong>Third-Party Compatibility</strong>: Works better with libraries that aren't compatible with Zone.js</li>\n              <li><strong>Enhanced Type Safety</strong>: Better TypeScript integration with signals</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Signal-Based Change Detection Challenges</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Migration Complexity</strong>: Converting existing applications requires careful refactoring</li>\n              <li><strong>Learning Curve</strong>: New mental model for developers familiar with traditional Angular</li>\n              <li><strong>Explicit Updates Required</strong>: Async events don't trigger change detection automatically without Zone.js</li>\n              <li><strong>Signal Cleanup</strong>: Forgetting to clean up effects can cause memory leaks</li>\n              <li><strong>Architecture Changes</strong>: May require significant architectural changes for existing applications</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Traditional vs. Signal-Based Components</p>\n            <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n              <thead>\n                <tr class=\"bg-gray-800 text-gray-100\">\n                  <th class=\"py-3 px-4 text-left\">Feature</th>\n                  <th class=\"py-3 px-4 text-left\">Traditional Component</th>\n                  <th class=\"py-3 px-4 text-left\">Signal-Based Component</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">State Management</td>\n                  <td class=\"py-3 px-4\">Class properties</td>\n                  <td class=\"py-3 px-4\">Signal primitives</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Change Detection</td>\n                  <td class=\"py-3 px-4\">Zone.js or manual</td>\n                  <td class=\"py-3 px-4\">Automatic with signals</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Template Access</td>\n                  <td class=\"py-3 px-4\">Direct property access</td>\n                  <td class=\"py-3 px-4\">Signal function calls</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Async Handling</td>\n                  <td class=\"py-3 px-4\">Zone.js patching</td>\n                  <td class=\"py-3 px-4\">Explicit signal updates</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Performance</td>\n                  <td class=\"py-3 px-4\">Can be optimized with OnPush</td>\n                  <td class=\"py-3 px-4\">Built-in optimizations</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div *ngIf=\"selectedTab === 4\">\n          <!-- Related Topics Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Signals</strong>: The reactive primitive powering the new change detection system</li>\n              <li><strong>Zoneless Applications</strong>: Applications that don't rely on Zone.js for change detection</li>\n              <li><strong>Signal-Based Components</strong>: New component model optimized for reactivity</li>\n              <li><strong>OnPush Strategy</strong>: Performance optimization for traditional components</li>\n              <li><strong>ChangeDetectorRef</strong>: Manual control over change detection</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Change Detection FAQ</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li>\n                <strong>Q: Should I migrate existing applications to the signal-based approach?</strong><br>\n                A: Consider starting with a hybrid approach, converting performance-critical components first, and gradually migrating over time.\n              </li>\n              <li>\n                <strong>Q: How do signals improve performance compared to traditional change detection?</strong><br>\n                A: Signals provide fine-grained updates that only affect the exact DOM elements that need to change, rather than re-checking entire components.\n              </li>\n              <li>\n                <strong>Q: Can I mix traditional and signal-based components?</strong><br>\n                A: Yes, Angular 19 supports hybrid applications where some components use signals while others use traditional change detection.\n              </li>\n              <li>\n                <strong>Q: How do I handle async operations in zoneless applications?</strong><br>\n                A: You need to explicitly update signals after async operations complete, as there's no automatic triggering of change detection.\n              </li>\n              <li>\n                <strong>Q: Are there any browser compatibility issues with signal-based change detection?</strong><br>\n                A: No, signal-based change detection works in all modern browsers that Angular supports.\n              </li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n            <ul class=\"list-disc pl-4\">\n              <li><a href=\"https://angular.dev/guide/signals\" class=\"text-sky-400 hover:underline\">Angular Signals Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/change-detection\" class=\"text-sky-400 hover:underline\">Angular Change Detection Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/zoneless\" class=\"text-sky-400 hover:underline\">Zoneless Applications</a></li>\n              <li><a href=\"https://blog.angular.io/angular-v19-is-now-available-update-to-signal-based-components-bc66a6fb8331\" class=\"text-sky-400 hover:underline\">Angular v19 Blog Post</a></li>\n              <li><a href=\"https://github.com/angular/angular/tree/main/packages/core/primitives/signals\" class=\"text-sky-400 hover:underline\">Angular Signals Source Code</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-class-decorator',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './class-decorator.component.html',\n  styleUrls: ['./class-decorator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClassDecoratorComponent extends UnsubscribeService {\n\n  selectedTab = 1;\n\n  @ViewChild('componentCodeEl') componentCodeEl?: ElementRef;\n  @ViewChild('directiveCodeEl') directiveCodeEl?: ElementRef;\n  @ViewChild('injectableCodeEl') injectableCodeEl?: ElementRef;\n  @ViewChild('pipeCodeEl') pipeCodeEl?: ElementRef;\n  @ViewChild('ngModuleCodeEl') ngModuleCodeEl?: ElementRef;\n  @ViewChild('customDecoratorCodeEl') customDecoratorCodeEl?: ElementRef;\n\n  // Code examples\n  componentCode = `@Component({\n  selector: 'app-example',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <h1>{{ title }}</h1>\n    <p>{{ description }}</p>\n  \\`,\n  styles: [\\`\n    h1 { color: #336699; }\n    p { font-size: 16px; }\n  \\`]\n})\nexport class ExampleComponent {\n  title = 'Example Component';\n  description = 'This is a simple component using the @Component decorator';\n}`;\n\n  directiveCode = `@Directive({\n  selector: '[appHighlight]',\n  standalone: true\n})\nexport class HighlightDirective {\n  @Input() appHighlight = '';\n  @Input() defaultColor = 'yellow';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.highlight(this.appHighlight || this.defaultColor);\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.highlight('');\n  }\n\n  private highlight(color: string) {\n    this.el.nativeElement.style.backgroundColor = color;\n  }\n}`;\n\n  injectableCode = `@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private data: string[] = [];\n\n  addItem(item: string): void {\n    this.data.push(item);\n  }\n\n  getItems(): string[] {\n    return [...this.data];\n  }\n}`;\n\n  pipeCode = `@Pipe({\n  name: 'truncate',\n  standalone: true\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: string, limit: number = 25, completeWords: boolean = false, ellipsis: string = '...'): string {\n    if (!value) return '';\n\n    if (value.length <= limit) {\n      return value;\n    }\n\n    if (completeWords) {\n      limit = value.substring(0, limit).lastIndexOf(' ');\n    }\n\n    return value.substring(0, limit) + ellipsis;\n  }\n}`;\n\n  ngModuleCode = `@NgModule({\n  declarations: [\n    // Components, directives, and pipes that belong to this module\n    AppComponent,\n    HomeComponent,\n    NavbarComponent\n  ],\n  imports: [\n    // Other modules this module depends on\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [\n    // Services and other providers\n    AuthService,\n    { provide: API_URL, useValue: 'https://api.example.com' }\n  ],\n  bootstrap: [AppComponent] // Root component to bootstrap\n})\nexport class AppModule { }`;\n\n  customDecoratorCode = `// Creating a custom class decorator\nexport function LogClass() {\n  return function(target: any) {\n    // Original constructor\n    const original = target;\n\n    // New constructor function\n    const newConstructor: any = function(...args: any[]) {\n      console.log(\\`Creating instance of \\${target.name}\\`);\n      return new original(...args);\n    }\n\n    // Copy prototype\n    newConstructor.prototype = original.prototype;\n\n    // Return modified constructor\n    return newConstructor;\n  };\n}\n\n// Using the custom decorator\n@LogClass()\nexport class LoggedClass {\n  constructor() {\n    console.log('LoggedClass instance created');\n  }\n\n  doSomething() {\n    console.log('Doing something');\n  }\n}`;\n\n  ngOnInit() {\n    // Any initialization code if needed\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Class Decorators in Angular\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Class Decorators</span>\n      in Angular 19 are TypeScript decorators that add metadata to classes, enabling Angular to understand their intended role and behavior. These decorators are essential building blocks that define components, directives, services, and other core features of Angular applications.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <div *ngIf=\"selectedTab === 1\">\n          <!-- Notes Tab -->\n          <p>Core Angular Class Decorators</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>@Component</strong>:\n              Defines a component, connecting a template, styles, and business logic.\n              <ul class=\"list-disc pl-4\">\n                <li>Identifies a class as an Angular component</li>\n                <li>Specifies metadata like the selector, template, styles, and change detection strategy</li>\n                <li>Since Angular 19, standalone components are the preferred approach</li>\n                <button (click)=\"componentCodeEl.hidden = !componentCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #componentCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"componentCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>@Directive</strong>:\n              Creates a directive that adds behavior to DOM elements without a template.\n              <ul class=\"list-disc pl-4\">\n                <li>Marks a class as an Angular directive</li>\n                <li>Uses a CSS selector to target elements in templates</li>\n                <li>In Angular 19, standalone directives are fully supported</li>\n                <button (click)=\"directiveCodeEl.hidden = !directiveCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #directiveCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"directiveCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>@Injectable</strong>:\n              Marks a class as available for dependency injection.\n              <ul class=\"list-disc pl-4\">\n                <li>Essential for services and other injectable classes</li>\n                <li>Configures provider scope and tree-shakability</li>\n                <li>Angular 19 optimizes DI for better performance</li>\n                <button (click)=\"injectableCodeEl.hidden = !injectableCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #injectableCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"injectableCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>@Pipe</strong>:\n              Defines a transformation function for template expressions.\n              <ul class=\"list-disc pl-4\">\n                <li>Marks a class as an Angular pipe</li>\n                <li>Must implement the PipeTransform interface</li>\n                <li>In Angular 19, standalone pipes are the preferred approach</li>\n                <button (click)=\"pipeCodeEl.hidden = !pipeCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #pipeCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"pipeCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>@NgModule</strong>:\n              Defines a module that encapsulates related components, directives, pipes, and services.\n              <ul class=\"list-disc pl-4\">\n                <li>Less common in Angular 19 with standalone components</li>\n                <li>Still useful for organizing large applications and lazy loading</li>\n                <li>Configures elements, imports, providers, and bootstrap components</li>\n                <button (click)=\"ngModuleCodeEl.hidden = !ngModuleCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #ngModuleCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"ngModuleCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Angular 19 Class Decorator Enhancements</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Functional Pattern for Decorators</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>Angular 19 emphasizes functional patterns for better tree-shaking</li>\n                <li>New signal-based components use functional alternatives to decorators</li>\n                <li>Example: <code>input()</code> function instead of <code>@Input()</code> decorator</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Improved Type Safety</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>Enhanced type checking for decorator metadata</li>\n                <li>Better TypeScript integration with decorator factories</li>\n                <li>More accurate error messages for decorator-related issues</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Performance Optimizations</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>Reduced runtime overhead from decorator processing</li>\n                <li>More efficient metadata storage and retrieval</li>\n                <li>Improved tree-shaking for unused decorators</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Custom Decorators</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>Better support for creating custom class decorators</li>\n                <li>Simplified decorator composition patterns</li>\n                <li>Integration with Angular's dependency injection system</li>\n                <button (click)=\"customDecoratorCodeEl.hidden = !customDecoratorCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #customDecoratorCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"customDecoratorCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Class Decorator Metadata Options</p>\n          <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n            <thead>\n              <tr class=\"bg-gray-800 text-gray-100\">\n                <th class=\"py-3 px-4 text-left\">Decorator</th>\n                <th class=\"py-3 px-4 text-left\">Key Metadata Properties</th>\n                <th class=\"py-3 px-4 text-left\">Angular 19 Features</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">@Component</td>\n                <td class=\"py-3 px-4\">selector, template, templateUrl, styles, styleUrls, changeDetection, standalone</td>\n                <td class=\"py-3 px-4\">Standalone is now default, signal-based alternatives available</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">@Injectable</td>\n                <td class=\"py-3 px-4\">providedIn</td>\n                <td class=\"py-3 px-4\">Enhanced provider scoping, optimized for DI</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">@Directive</td>\n                <td class=\"py-3 px-4\">selector, standalone, host, providers</td>\n                <td class=\"py-3 px-4\">Standalone is recommended, improved host binding</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">@Pipe</td>\n                <td class=\"py-3 px-4\">name, pure, standalone</td>\n                <td class=\"py-3 px-4\">Standalone is default, better optimization for pure pipes</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">@NgModule</td>\n                <td class=\"py-3 px-4\">declarations, imports, exports, providers, bootstrap</td>\n                <td class=\"py-3 px-4\">Less prominent with standalone components, improved lazy loading</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div *ngIf=\"selectedTab === 2\">\n          <!-- Best Practices Tab -->\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong class=\"text-sky-400\">Prefer Standalone Components</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use standalone: true in @Component, @Directive, and @Pipe decorators</li>\n                <li>Directly import dependencies in the imports array</li>\n                <li>Avoid NgModules when possible for simpler code organization</li>\n                <li>Take advantage of improved tree-shaking with standalone components</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Optimize @Injectable Configuration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use providedIn: 'root' for singleton services across the application</li>\n                <li>Use providedIn: 'platform' only for truly application-wide services</li>\n                <li>Use providedIn: 'any' for multi-instance lazy-loaded modules</li>\n                <li>Consider using providedIn: SomeModule for module-scoped services</li>\n                <li>Use explicit providers arrays for component-level services</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Write Clean, Focused Components</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Each component should have a single responsibility</li>\n                <li>Keep templates and styles simple and maintainable</li>\n                <li>Use OnPush change detection strategy for better performance</li>\n                <li>Prefer composition over inheritance for component reuse</li>\n                <li>Consider using signal-based components for optimal reactivity</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Make Decorators Readable</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use consistent formatting for decorator metadata</li>\n                <li>Organize properties alphabetically or by importance</li>\n                <li>Split complex decorators across multiple lines for readability</li>\n                <li>Add comments for non-obvious decorator configurations</li>\n                <li>Consider extracting complex configuration to constants</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Embrace Modern Patterns</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Consider signal-based alternatives to traditional decorators</li>\n                <li>Use functional patterns when appropriate for better tree-shaking</li>\n                <li>Take advantage of type inference improvements in Angular 19</li>\n                <li>Use explicit typing for decorator metadata where needed</li>\n                <li>Consider custom decorators for cross-cutting concerns</li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n\n        <div *ngIf=\"selectedTab === 3\">\n          <!-- Pros and Cons Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Class Decorators</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Declarative Syntax</strong>: Makes it clear what a class's role is in the Angular ecosystem</li>\n              <li><strong>Metadata Definition</strong>: Provides a clean way to attach configuration to classes</li>\n              <li><strong>Framework Integration</strong>: Enables Angular to discover and process classes correctly</li>\n              <li><strong>Separation of Concerns</strong>: Keeps configuration separate from implementation</li>\n              <li><strong>IDE Support</strong>: Modern editors provide excellent autocompletion and validation</li>\n              <li><strong>Testability</strong>: Decorators make classes easier to mock and test</li>\n              <li><strong>Code Organization</strong>: Helps maintain a consistent structure across the codebase</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Challenges with Class Decorators</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>TypeScript Limitations</strong>: Decorators are still technically experimental in TypeScript</li>\n              <li><strong>Learning Curve</strong>: Understanding all decorator options requires time</li>\n              <li><strong>Runtime Overhead</strong>: Decorators add some processing cost during application startup</li>\n              <li><strong>Debugging Complexity</strong>: Errors in decorators can be harder to trace</li>\n              <li><strong>Limited Type Safety</strong>: Some decorator metadata isn't fully type-checked</li>\n              <li><strong>Code Size</strong>: Heavy use of decorators can increase bundle size</li>\n              <li><strong>Migration Challenges</strong>: Moving to new patterns requires refactoring</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Traditional vs. Modern Angular 19 Patterns</p>\n            <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n              <thead>\n                <tr class=\"bg-gray-800 text-gray-100\">\n                  <th class=\"py-3 px-4 text-left\">Traditional Pattern</th>\n                  <th class=\"py-3 px-4 text-left\">Angular 19 Modern Pattern</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">@Component with NgModule</td>\n                  <td class=\"py-3 px-4\">Standalone @Component with direct imports</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">@Input() property decorator</td>\n                  <td class=\"py-3 px-4\">input() signal function</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">@Output() with EventEmitter</td>\n                  <td class=\"py-3 px-4\">output() signal function</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Two-way binding with @Input/@Output</td>\n                  <td class=\"py-3 px-4\">model() signal function</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">@Injectable provided in array</td>\n                  <td class=\"py-3 px-4\">@Injectable with providedIn configuration</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div *ngIf=\"selectedTab === 4\">\n          <!-- Related Topics Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>TypeScript Decorators</strong>: The language feature that enables Angular decorators</li>\n              <li><strong>Metadata Reflection</strong>: How Angular uses decorators to generate metadata</li>\n              <li><strong>Dependency Injection</strong>: The system that leverages @Injectable decorators</li>\n              <li><strong>Standalone Components</strong>: Modern approach to component definition</li>\n              <li><strong>Signal-Based APIs</strong>: Functional alternatives to property decorators</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Class Decorator FAQ</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li>\n                <strong>Q: When should I use NgModules vs. standalone components?</strong><br>\n                A: In Angular 19, prefer standalone components for most use cases. NgModules are still useful for organizing large applications and legacy code.\n              </li>\n              <li>\n                <strong>Q: What's the difference between providedIn: 'root' and providedIn: 'platform'?</strong><br>\n                A: 'root' creates a singleton for the current application, while 'platform' creates a singleton shared across multiple Angular applications that might be running on the same page.\n              </li>\n              <li>\n                <strong>Q: Should I migrate from property decorators to signal-based APIs?</strong><br>\n                A: For new components, use signal-based APIs. For existing components, consider migrating during major refactors rather than all at once.\n              </li>\n              <li>\n                <strong>Q: Can I create my own custom class decorators?</strong><br>\n                A: Yes, but they won't integrate with Angular's core functionality automatically. Custom decorators are useful for cross-cutting concerns like logging and validation.\n              </li>\n              <li>\n                <strong>Q: How do decorators affect performance?</strong><br>\n                A: Decorators add some overhead during application startup but have minimal impact on runtime performance. Angular 19 has optimized decorator processing considerably.\n              </li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n            <ul class=\"list-disc pl-4\">\n              <li><a href=\"https://angular.dev/guide/components\" class=\"text-sky-400 hover:underline\">Angular Component Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/di/dependency-injection\" class=\"text-sky-400 hover:underline\">Angular Dependency Injection Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/directives/directive-composition-api\" class=\"text-sky-400 hover:underline\">Directive Composition API</a></li>\n              <li><a href=\"https://angular.dev/guide/signals\" class=\"text-sky-400 hover:underline\">Angular Signals Guide</a></li>\n              <li><a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\" class=\"text-sky-400 hover:underline\">TypeScript Decorators Documentation</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-class-field-decorator',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './class-field-decorator.component.html',\n  styleUrls: ['./class-field-decorator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClassFieldDecoratorComponent extends UnsubscribeService {\n\n  selectedTab = 1;\n\n  @ViewChild('inputCodeEl') inputCodeEl?: ElementRef;\n  @ViewChild('outputCodeEl') outputCodeEl?: ElementRef;\n  @ViewChild('viewChildCodeEl') viewChildCodeEl?: ElementRef;\n  @ViewChild('hostBindingCodeEl') hostBindingCodeEl?: ElementRef;\n  @ViewChild('signalInputCodeEl') signalInputCodeEl?: ElementRef;\n\n  // Code examples\n  inputCode = `// Traditional @Input decorator\n@Component({\n  selector: 'app-user-profile',\n  template: \\`\n    <div class=\"user-card\">\n      <h2>{{ name }}</h2>\n      <div>Age: {{ age }}</div>\n    </div>\n  \\`\n})\nexport class UserProfileComponent {\n  @Input() name: string = '';\n\n  // Input with alias\n  @Input('userAge') age: number = 0;\n\n  // Required input (Angular 14+)\n  @Input({ required: true }) userId!: string;\n\n  // Transformed input (Angular 16+)\n  @Input({ transform: (value: string) => value.toUpperCase() })\n  description: string = '';\n}`;\n\n  outputCode = `@Component({\n  selector: 'app-counter',\n  template: \\`\n    <div>\n      <h2>Count: {{ count }}</h2>\n      <button (click)=\"increment()\">Increment</button>\n      <button (click)=\"reset()\">Reset</button>\n    </div>\n  \\`\n})\nexport class CounterComponent {\n  count = 0;\n\n  // Basic output\n  @Output() countChanged = new EventEmitter<number>();\n\n  // Output with alias\n  @Output('resetEvent') resetTriggered = new EventEmitter<void>();\n\n  increment() {\n    this.count++;\n    this.countChanged.emit(this.count);\n  }\n\n  reset() {\n    this.count = 0;\n    this.resetTriggered.emit();\n    this.countChanged.emit(this.count);\n  }\n}`;\n\n  viewChildCode = `@Component({\n  selector: 'app-tabbed-panel',\n  template: \\`\n    <div>\n      <div #tabHeader class=\"tab-header\">\n        <button *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\">\n          {{ tab.title }}\n        </button>\n      </div>\n      <div class=\"tab-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  \\`\n})\nexport class TabbedPanelComponent implements AfterViewInit {\n  // Reference to a single element\n  @ViewChild('tabHeader') tabHeader!: ElementRef;\n\n  // Reference to a component\n  @ViewChild(TabComponent) activeTab?: TabComponent;\n\n  // Reference to a directive with specific read option\n  @ViewChild('tabHeader', { read: ViewContainerRef })\n  headerContainer!: ViewContainerRef;\n\n  // Multiple elements with ViewChildren\n  @ViewChildren(TabComponent) allTabs!: QueryList<TabComponent>;\n\n  // Static option for immediate availability\n  @ViewChild('staticContent', { static: true })\n  staticContent!: ElementRef;\n\n  ngAfterViewInit() {\n    console.log('Tab header element:', this.tabHeader.nativeElement);\n    this.allTabs.forEach(tab => console.log('Tab:', tab.title));\n  }\n}`;\n\n  hostBindingCode = `@Directive({\n  selector: '[appHighlight]',\n  standalone: true\n})\nexport class HighlightDirective {\n  // Color for the highlight, defaults to yellow\n  @Input() highlightColor = 'yellow';\n\n  // Bind to the style.backgroundColor property of the host element\n  @HostBinding('style.backgroundColor') backgroundColor: string = '';\n\n  // Bind to the class.active property of the host element\n  @HostBinding('class.active') isActive = false;\n\n  // Bind to the attr.aria-label property\n  @HostBinding('attr.aria-label') ariaLabel = 'Highlighted element';\n\n  // Listen for mouseenter event and apply highlighting\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    this.backgroundColor = this.highlightColor;\n    this.isActive = true;\n  }\n\n  // Listen for mouseleave event and remove highlighting\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    this.backgroundColor = '';\n    this.isActive = false;\n  }\n}`;\n\n  signalInputCode = `// Modern signal-based inputs (Angular 19)\n@Component({\n  selector: 'app-product-card',\n  template: \\`\n    <div class=\"product\">\n      <h2>{{ name() }}</h2>\n      <div>Price: {{ price() | currency }}</div>\n      <div *ngIf=\"isOnSale()\">ON SALE!</div>\n      <button [disabled]=\"!inStock()\" (click)=\"addToCart()\">\n        {{ inStock() ? 'Add to Cart' : 'Out of Stock' }}\n      </button>\n    </div>\n  \\`\n})\nexport class ProductCardComponent {\n  // Basic input signal\n  name = input<string>('');\n\n  // Input signal with transform function\n  price = input<number>(0, {\n    transform: (value: number) => Math.max(0, value)\n  });\n\n  // Required input signal\n  id = input.required<string>();\n\n  // Input signal with default value\n  inStock = input<boolean>(true);\n\n  // Model input (two-way bindable)\n  quantity = model<number>(1);\n\n  // Computed value based on input signals\n  isOnSale = computed(() => {\n    return this.price() < 50;\n  });\n\n  // Output signal\n  addedToCart = output<{id: string, quantity: number}>();\n\n  addToCart() {\n    if (this.inStock()) {\n      this.addedToCart.emit({\n        id: this.id(),\n        quantity: this.quantity()\n      });\n    }\n  }\n}`;\n\n  ngOnInit() {\n    // Any initialization code if needed\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Class Field Decorators in Angular\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Class Field Decorators</span>\n      in Angular 19 are TypeScript decorators that add metadata to class properties and methods. These decorators enable Angular to understand how properties interact with components, templates, and the DOM, providing essential functionality like property binding, event handling, and DOM access.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <div *ngIf=\"selectedTab === 1\">\n          <!-- Notes Tab -->\n          <p>Core Angular Class Field Decorators</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>&#64;Input()</strong>:\n              Declares a property that can receive data from a parent component.\n              <ul class=\"list-disc pl-4\">\n                <li>Enables component property binding</li>\n                <li>Can include aliases, required flag, and transform functions</li>\n                <li>Angular 19 introduces more robust typing and validation</li>\n                <button (click)=\"inputCodeEl.hidden = !inputCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #inputCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"inputCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>&#64;Output()</strong>:\n              Declares an event emitter property that a component can use to emit events.\n              <ul class=\"list-disc pl-4\">\n                <li>Uses EventEmitter to emit custom events to parent components</li>\n                <li>Can specify alias for clearer template binding</li>\n                <li>Facilitates component communication</li>\n                <button (click)=\"outputCodeEl.hidden = !outputCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #outputCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"outputCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>&#64;ViewChild() / &#64;ViewChildren()</strong>:\n              Provides access to child elements, components, or directives in templates.\n              <ul class=\"list-disc pl-4\">\n                <li>Queries the DOM for elements matching a selector</li>\n                <li>Can target template reference variables, component types, or directives</li>\n                <li>Supports static query option for early access in ngOnInit</li>\n                <button (click)=\"viewChildCodeEl.hidden = !viewChildCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #viewChildCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"viewChildCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>&#64;HostBinding() / &#64;HostListener()</strong>:\n              Binds properties and events of the host element.\n              <ul class=\"list-disc pl-4\">\n                <li>&#64;HostBinding binds to properties, attributes, or classes of the host element</li>\n                <li>&#64;HostListener subscribes to events on the host element</li>\n                <li>Useful for directive implementation</li>\n                <button (click)=\"hostBindingCodeEl.hidden = !hostBindingCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #hostBindingCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"hostBindingCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Angular 19 Signal-Based Alternatives</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Signal-Based Inputs and Outputs</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>input() function replaces &#64;Input() decorator</li>\n                <li>output() function replaces &#64;Output() decorator</li>\n                <li>model() function provides two-way binding capability</li>\n                <li>Improved type safety and runtime validation</li>\n                <li>Better tree-shaking and performance optimization</li>\n                <button (click)=\"signalInputCodeEl.hidden = !signalInputCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #signalInputCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"signalInputCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Key Advantages of Signal-Based APIs</strong>:\n              <ul class=\"list-disc pl-4\">\n                <li>Improved reactivity with direct signal integration</li>\n                <li>Enhanced type checking with generics</li>\n                <li>More intuitive API for transform functions</li>\n                <li>Simpler syntax for declaring required inputs</li>\n                <li>Better performance through optimization</li>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Other Important Class Field Decorators</p>\n          <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n            <thead>\n              <tr class=\"bg-gray-800 text-gray-100\">\n                <th class=\"py-3 px-4 text-left\">Decorator</th>\n                <th class=\"py-3 px-4 text-left\">Purpose</th>\n                <th class=\"py-3 px-4 text-left\">Angular 19 Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">&#64;ContentChild / &#64;ContentChildren</td>\n                <td class=\"py-3 px-4\">Access projected content</td>\n                <td class=\"py-3 px-4\">Supported, no signal alternative yet</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">&#64;Inject</td>\n                <td class=\"py-3 px-4\">Field-based DI token injection</td>\n                <td class=\"py-3 px-4\">Supported, functional inject() alternative available</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">&#64;Optional</td>\n                <td class=\"py-3 px-4\">Mark dependencies as optional</td>\n                <td class=\"py-3 px-4\">Supported</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">&#64;Self / &#64;SkipSelf</td>\n                <td class=\"py-3 px-4\">Control injector hierarchy traversal</td>\n                <td class=\"py-3 px-4\">Supported</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">&#64;Attribute</td>\n                <td class=\"py-3 px-4\">Access host element attribute values</td>\n                <td class=\"py-3 px-4\">Supported</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div *ngIf=\"selectedTab === 2\">\n          <!-- Best Practices Tab -->\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong class=\"text-sky-400\">Use Descriptive Property Names</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Choose clear, descriptive names for decorated properties</li>\n                <li>Use camelCase for property names, following TypeScript conventions</li>\n                <li>If using an alias, ensure it's intuitive for template consumers</li>\n                <li>Document complex properties with JSDoc comments</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Prefer Signal-Based Inputs in Angular 19</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use input() function instead of &#64;Input() decorator for new components</li>\n                <li>Take advantage of improved type safety with generics</li>\n                <li>Implement transform functions for data sanitization</li>\n                <li>Use input.required&lt;T&gt;() for mandatory properties</li>\n                <li>Consider model() for two-way binding scenarios</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Properly Type All Inputs and Outputs</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Always specify types for Input and Output properties</li>\n                <li>Use generic types with EventEmitter: EventEmitter&lt;T&gt;</li>\n                <li>Avoid the any type; use unknown if the type is truly dynamic</li>\n                <li>Consider using interface or type alias for complex data structures</li>\n                <li>Use readonly arrays or objects when appropriate</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Optimize ViewChild and ContentChild Queries</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use {{ '{' }} static: true {{ '}' }} only when needed in ngOnInit</li>\n                <li>Specify the read option when querying for a specific token</li>\n                <li>Be aware of timing differences between static and dynamic queries</li>\n                <li>Use @ViewChildren with QueryList for multiple elements</li>\n                <li>Remember that ContentChild queries elements projected from parent templates</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Implement Change Detection Strategies</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use OnPush change detection for improved performance</li>\n                <li>Understand how inputs trigger change detection</li>\n                <li>Consider immutable data patterns for OnPush components</li>\n                <li>Use signal-based inputs for automatic fine-grained updates</li>\n                <li>Be cautious with HostBinding in performance-critical components</li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n\n        <div *ngIf=\"selectedTab === 3\">\n          <!-- Pros and Cons Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Class Field Decorators</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Declarative API</strong>: Clearly identifies the purpose and behavior of properties</li>\n              <li><strong>Simplified Component Communication</strong>: Easy to implement parent-child data flow</li>\n              <li><strong>DOM Integration</strong>: Provides direct access to template elements and DOM events</li>\n              <li><strong>Type Safety</strong>: Works well with TypeScript's type system</li>\n              <li><strong>Template Integration</strong>: Makes binding in templates intuitive and straightforward</li>\n              <li><strong>Framework Integration</strong>: Ensures Angular can properly process components</li>\n              <li><strong>Metadata Preservation</strong>: Retains information through the build process</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Challenges with Class Field Decorators</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>TypeScript Experimental Feature</strong>: Decorators are still technically experimental</li>\n              <li><strong>Performance Overhead</strong>: Traditional decorators add some runtime cost</li>\n              <li><strong>Debugging Complexity</strong>: Errors in decorators can be harder to diagnose</li>\n              <li><strong>Change Detection Complexity</strong>: Can trigger unnecessary renders if not careful</li>\n              <li><strong>Timing Issues</strong>: ViewChild and ContentChild queries have specific lifecycle timing</li>\n              <li><strong>Migration Effort</strong>: Moving to signal-based alternatives requires refactoring</li>\n              <li><strong>Testing Complexity</strong>: Some decorators require special handling in tests</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Traditional vs. Angular 19 Signal-Based Patterns</p>\n            <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n              <thead>\n                <tr class=\"bg-gray-800 text-gray-100\">\n                  <th class=\"py-3 px-4 text-left\">Traditional Pattern</th>\n                  <th class=\"py-3 px-4 text-left\">Angular 19 Signal-Based Pattern</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">&#64;Input() name: string;</td>\n                  <td class=\"py-3 px-4\">name = input&lt;string&gt;('');</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">&#64;Input({{ '{' }} required: true {{ '}' }}) id!: string;</td>\n                  <td class=\"py-3 px-4\">id = input.required&lt;string&gt;();</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">&#64;Input({{ '{' }} transform: fn {{ '}' }}) value: T;</td>\n                  <td class=\"py-3 px-4\">value = input&lt;T&gt;(defaultValue, {{ '{' }} transform: fn {{ '}' }});</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">&#64;Output() changed = new EventEmitter&lt;T&gt;();</td>\n                  <td class=\"py-3 px-4\">changed = output&lt;T&gt;();</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">&#64;Input() value: T;<br>&#64;Output() valueChange = new EventEmitter&lt;T&gt;();</td>\n                  <td class=\"py-3 px-4\">value = model&lt;T&gt;(defaultValue);</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div *ngIf=\"selectedTab === 4\">\n          <!-- Related Topics Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Component Communication</strong>: How data flows between components in Angular</li>\n              <li><strong>TypeScript Decorators</strong>: The language feature that enables Angular's field decorators</li>\n              <li><strong>Angular Signals</strong>: The reactive primitive that powers modern input/output APIs</li>\n              <li><strong>Change Detection</strong>: How decorated properties affect Angular's update cycle</li>\n              <li><strong>Component Lifecycle</strong>: How ViewChild and ContentChild queries interact with lifecycle hooks</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Class Field Decorator FAQ</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li>\n                <strong>Q: Should I use traditional decorators or signal-based APIs in Angular 19?</strong><br>\n                A: For new components, prefer signal-based APIs (input(), output(), model()). They offer better performance, type safety, and integration with Angular's reactivity system. For existing components, consider migrating during major refactors.\n              </li>\n              <li>\n                <strong>Q: When should I use ViewChild vs ContentChild?</strong><br>\n                A: Use ViewChild to access elements defined in the component's own template. Use ContentChild to access elements projected into the component via ng-content.\n              </li>\n              <li>\n                <strong>Q: How do I handle required inputs in Angular 19?</strong><br>\n                A: With traditional decorators, use &#64;Input({{ '{' }} required: true {{ '}' }}). With signal-based APIs, use input.required&lt;T&gt;().\n              </li>\n              <li>\n                <strong>Q: Can I transform input values in Angular 19?</strong><br>\n                A: Yes, both &#64;Input({{ '{' }} transform: fn {{ '}' }}) and input(defaultValue, {{ '{' }} transform: fn {{ '}' }}) support transformation functions that process values before they reach the component.\n              </li>\n              <li>\n                <strong>Q: How do signal-based inputs affect change detection?</strong><br>\n                A: Signal-based inputs integrate with Angular's fine-grained reactivity system, potentially reducing unnecessary re-renders and improving performance.\n              </li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n            <ul class=\"list-disc pl-4\">\n              <li><a href=\"https://angular.dev/guide/components/inputs\" class=\"text-sky-400 hover:underline\">Angular Input Binding Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/components/outputs\" class=\"text-sky-400 hover:underline\">Angular Output Binding Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/components/view-encapsulation\" class=\"text-sky-400 hover:underline\">Component View Encapsulation</a></li>\n              <li><a href=\"https://angular.dev/guide/signals\" class=\"text-sky-400 hover:underline\">Angular Signals Guide</a></li>\n              <li><a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\" class=\"text-sky-400 hover:underline\">TypeScript Decorators Documentation</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-cli',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './cli.component.html',\n  styleUrls: ['./cli.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CliComponent extends UnsubscribeService {\n\n  selectedTab = 1;\n\n  @ViewChild('basicCommandsCodeEl') basicCommandsCodeEl?: ElementRef;\n  @ViewChild('v19CommandsCodeEl') v19CommandsCodeEl?: ElementRef;\n  @ViewChild('workspaceConfigCodeEl') workspaceConfigCodeEl?: ElementRef;\n  @ViewChild('customBuildersCodeEl') customBuildersCodeEl?: ElementRef;\n\n  // Code examples\n  basicCommandsCode = `# Creating a new application\nng new my-app\n\n# Generating components\nng generate component my-component\nng g c my-component --standalone # shorthand with standalone flag\n\n# Generating services\nng generate service my-service\nng g s my-service --skip-tests # shorthand with flag\n\n# Building for production\nng build --configuration production\n\n# Running the development server\nng serve\n\n# Running unit tests\nng test\n\n# Running end-to-end tests\nng e2e\n\n# Linting the project\nng lint`;\n\n  v19CommandsCode = `# Creating a new Angular 19 app with latest features\nng new my-app --standalone --ssr --inline-critical-css\n\n# Generating a signal-based component\nng generate component my-component --standalone --change-detection=OnPush\n\n# Creating a library with the new CLI library generator\nng generate library my-lib --standalone\n\n# Using the new partial hydration options\nng serve --hydration --partial-hydration\n\n# Enhanced ng update with dependency analysis\nng update --analyze-dependencies\n\n# Using the new build performance profiler\nng build --profile\n\n# Creating a new app with the new minimal bundle size option\nng new my-app --minimal\n\n# Analyzing bundle sizes with the enhanced stats command\nng build --stats-json && ng analytics`;\n\n  workspaceConfigCode = `// angular.json configuration for CLI options\n{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"projects\": {\n    \"my-app\": {\n      \"projectType\": \"application\",\n      \"schematics\": {\n        \"@schematics/angular:component\": {\n          \"style\": \"scss\",\n          \"standalone\": true,\n          \"changeDetection\": \"OnPush\"\n        },\n        \"@schematics/angular:application\": {\n          \"strict\": true\n        }\n      },\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"prefix\": \"app\",\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:browser\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"inlineStyleLanguage\": \"scss\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.scss\"],\n            \"scripts\": [],\n            \"optimization\": false,\n            \"sourceMap\": true,\n            \"namedChunks\": true,\n            \"extractLicenses\": false,\n            \"buildOptimizer\": false\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                },\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"2kb\",\n                  \"maximumError\": \"4kb\"\n                }\n              ],\n              \"outputHashing\": \"all\",\n              \"optimization\": true,\n              \"sourceMap\": false,\n              \"namedChunks\": false,\n              \"extractLicenses\": true,\n              \"buildOptimizer\": true\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n\n  customBuildersCode = `// Custom builder implementation for Angular 19\nimport { BuilderContext, BuilderOutput, createBuilder } from '@angular-devkit/architect';\nimport { JsonObject } from '@angular-devkit/core';\n\ninterface Options extends JsonObject {\n  command: string;\n  args: string[];\n}\n\nexport default createBuilder<Options>((options, context) => {\n  return new Promise<BuilderOutput>(async (resolve) => {\n    context.logger.info(\\`Executing custom command: \\${options.command}\\`);\n\n    try {\n      // Implementation of custom build steps\n      const { spawn } = require('child_process');\n      const child = spawn(options.command, options.args, { shell: true });\n\n      child.stdout.on('data', (data: Buffer) => {\n        context.logger.info(data.toString());\n      });\n\n      child.stderr.on('data', (data: Buffer) => {\n        context.logger.error(data.toString());\n      });\n\n      child.on('close', (code: number) => {\n        resolve({ success: code === 0 });\n      });\n    } catch (error) {\n      context.logger.error('Error during command execution: ' + error);\n      resolve({ success: false });\n    }\n  });\n});\n\n// Usage in angular.json\n/*\n\"architect\": {\n  \"custom\": {\n    \"builder\": \"./builders:custom\",\n    \"options\": {\n      \"command\": \"echo\",\n      \"args\": [\"Hello from custom builder\"]\n    }\n  }\n}\n*/`;\n\n  ngOnInit() {\n    // Any initialization code if needed\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Command-Line Interface (CLI) in Angular\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Angular CLI</span>\n      is a powerful command-line tool that streamlines Angular development workflows. It provides commands for creating projects, generating code, building, testing, and deploying applications. In Angular 19, the CLI has received significant enhancements for developer experience, performance optimization, and integration with Angular's latest features like standalone components, SSR, and hydration.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <div *ngIf=\"selectedTab === 1\">\n          <!-- Notes Tab -->\n          <p>Core CLI Commands and Functionality</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Basic CLI Commands</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>The CLI provides essential commands for the entire development lifecycle</li>\n                <li>Most commands have shorthand versions (e.g., <code>ng g c</code> for <code>ng generate component</code>)</li>\n                <li>Commands accept options that customize their behavior</li>\n                <button (click)=\"basicCommandsCodeEl.hidden = !basicCommandsCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #basicCommandsCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>bash</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"basicCommandsCode\" [languages]=\"['bash']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Workspace Configuration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>The CLI uses <code>angular.json</code> to store project configuration</li>\n                <li>This file defines project structure, build options, and CLI defaults</li>\n                <li>It contains configurations for different environments (development, production)</li>\n                <li>Schematics configuration for code generation is stored here</li>\n                <button (click)=\"workspaceConfigCodeEl.hidden = !workspaceConfigCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #workspaceConfigCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>json</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"workspaceConfigCode\" [languages]=\"['json']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Schematics & Builders</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>The CLI uses schematics to generate and modify code</li>\n                <li>Builders execute processes like build, test, and serve</li>\n                <li>Both can be customized or extended for specific project needs</li>\n                <li>Third-party libraries can provide additional schematics and builders</li>\n                <button (click)=\"customBuildersCodeEl.hidden = !customBuildersCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #customBuildersCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"customBuildersCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Angular 19 CLI Enhancements</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>New CLI Features in Angular 19</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Enhanced support for standalone applications and components</li>\n                <li>Improved server-side rendering (SSR) and hydration integration</li>\n                <li>Advanced build optimization for smaller bundle sizes</li>\n                <li>New performance profiling and analytics tools</li>\n                <li>Streamlined migration paths from older Angular versions</li>\n                <button (click)=\"v19CommandsCodeEl.hidden = !v19CommandsCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #v19CommandsCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>bash</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"v19CommandsCode\" [languages]=\"['bash']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Build Performance Improvements</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Enhanced Webpack 5 integration with smarter chunking strategies</li>\n                <li>Improved cache invalidation for faster incremental builds</li>\n                <li>Better tree-shaking to reduce bundle sizes</li>\n                <li>More efficient code generation during builds</li>\n                <li>New optimization options for production deployments</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Developer Experience Updates</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>More informative error messages with actionable suggestions</li>\n                <li>Enhanced auto-completion in CLI commands</li>\n                <li>Interactive prompts for common CLI operations</li>\n                <li>Better integration with modern bundlers and tools</li>\n                <li>Improved telemetry with opt-in analytics</li>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Key CLI Commands in Angular 19</p>\n          <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n            <thead>\n              <tr class=\"bg-gray-800 text-gray-100\">\n                <th class=\"py-3 px-4 text-left\">Command</th>\n                <th class=\"py-3 px-4 text-left\">Purpose</th>\n                <th class=\"py-3 px-4 text-left\">Angular 19 Enhancements</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">ng new</td>\n                <td class=\"py-3 px-4\">Create a new Angular application</td>\n                <td class=\"py-3 px-4\">Improved standalone and SSR templates, new minimal option</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">ng generate</td>\n                <td class=\"py-3 px-4\">Generate components, services, etc.</td>\n                <td class=\"py-3 px-4\">Enhanced schematic options for standalone, signals support</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">ng build</td>\n                <td class=\"py-3 px-4\">Build the application</td>\n                <td class=\"py-3 px-4\">Improved bundling, new performance profiler</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">ng serve</td>\n                <td class=\"py-3 px-4\">Run development server</td>\n                <td class=\"py-3 px-4\">Enhanced hydration and SSR development support</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">ng test</td>\n                <td class=\"py-3 px-4\">Run unit tests</td>\n                <td class=\"py-3 px-4\">Better error reporting, faster test execution</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">ng update</td>\n                <td class=\"py-3 px-4\">Update Angular dependencies</td>\n                <td class=\"py-3 px-4\">Enhanced dependency analysis, smoother migrations</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">ng add</td>\n                <td class=\"py-3 px-4\">Add new capabilities to your project</td>\n                <td class=\"py-3 px-4\">Extended package ecosystem, better integration</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div *ngIf=\"selectedTab === 2\">\n          <!-- Best Practices Tab -->\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong class=\"text-sky-400\">Optimize Project Structure for CLI</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Follow the standard directory structure created by the CLI</li>\n                <li>Keep related files (component, styles, tests) together</li>\n                <li>Use feature modules or standalone components for organization</li>\n                <li>Consider using library projects for shared code</li>\n                <li>Create a sensible naming convention for generated files</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Customize Angular Workspace Configuration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Configure default schematic options in <code>angular.json</code></li>\n                <li>Set up suitable budget thresholds for bundle sizes</li>\n                <li>Configure environment-specific build options</li>\n                <li>Create custom builder configurations for specific needs</li>\n                <li>Use project-specific configuration when working in a monorepo</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Leverage CLI Generation Capabilities</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use <code>ng generate</code> consistently for components, services, etc.</li>\n                <li>Take advantage of the <code>--dry-run</code> flag to preview changes</li>\n                <li>Utilize schematic options to customize code generation</li>\n                <li>Consider creating custom schematics for project-specific patterns</li>\n                <li>Use Angular 19's signal input options when generating components</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Optimize Build and Development Process</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use production builds with proper optimization flags</li>\n                <li>Leverage Angular 19's improved build caching</li>\n                <li>Activate SSR and hydration for better user experience</li>\n                <li>Monitor bundle sizes with budgets and analytics</li>\n                <li>Configure CDN paths and differential loading appropriately</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Maintain Environment Consistency</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Lock Angular CLI version in <code>package.json</code> for team consistency</li>\n                <li>Document project-specific CLI commands in README</li>\n                <li>Consider using npm/yarn scripts to wrap CLI commands</li>\n                <li>Set up CI/CD pipelines using CLI commands for builds and tests</li>\n                <li>Keep workspace and dependencies up to date with regular updates</li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n\n        <div *ngIf=\"selectedTab === 3\">\n          <!-- Pros and Cons Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Advantages of the Angular CLI</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Standardized Workflow</strong>: Provides consistent patterns for team development</li>\n              <li><strong>Automation</strong>: Reduces manual work with code generation and build process automation</li>\n              <li><strong>Optimization</strong>: Advanced build optimization for production deployments</li>\n              <li><strong>Scaffolding</strong>: Quick creation of components and other Angular artifacts</li>\n              <li><strong>Testing Integration</strong>: Built-in tools for unit and end-to-end testing</li>\n              <li><strong>Update Management</strong>: Simplified dependency updates and migration paths</li>\n              <li><strong>Configuration</strong>: Centralized workspace configuration in a single file</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Challenges with the Angular CLI</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Learning Curve</strong>: Many commands and options to understand</li>\n              <li><strong>Configuration Complexity</strong>: Advanced customization can be challenging</li>\n              <li><strong>Build Times</strong>: Large projects may still have lengthy build times despite optimizations</li>\n              <li><strong>Limited Flexibility</strong>: Some customizations require ejecting or complex workarounds</li>\n              <li><strong>Versioning Constraints</strong>: CLI version must align with Angular framework version</li>\n              <li><strong>Integration Challenges</strong>: Some third-party tools may require additional configuration</li>\n              <li><strong>Developer Machine Requirements</strong>: Resource-intensive tasks may strain less powerful systems</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Angular 19 CLI Improvements Over Previous Versions</p>\n            <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n              <thead>\n                <tr class=\"bg-gray-800 text-gray-100\">\n                  <th class=\"py-3 px-4 text-left\">Feature</th>\n                  <th class=\"py-3 px-4 text-left\">Before Angular 19</th>\n                  <th class=\"py-3 px-4 text-left\">Angular 19 Improvements</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Build Performance</td>\n                  <td class=\"py-3 px-4\">Slower incremental builds, less efficient caching</td>\n                  <td class=\"py-3 px-4\">Up to 30% faster builds with improved caching mechanisms</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Bundle Size</td>\n                  <td class=\"py-3 px-4\">Basic tree-shaking and optimization</td>\n                  <td class=\"py-3 px-4\">Enhanced tree-shaking with standalone component optimization</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">SSR Integration</td>\n                  <td class=\"py-3 px-4\">Complex setup with manual configuration</td>\n                  <td class=\"py-3 px-4\">Streamlined SSR and hydration with simple CLI flags</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Error Messages</td>\n                  <td class=\"py-3 px-4\">Often cryptic errors with limited context</td>\n                  <td class=\"py-3 px-4\">Detailed error messages with actionable suggestions</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Dependency Updates</td>\n                  <td class=\"py-3 px-4\">Basic update mechanism with some migration paths</td>\n                  <td class=\"py-3 px-4\">Comprehensive dependency analysis and smarter migrations</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div *ngIf=\"selectedTab === 4\">\n          <!-- Related Topics Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Angular Workspace</strong>: The environment configured by the CLI for development</li>\n              <li><strong>Schematics</strong>: The templating system used by the CLI for code generation</li>\n              <li><strong>Builders</strong>: Tools that perform operations like build, serve, and test</li>\n              <li><strong>Angular DevKit</strong>: The underlying libraries powering the Angular CLI</li>\n              <li><strong>Webpack</strong>: The bundler integrated with the CLI for optimized builds</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">CLI FAQ</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li>\n                <strong>Q: How do I update to Angular 19 CLI?</strong><br>\n                A: Use the command <code>ng update @angular/cli @angular/core</code> to update both the CLI and core framework to version 19. The CLI will automatically handle dependency updates and run necessary migrations.\n              </li>\n              <li>\n                <strong>Q: How can I reduce bundle sizes in Angular 19?</strong><br>\n                A: The Angular 19 CLI provides several optimization techniques: use standalone components, enable build optimization with <code>--configuration production</code>, implement lazy loading for routes, use the new <code>--minimal</code> flag for new projects, and leverage the budgets feature to monitor bundle sizes.\n              </li>\n              <li>\n                <strong>Q: What's the best way to configure the CLI for a team project?</strong><br>\n                A: Establish standardized configuration in <code>angular.json</code>, set up defaults for schematics, create npm scripts for common CLI commands, document CLI usage in the project README, and consider creating custom schematics for project-specific patterns.\n              </li>\n              <li>\n                <strong>Q: How do I enable SSR and hydration in Angular 19?</strong><br>\n                A: For new projects, use <code>ng new my-app --ssr</code>. For existing projects, run <code>ng add @angular/ssr</code>. To enable hydration during development, use <code>ng serve --hydration</code>. For partial hydration, configure components with the <code>hydration: 'manual'</code> option.\n              </li>\n              <li>\n                <strong>Q: Can I create a library with Angular 19 CLI?</strong><br>\n                A: Yes, use <code>ng generate library my-lib</code> to create a library project within your workspace. Angular 19 enhances library support with standalone component compatibility, improved tree-shaking, and better API documentation generation.\n              </li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n            <ul class=\"list-disc pl-4\">\n              <li><a href=\"https://angular.dev/tools/cli/overview\" class=\"text-sky-400 hover:underline\">Angular CLI Documentation</a></li>\n              <li><a href=\"https://angular.dev/guide/workspace-config\" class=\"text-sky-400 hover:underline\">Workspace Configuration Guide</a></li>\n              <li><a href=\"https://angular.dev/tools/cli/schematics\" class=\"text-sky-400 hover:underline\">Schematics Overview</a></li>\n              <li><a href=\"https://angular.dev/guide/standalone-components\" class=\"text-sky-400 hover:underline\">Standalone Components Guide</a></li>\n              <li><a href=\"https://github.com/angular/angular-cli\" class=\"text-sky-400 hover:underline\">Angular CLI GitHub Repository</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-collection',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './collection.component.html',\n  styleUrls: ['./collection.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CollectionComponent extends UnsubscribeService {\n\n  selectedTab = 1;\n\n  @ViewChild('schematicoCodeEl') schematicoCodeEl?: ElementRef;\n  @ViewChild('customCollectionCodeEl') customCollectionCodeEl?: ElementRef;\n  @ViewChild('workspaceCodeEl') workspaceCodeEl?: ElementRef;\n  @ViewChild('v19EnhancementsCodeEl') v19EnhancementsCodeEl?: ElementRef;\n\n  // Code examples\n  schematicoCode = `// Using Angular's built-in Schematic Collection\nng generate @schematics/angular:component my-component\nng generate @schematics/angular:service my-service\nng generate @schematics/angular:directive my-directive\nng generate @schematics/angular:pipe my-pipe\nng generate @schematics/angular:class my-class\nng generate @schematics/angular:interface my-interface\nng generate @schematics/angular:enum my-enum`;\n\n  customCollectionCode = `// Creating a custom schematics collection\n{\n  \"$schema\": \"../node_modules/@angular-devkit/schematics/collection-schema.json\",\n  \"schematics\": {\n    \"my-component\": {\n      \"description\": \"Generate a component with custom template\",\n      \"factory\": \"./my-component/index#myComponent\",\n      \"schema\": \"./my-component/schema.json\"\n    },\n    \"feature-module\": {\n      \"description\": \"Generate a feature module with routing\",\n      \"factory\": \"./feature-module/index#featureModule\",\n      \"schema\": \"./feature-module/schema.json\"\n    }\n  }\n}`;\n\n  workspaceCode = `// Angular workspace collection configuration in angular.json\n{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"newProjectRoot\": \"projects\",\n  \"projects\": {\n    \"my-app\": {\n      \"projectType\": \"application\",\n      \"schematics\": {\n        \"@schematics/angular:component\": {\n          \"style\": \"scss\",\n          \"standalone\": true,\n          \"changeDetection\": \"OnPush\",\n          \"skipTests\": true\n        },\n        \"@schematics/angular:application\": {\n          \"strict\": true\n        },\n        \"my-custom-collection:feature-module\": {\n          \"routing\": true,\n          \"lazy\": true\n        }\n      },\n      // ... other configuration\n    }\n  }\n}`;\n\n  v19EnhancementsCode = `// Angular 19 enhanced collection usage with parameter destructuring\n// In your custom schematic rule\nexport function myCustomSchematic(options: MySchematicOptions): Rule {\n  return (tree: Tree, context: SchematicContext) => {\n    // Angular 19 adds enhanced typed options\n    const { name, path, module, flat, skipImport } = options;\n\n    // Typesafe configurations\n    if (module && !skipImport) {\n      // Add import to module\n    }\n\n    // Enhanced template usage\n    const templateSource = apply(url('./files'), [\n      applyTemplates({\n        ...options,\n        ...strings,\n        name: strings.dasherize(name),\n        // Angular 19 supports inline function interpolation\n        className: () => strings.classify(name),\n        // New in Angular 19: path normalization helpers\n        normalizedPath: getNormalizedPath(path, name)\n      }),\n      // Improved destination path handling in Angular 19\n      move(determineTargetPath(options))\n    ]);\n\n    return mergeWith(templateSource)(tree, context);\n  };\n}\n\n// Using the schematic with new Angular 19 CLI enhancements\nng generate my-custom-collection:feature --name=dashboard --path=modules --dry-run`;\n\n  ngOnInit() {\n    // Any initialization code if needed\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Collections in Angular\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Collections</span>\n      in Angular are organized sets of schematics that provide a way to generate or modify code in a standardized way. They act as libraries of blueprints for generating components, services, and other parts of Angular applications. In Angular 19, collections have received significant enhancements for improved type safety, better error handling, and more flexible template generation.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <div *ngIf=\"selectedTab === 1\">\n          <!-- Notes Tab -->\n          <p>Core Concepts of Angular Collections</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>What is a Collection?</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>A collection is a package of schematics defining a set of code generators</li>\n                <li>Collections can be published to npm for easy sharing and reuse</li>\n                <li>Each collection defines one or more schematics with specific functionality</li>\n                <li>Angular CLI uses collections to generate code (components, services, modules, etc.)</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Built-in Collections</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Angular provides official collections like <code>@schematics/angular</code></li>\n                <li>These collections contain blueprints for standard Angular elements</li>\n                <li>Used when running commands like <code>ng generate component</code></li>\n                <button (click)=\"schematicoCodeEl.hidden = !schematicoCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #schematicoCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"schematicoCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Custom Collections</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Developers can create their own schematics collections</li>\n                <li>Custom collections enable standardized code generation specific to a project or organization</li>\n                <li>Defined in a <code>collection.json</code> file at the package root</li>\n                <li>Each schematic has its own schema and implementation</li>\n                <button (click)=\"customCollectionCodeEl.hidden = !customCollectionCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #customCollectionCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>json</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"customCollectionCode\" [languages]=\"['json']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Workspace Configuration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Angular workspaces can configure default schematic collections</li>\n                <li>Default options for schematics can be set in <code>angular.json</code></li>\n                <li>This allows for consistent code generation across projects</li>\n                <button (click)=\"workspaceCodeEl.hidden = !workspaceCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #workspaceCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>json</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"workspaceCode\" [languages]=\"['json']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Angular 19 Collection Enhancements</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Enhanced Typings and Error Handling</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Improved TypeScript interfaces for schematic options</li>\n                <li>Better error messages for misconfigured schematics</li>\n                <li>Type-safe template generation with stricter checks</li>\n                <li>Enhanced validation of schematic parameters</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Improved CLI Integration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Enhanced discovery and loading of third-party collections</li>\n                <li>Better performance when executing schematics</li>\n                <li>More accurate dependency resolution</li>\n                <li>Clearer CLI feedback during schematic execution</li>\n              </ul>\n            </li>\n            <li>\n              <strong>New Rule Helpers and Utilities</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Additional path handling utilities for more flexible file manipulation</li>\n                <li>Enhanced template functions for interpolation</li>\n                <li>New utility functions for common schematic operations</li>\n                <li>Improved testing capabilities for custom schematics</li>\n                <button (click)=\"v19EnhancementsCodeEl.hidden = !v19EnhancementsCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #v19EnhancementsCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"v19EnhancementsCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Key Collection Types in Angular 19</p>\n          <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n            <thead>\n              <tr class=\"bg-gray-800 text-gray-100\">\n                <th class=\"py-3 px-4 text-left\">Collection Type</th>\n                <th class=\"py-3 px-4 text-left\">Purpose</th>\n                <th class=\"py-3 px-4 text-left\">Common Use Cases</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">@schematics/angular</td>\n                <td class=\"py-3 px-4\">Core Angular generators</td>\n                <td class=\"py-3 px-4\">Components, services, modules, interfaces</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">@angular/material</td>\n                <td class=\"py-3 px-4\">Material UI components</td>\n                <td class=\"py-3 px-4\">Material components, navigation, theming</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">@ngrx/schematics</td>\n                <td class=\"py-3 px-4\">NgRx state management</td>\n                <td class=\"py-3 px-4\">Stores, actions, reducers, effects</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">@nx/angular</td>\n                <td class=\"py-3 px-4\">Nx workspace generators</td>\n                <td class=\"py-3 px-4\">Libraries, applications, e2e tests</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Custom collections</td>\n                <td class=\"py-3 px-4\">Organization-specific code generators</td>\n                <td class=\"py-3 px-4\">Company-standard components, business logic</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div *ngIf=\"selectedTab === 2\">\n          <!-- Best Practices Tab -->\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong class=\"text-sky-400\">Define Default Collection in Workspace</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Set a default collection in <code>angular.json</code> to avoid specifying it in every command</li>\n                <li>Configure with <code>\"cli\": {{ '{' }} \"defaultCollection\": \"my-collection\" {{ '}' }}</code></li>\n                <li>Use this for organization-specific or project-specific standardization</li>\n                <li>Ensure all developers know which collection is being used as default</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Configure Default Options for Common Schematics</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Set default options for commonly used schematics in <code>angular.json</code></li>\n                <li>Use this to enforce standards like standalone components, OnPush change detection, etc.</li>\n                <li>Include reasonable defaults to reduce repetitive option flags</li>\n                <li>Document any non-standard defaults in project README</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Create Project-Specific Schematics</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>For large or complex projects, create custom schematics for common patterns</li>\n                <li>Build schematics for domain-specific components or features</li>\n                <li>Standardize layout components, forms, tables, or other recurring patterns</li>\n                <li>Include documentation generation in custom schematics</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Use Prompts for Better Developer Experience</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Implement <code>x-prompt</code> properties in schematic schemas for interactive options</li>\n                <li>Provide clear descriptions and defaults for all options</li>\n                <li>Use enums or predefined lists for constrained choices</li>\n                <li>Implement validation to prevent common mistakes</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Test Custom Schematics Thoroughly</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use Angular's schematic testing utilities for unit tests</li>\n                <li>Test with multiple option combinations to ensure all paths work</li>\n                <li>Create integration tests that validate generated code compiles</li>\n                <li>Run a full <code>ng build</code> after generating with custom schematics</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Version and Document Collections</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Maintain thorough documentation for custom collections</li>\n                <li>Include detailed descriptions of each schematic and its options</li>\n                <li>Follow semantic versioning for published collections</li>\n                <li>Document migration paths when making breaking changes</li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n\n        <div *ngIf=\"selectedTab === 3\">\n          <!-- Pros and Cons Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Using Collections</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Consistency</strong>: Ensures consistent code structure across a project or organization</li>\n              <li><strong>Productivity</strong>: Significantly speeds up repetitive code creation</li>\n              <li><strong>Standards Enforcement</strong>: Enforces architectural and code style standards</li>\n              <li><strong>Reduced Boilerplate</strong>: Minimizes manual creation of boilerplate code</li>\n              <li><strong>Knowledge Sharing</strong>: Encapsulates best practices in reusable generators</li>\n              <li><strong>Onboarding</strong>: Makes it easier for new developers to follow project patterns</li>\n              <li><strong>Customization</strong>: Can be tailored to specific business or project needs</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Challenges with Collections</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Learning Curve</strong>: Creating custom schematics requires specific knowledge</li>\n              <li><strong>Maintenance</strong>: Custom collections need ongoing maintenance as Angular evolves</li>\n              <li><strong>Over-Engineering</strong>: Risk of creating overly complex schematics for simple tasks</li>\n              <li><strong>Testing Complexity</strong>: Testing schematics thoroughly can be challenging</li>\n              <li><strong>Rigidity</strong>: Poorly designed schematics can be too restrictive</li>\n              <li><strong>Version Compatibility</strong>: Collections may need updates for new Angular versions</li>\n              <li><strong>Documentation Overhead</strong>: Custom collections require thorough documentation</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">When to Use Collections in Angular 19</p>\n            <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n              <thead>\n                <tr class=\"bg-gray-800 text-gray-100\">\n                  <th class=\"py-3 px-4 text-left\">Scenario</th>\n                  <th class=\"py-3 px-4 text-left\">Recommendation</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Small/personal projects</td>\n                  <td class=\"py-3 px-4\">Use built-in Angular collections; customize defaults if needed</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Medium-sized projects</td>\n                  <td class=\"py-3 px-4\">Configure workspace defaults; consider third-party collections</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Large enterprise applications</td>\n                  <td class=\"py-3 px-4\">Create custom collections for organization-specific patterns</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Open-source libraries</td>\n                  <td class=\"py-3 px-4\">Include schematics to simplify integration for consumers</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Monorepos/multi-project workspaces</td>\n                  <td class=\"py-3 px-4\">Use specialized collections like Nx to manage project relationships</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div *ngIf=\"selectedTab === 4\">\n          <!-- Related Topics Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Angular CLI</strong>: Command-line tool that uses collections for code generation</li>\n              <li><strong>Schematics</strong>: Individual blueprints within collections that define what code to generate</li>\n              <li><strong>Workspace Configuration</strong>: Settings in angular.json that control collection behavior</li>\n              <li><strong>Builders</strong>: Similar to schematics but focused on build processes rather than code generation</li>\n              <li><strong>Angular DevKit</strong>: Framework underlying schematics and builders</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Collection FAQ</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li>\n                <strong>Q: How do I create a custom collection in Angular 19?</strong><br>\n                A: Start by installing the schematic utilities: <code>npm i -g @angular-devkit/schematics-cli</code>. Then create a new collection with <code>schematics blank --name=my-collection</code>. Add schematics to the collection by defining them in the collection.json file and implementing their logic in TypeScript files.\n              </li>\n              <li>\n                <strong>Q: How do I set a default collection for my workspace?</strong><br>\n                A: Add <code>\"cli\": {{ '{' }} \"defaultCollection\": \"my-collection\" {{ '}' }}</code> to your angular.json file at the root level. This will make the specified collection the default for all ng generate commands in the workspace.\n              </li>\n              <li>\n                <strong>Q: Can I combine multiple collections?</strong><br>\n                A: Yes, you can use schematics from different collections by explicitly specifying the collection name: <code>ng generate @my-collection/my-schematic</code>. You can also create a meta-collection that re-exports schematics from other collections.\n              </li>\n              <li>\n                <strong>Q: How do I update my custom collection for Angular 19?</strong><br>\n                A: Check for API changes in the Angular DevKit libraries. Update your dependencies to be compatible with Angular 19. Test your schematics with the new version to ensure they work correctly. Leverage the new typings and utilities introduced in Angular 19.\n              </li>\n              <li>\n                <strong>Q: What's new for collections in Angular 19?</strong><br>\n                A: Angular 19 improves schematic typings, adds new utility functions for path handling, enhances error reporting, and improves performance of schematic execution. It also adds better support for ESM modules and improves the testing utilities for schematics.\n              </li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n            <ul class=\"list-disc pl-4\">\n              <li><a href=\"https://angular.dev/tools/cli/schematics\" class=\"text-sky-400 hover:underline\">Angular Schematics Guide</a></li>\n              <li><a href=\"https://angular.dev/tools/cli/generators\" class=\"text-sky-400 hover:underline\">Angular Generators Documentation</a></li>\n              <li><a href=\"https://angular.dev/guide/workspace-config\" class=\"text-sky-400 hover:underline\">Workspace Configuration Guide</a></li>\n              <li><a href=\"https://github.com/angular/angular-cli\" class=\"text-sky-400 hover:underline\">Angular CLI GitHub Repository</a></li>\n              <li><a href=\"https://nx.dev/angular/schematics/create-a-library\" class=\"text-sky-400 hover:underline\">Nx Schematics for Large Scale Applications</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { ChangeDetectionStrategy, Component, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-component',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './component.component.html',\n  styleUrls: ['./component.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ComponentComponent extends UnsubscribeService {\n\n  selectedTab = 1;\n\n  @ViewChild('basicComponentCodeEl') basicComponentCodeEl?: ElementRef;\n  @ViewChild('signalComponentCodeEl') signalComponentCodeEl?: ElementRef;\n  @ViewChild('lifecycleHooksCodeEl') lifecycleHooksCodeEl?: ElementRef;\n  @ViewChild('deferredComponentsCodeEl') deferredComponentsCodeEl?: ElementRef;\n\n  // Code examples\n  basicComponentCode = `import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-greeting',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div class=\"greeting\">\n      <h2>Hello, {{ name }}!</h2>\n      <p>Welcome to Angular 19</p>\n      <button (click)=\"updateName()\">Change Name</button>\n    </div>\n  \\`,\n  styles: [\\`\n    .greeting {\n      padding: 1rem;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n    }\n    h2 {\n      color: #333;\n    }\n    button {\n      background: #0066cc;\n      color: white;\n      border: none;\n      padding: 0.5rem 1rem;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n  \\`]\n})\nexport class GreetingComponent {\n  name = 'World';\n\n  updateName() {\n    this.name = 'Angular Developer';\n  }\n}`;\n\n  signalComponentCode = `import { Component, signal, computed, effect } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-counter',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: \\`\n    <div class=\"counter-container\">\n      <h2>Signal-based Counter</h2>\n\n      <p>Current count: {{ count() }}</p>\n      <p>Doubled value: {{ doubled() }}</p>\n\n      <div class=\"actions\">\n        <button (click)=\"increment()\">Increment</button>\n        <button (click)=\"decrement()\">Decrement</button>\n        <button (click)=\"reset()\">Reset</button>\n      </div>\n\n      <div class=\"custom-value\">\n        <label for=\"customValue\">Set custom value:</label>\n        <input\n          id=\"customValue\"\n          type=\"number\"\n          [ngModel]=\"count()\"\n          (ngModelChange)=\"updateCount($event)\"\n        >\n      </div>\n\n      <div class=\"log-container\">\n        <h3>Effect Log:</h3>\n        <ul>\n          <li *ngFor=\"let entry of logEntries()\">{{ entry }}</li>\n        </ul>\n      </div>\n    </div>\n  \\`,\n  styles: [\\`\n    .counter-container {\n      padding: 1rem;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      max-width: 400px;\n    }\n    .actions {\n      display: flex;\n      gap: 0.5rem;\n      margin: 1rem 0;\n    }\n    button {\n      background: #0066cc;\n      color: white;\n      border: none;\n      padding: 0.5rem 1rem;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .custom-value {\n      margin: 1rem 0;\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n    }\n    input {\n      padding: 0.5rem;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n    }\n    .log-container {\n      margin-top: 1rem;\n      border-top: 1px solid #eee;\n      padding-top: 1rem;\n    }\n  \\`]\n})\nexport class CounterComponent {\n  // Signal state\n  count = signal<number>(0);\n  logEntries = signal<string[]>([]);\n\n  // Computed value derived from state\n  doubled = computed(() => this.count() * 2);\n\n  constructor() {\n    // Effect to log changes\n    effect(() => {\n      const currentCount = this.count();\n      const newEntry = \\`Count changed to: \\${currentCount} at \\${new Date().toLocaleTimeString()}\\`;\n      this.logEntries.update(entries => [newEntry, ...entries.slice(0, 4)]);\n    });\n  }\n\n  increment() {\n    this.count.update(value => value + 1);\n  }\n\n  decrement() {\n    this.count.update(value => value - 1);\n  }\n\n  reset() {\n    this.count.set(0);\n  }\n\n  updateCount(newValue: number) {\n    this.count.set(newValue);\n  }\n}`;\n\n  lifecycleHooksCode = `import { Component, OnInit, OnDestroy, AfterViewInit,\n  OnChanges, SimpleChanges, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-lifecycle-demo',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div class=\"lifecycle-container\">\n      <h2>Component Lifecycle Demo</h2>\n      <p>Current status: {{ status }}</p>\n      <div class=\"log-container\">\n        <h3>Lifecycle Log:</h3>\n        <ul>\n          <li *ngFor=\"let entry of lifecycleLog\" [class.highlighted]=\"entry.includes('ngOnInit')\">\n            {{ entry }}\n          </li>\n        </ul>\n      </div>\n      <button (click)=\"triggerChange()\">Trigger Change</button>\n    </div>\n  \\`,\n  styles: [\\`\n    .lifecycle-container {\n      padding: 1rem;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      max-width: 500px;\n    }\n    .log-container {\n      max-height: 200px;\n      overflow-y: auto;\n      border: 1px solid #eee;\n      padding: 0.5rem;\n      margin: 1rem 0;\n    }\n    ul {\n      list-style-type: none;\n      padding: 0;\n    }\n    li {\n      padding: 0.25rem 0;\n      border-bottom: 1px solid #f5f5f5;\n    }\n    li.highlighted {\n      background-color: #fffde7;\n      font-weight: bold;\n    }\n    button {\n      background: #0066cc;\n      color: white;\n      border: none;\n      padding: 0.5rem 1rem;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n  \\`]\n})\nexport class LifecycleDemoComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input() name: string = 'Component';\n  status: string = 'Initializing';\n  lifecycleLog: string[] = [];\n  private intervalId: any;\n\n  constructor() {\n    this.logLifecycleEvent('constructor');\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.logLifecycleEvent(\\`ngOnChanges - name: \\${changes['name']?.currentValue}\\`);\n  }\n\n  ngOnInit(): void {\n    this.logLifecycleEvent('ngOnInit');\n    this.status = 'Running';\n\n    // Set up an interval to demonstrate component activity\n    this.intervalId = setInterval(() => {\n      this.logLifecycleEvent('Interval tick');\n    }, 5000);\n  }\n\n  ngAfterViewInit(): void {\n    this.logLifecycleEvent('ngAfterViewInit');\n  }\n\n  ngOnDestroy(): void {\n    this.logLifecycleEvent('ngOnDestroy');\n    clearInterval(this.intervalId);\n    this.status = 'Destroyed';\n  }\n\n  triggerChange(): void {\n    this.name = \\`Updated \\${new Date().toLocaleTimeString()}\\`;\n    this.logLifecycleEvent(\\`Manual update triggered\\`);\n  }\n\n  private logLifecycleEvent(event: string): void {\n    const timestamp = new Date().toLocaleTimeString();\n    this.lifecycleLog = [\\`\\${timestamp}: \\${event}\\`, ...this.lifecycleLog.slice(0, 9)];\n  }\n}`;\n\n  deferredComponentsCode = `import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-deferred-demo',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div class=\"deferred-container\">\n      <h2>Deferred Loading Demo</h2>\n      <p>This component demonstrates Angular 19's deferrable views</p>\n\n      <div class=\"controls\">\n        <button (click)=\"showCharts = !showCharts\">\n          {{ showCharts ? 'Hide' : 'Show' }} Charts\n        </button>\n      </div>\n\n      @defer (when showCharts) {\n        <div class=\"chart-container\">\n          <h3>Heavy Chart Component Loaded</h3>\n          <div class=\"chart-placeholder\">\n            <!-- Chart would render here -->\n            <div class=\"chart\"></div>\n            <p>Chart data loaded at: {{ currentTime }}</p>\n          </div>\n        </div>\n      } @loading {\n        <div class=\"loading-indicator\">\n          <p>Loading charts...</p>\n          <div class=\"spinner\"></div>\n        </div>\n      } @placeholder {\n        <div class=\"placeholder\">\n          <p>Click the button to load charts</p>\n        </div>\n      } @error {\n        <div class=\"error\">\n          <p>Error loading charts component!</p>\n        </div>\n      }\n    </div>\n  \\`,\n  styles: [\\`\n    .deferred-container {\n      padding: 1rem;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      max-width: 600px;\n    }\n    .controls {\n      margin: 1rem 0;\n    }\n    button {\n      background: #0066cc;\n      color: white;\n      border: none;\n      padding: 0.5rem 1rem;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    .chart-container {\n      padding: 1rem;\n      border: 1px solid #eee;\n      border-radius: 4px;\n      margin-top: 1rem;\n    }\n    .chart-placeholder {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n    .chart {\n      width: 300px;\n      height: 200px;\n      background: linear-gradient(to right, #e66465, #9198e5);\n      border-radius: 4px;\n    }\n    .loading-indicator {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 2rem;\n    }\n    .spinner {\n      width: 40px;\n      height: 40px;\n      border: 4px solid #f3f3f3;\n      border-top: 4px solid #3498db;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n    .placeholder, .error {\n      padding: 2rem;\n      text-align: center;\n      border: 1px dashed #ccc;\n      border-radius: 4px;\n    }\n    .error {\n      border-color: #e74c3c;\n      color: #e74c3c;\n    }\n  \\`]\n})\nexport class DeferredDemoComponent {\n  showCharts = false;\n\n  get currentTime(): string {\n    return new Date().toLocaleTimeString();\n  }\n}`;\n\n  ngOnInit() {\n    // Any initialization code if needed\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Components in Angular\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Components</span>\n      are the fundamental building blocks of Angular applications. They encapsulate the template, styles, and behavior for a specific part of the UI. Each component defines a TypeScript class with application logic and is associated with an HTML template that defines the view. In Angular 19, components have been enhanced with improved performance, streamlined APIs, and tighter integration with signals and other modern Angular features.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <div *ngIf=\"selectedTab === 1\">\n          <!-- Notes Tab -->\n          <p>Component Fundamentals</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Basic Component Structure</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Components consist of a TypeScript class with the <code>@Component</code> decorator</li>\n                <li>Every component needs a template (inline or external) defining its view</li>\n                <li>Components can include styles, which are encapsulated by default</li>\n                <li>Modern components are typically standalone and self-contained</li>\n                <button (click)=\"basicComponentCodeEl.hidden = !basicComponentCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #basicComponentCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"basicComponentCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Component Decorators and Metadata</strong>\n              <ul class=\"list-disc pl-4\">\n                <li><code>@Component</code> defines the core metadata for a component</li>\n                <li>Selector specifies the custom HTML tag used to instantiate the component</li>\n                <li>Templates can be defined inline with <code>template</code> or externally with <code>templateUrl</code></li>\n                <li>Similarly, styles can be defined with <code>styles</code> or <code>styleUrls</code></li>\n                <li>The <code>changeDetection</code> property controls how Angular detects changes</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Component Lifecycle</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Components have a well-defined lifecycle with specific hooks</li>\n                <li>Angular calls these hooks at specific times during component execution</li>\n                <li>Common hooks include <code>ngOnInit</code>, <code>ngOnChanges</code>, and <code>ngOnDestroy</code></li>\n                <li>Lifecycle hooks allow implementing custom logic at different stages</li>\n                <button (click)=\"lifecycleHooksCodeEl.hidden = !lifecycleHooksCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #lifecycleHooksCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"lifecycleHooksCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Angular 19 Component Enhancements</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Signal-based Components</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Angular 19 fully integrates signals into the component architecture</li>\n                <li>Signal-based inputs simplify component communication</li>\n                <li>Signal-based reactive state management is more efficient than traditional approaches</li>\n                <li>Change detection is more granular and performance is improved</li>\n                <button (click)=\"signalComponentCodeEl.hidden = !signalComponentCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #signalComponentCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"signalComponentCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Deferrable Components &amp; Views</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Angular 19 introduces the <code>@defer</code> block for lazy-loading component content</li>\n                <li>Deferred content loads only when specified conditions are met</li>\n                <li>Loading, placeholder, and error states can be specified</li>\n                <li>This feature enhances initial page load performance</li>\n                <button (click)=\"deferredComponentsCodeEl.hidden = !deferredComponentsCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #deferredComponentsCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"deferredComponentsCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Hydration Improvements</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Components can now specify their hydration strategy</li>\n                <li>Partial hydration allows for more efficient client-side reuse of server-rendered components</li>\n                <li>Components can be marked for manual hydration in performance-critical applications</li>\n                <li>These features result in faster First Contentful Paint and Time to Interactive metrics</li>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Component Types in Angular 19</p>\n          <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n            <thead>\n              <tr class=\"bg-gray-800 text-gray-100\">\n                <th class=\"py-3 px-4 text-left\">Component Type</th>\n                <th class=\"py-3 px-4 text-left\">Description</th>\n                <th class=\"py-3 px-4 text-left\">Angular 19 Features</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Standalone Components</td>\n                <td class=\"py-3 px-4\">Self-contained, don't require NgModules</td>\n                <td class=\"py-3 px-4\">Improved performance, simplified dependencies</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Presentational Components</td>\n                <td class=\"py-3 px-4\">Focus on UI, receive data via inputs</td>\n                <td class=\"py-3 px-4\">Signal inputs, performance optimizations</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Container Components</td>\n                <td class=\"py-3 px-4\">Handle data fetching and state management</td>\n                <td class=\"py-3 px-4\">Improved signal-based state management</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Dynamic Components</td>\n                <td class=\"py-3 px-4\">Created and loaded at runtime</td>\n                <td class=\"py-3 px-4\">Enhanced dynamic component loading API</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Layout Components</td>\n                <td class=\"py-3 px-4\">Structure other components, often use content projection</td>\n                <td class=\"py-3 px-4\">Enhanced content projection performance</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Page/Route Components</td>\n                <td class=\"py-3 px-4\">Top-level components for routes</td>\n                <td class=\"py-3 px-4\">Improved SSR integration and hydration</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Deferrable Components</td>\n                <td class=\"py-3 px-4\">Components with lazy loaded parts</td>\n                <td class=\"py-3 px-4\">New @defer syntax for conditional loading</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div *ngIf=\"selectedTab === 2\">\n          <!-- Best Practices Tab -->\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong class=\"text-sky-400\">Keep Components Focused and Cohesive</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Each component should have a single responsibility</li>\n                <li>Break large components into smaller, reusable ones</li>\n                <li>Follow the Single Responsibility Principle</li>\n                <li>Keep component templates under 100 lines for maintainability</li>\n                <li>Consider using sub-components for complex UI sections</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Optimize Change Detection</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use OnPush change detection for performance improvements</li>\n                <li>Leverage signals for reactive, granular updates</li>\n                <li>Make components immutable where possible</li>\n                <li>Avoid deep object mutations that can trigger change detection</li>\n                <li>Use async pipe in templates to automatically handle subscriptions</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Implement Smart Component Architecture</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Separate components into presentational and container types</li>\n                <li>Presentational components should be pure and focus on display</li>\n                <li>Container components should handle data fetching and business logic</li>\n                <li>Use inputs/outputs for component communication</li>\n                <li>Consider signal-based inputs for improved performance</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Manage Component Lifecycle Appropriately</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Implement <code>ngOnInit</code> for initialization logic</li>\n                <li>Clean up resources in <code>ngOnDestroy</code> to prevent memory leaks</li>\n                <li>Use <code>ngOnChanges</code> to react to input changes</li>\n                <li>Be cautious with <code>ngAfterViewInit</code> to avoid ExpressionChangedAfterItHasBeenCheckedError</li>\n                <li>Consider extending from UnsubscribeService or similar to manage subscriptions</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Enhance Performance with Angular 19 Features</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Use standalone components to reduce bundle size</li>\n                <li>Implement the @defer directive for lazy loading expensive content</li>\n                <li>Consider partial hydration for SSR components</li>\n                <li>Leverage signals for reactive state management</li>\n                <li>Implement zoneless change detection when appropriate</li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n\n        <div *ngIf=\"selectedTab === 3\">\n          <!-- Pros and Cons Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Angular Components</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Encapsulation</strong>: Components bundle HTML, CSS, and TypeScript together</li>\n              <li><strong>Reusability</strong>: Components can be reused throughout the application</li>\n              <li><strong>Testability</strong>: Components are easy to test in isolation</li>\n              <li><strong>Maintainability</strong>: Component architecture makes code more maintainable</li>\n              <li><strong>Structure</strong>: Components provide clear structure to applications</li>\n              <li><strong>Performance</strong>: Angular 19's signal-based components offer improved performance</li>\n              <li><strong>Modularity</strong>: Components can be easily split, combined, or refactored</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Challenges with Angular Components</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Learning Curve</strong>: Component architecture can be complex for newcomers</li>\n              <li><strong>Boilerplate</strong>: Components can require significant setup code</li>\n              <li><strong>Over-decomposition</strong>: Breaking into too many small components can increase complexity</li>\n              <li><strong>Communication Complexity</strong>: Component communication can become complex in large apps</li>\n              <li><strong>Change Detection Pitfalls</strong>: OnPush and other optimizations can introduce subtle bugs</li>\n              <li><strong>Bundle Size</strong>: Many components can increase overall bundle size if not lazy-loaded</li>\n              <li><strong>Lifecycle Management</strong>: Complex lifecycle hooks can be difficult to reason about</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Angular 19 Component Improvements Over Previous Versions</p>\n            <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n              <thead>\n                <tr class=\"bg-gray-800 text-gray-100\">\n                  <th class=\"py-3 px-4 text-left\">Feature</th>\n                  <th class=\"py-3 px-4 text-left\">Before Angular 19</th>\n                  <th class=\"py-3 px-4 text-left\">Angular 19 Improvements</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">State Management</td>\n                  <td class=\"py-3 px-4\">NgRx, RxJS, or manual state handling</td>\n                  <td class=\"py-3 px-4\">First-class signals integration for reactive state</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Change Detection</td>\n                  <td class=\"py-3 px-4\">Zone.js based or OnPush strategy</td>\n                  <td class=\"py-3 px-4\">Signal-based fine-grained updates, zoneless support</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Component Loading</td>\n                  <td class=\"py-3 px-4\">Route-level lazy loading only</td>\n                  <td class=\"py-3 px-4\">Component-level lazy loading with @defer</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Component Input</td>\n                  <td class=\"py-3 px-4\">Basic @Input() declaration</td>\n                  <td class=\"py-3 px-4\">Signal inputs with transform functions</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Server Rendering</td>\n                  <td class=\"py-3 px-4\">Basic SSR with full hydration</td>\n                  <td class=\"py-3 px-4\">Improved SSR with partial and manual hydration</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div *ngIf=\"selectedTab === 4\">\n          <!-- Related Topics Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Directives</strong>: Add behavior to existing elements or components</li>\n              <li><strong>Pipes</strong>: Transform data for display within component templates</li>\n              <li><strong>Services</strong>: Share data and logic between components</li>\n              <li><strong>Dependency Injection</strong>: Provide services and other dependencies to components</li>\n              <li><strong>Signals</strong>: Reactive primitives for component state management</li>\n              <li><strong>Content Projection</strong>: Allow components to receive and display external content</li>\n              <li><strong>View Encapsulation</strong>: Control how component styles affect the application</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Component FAQ</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li>\n                <strong>Q: How do I decide between regular and signal-based inputs in Angular 19?</strong><br>\n                A: Use signal-based inputs when you need fine-grained reactivity and better change detection performance. Regular inputs are simpler and sufficient for basic cases where the input doesn't change frequently or if backward compatibility is required. Signal inputs are especially valuable for performance-critical components or those with complex data transformations.\n              </li>\n              <li>\n                <strong>Q: How can I optimize component performance in Angular 19?</strong><br>\n                A: Use OnPush change detection, implement signal-based state, leverage the defer directive for lazy loading expensive content, use pure pipes for calculations, avoid excessive DOM manipulation, keep templates simple, and consider implementing zoneless change detection for performance-critical components. Also, ensure proper unsubscribing from observables to prevent memory leaks.\n              </li>\n              <li>\n                <strong>Q: What's the best way to communicate between components in Angular 19?</strong><br>\n                A: For parent-child: use inputs and outputs, with signal inputs for better performance. For unrelated components: use services with signals or observables, or use a state management pattern. The new signal-based state makes communication simpler by allowing components to directly observe state changes in a performant way. For simple state, a service with signals is often sufficient; for complex state, consider SignalStore or NgRx.\n              </li>\n              <li>\n                <strong>Q: When should I use standalone components vs. module-based components?</strong><br>\n                A: In Angular 19, standalone components are the recommended approach for most use cases. They're simpler to manage, easier to test, and allow for better tree-shaking. Use standalone components for new development and when refactoring existing code. Module-based components are primarily useful for legacy applications or when integrating with libraries that still require NgModules.\n              </li>\n              <li>\n                <strong>Q: How do I handle dynamic component creation in Angular 19?</strong><br>\n                A: Angular 19 provides an improved API for dynamic component creation. Use ViewContainerRef's createComponent method, which now works well with standalone components. For advanced cases, you can use ComponentFactoryResolver. Component lazy loading can also be handled with the new defer block, which provides a cleaner way to conditionally load components with loading, error, and placeholder states.\n              </li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n            <ul class=\"list-disc pl-4\">\n              <li><a href=\"https://angular.dev/guide/components\" class=\"text-sky-400 hover:underline\">Angular Components Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/signals\" class=\"text-sky-400 hover:underline\">Angular Signals Documentation</a></li>\n              <li><a href=\"https://angular.dev/guide/defer\" class=\"text-sky-400 hover:underline\">Deferrable Views Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/standalone-components\" class=\"text-sky-400 hover:underline\">Standalone Components Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/change-detection\" class=\"text-sky-400 hover:underline\">Change Detection in Angular</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, ElementRef, OnInit, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\n// import { UnsubscribeService } from '../../../../shared/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-configuration',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.scss'],\n  // providers: [UnsubscribeService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConfigurationComponent implements OnInit {\n  selectedTab = 1;\n\n  @ViewChild('angularJsonCodeEl') angularJsonCodeEl!: ElementRef;\n  @ViewChild('environmentConfigCodeEl') environmentConfigCodeEl!: ElementRef;\n  @ViewChild('workspaceConfigCodeEl') workspaceConfigCodeEl!: ElementRef;\n  @ViewChild('modernBundlingCodeEl') modernBundlingCodeEl!: ElementRef;\n\n  angularJsonCode = `{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  \"version\": 1,\n  \"cli\": {\n    \"packageManager\": \"npm\",\n    \"analytics\": false,\n    \"schematicCollections\": [\"@angular/v19-schematics\"]\n  },\n  \"projects\": {\n    \"my-app\": {\n      \"projectType\": \"application\",\n      \"schematics\": {\n        \"@schematics/angular:component\": {\n          \"style\": \"scss\",\n          \"standalone\": true,\n          \"changeDetection\": \"OnPush\",\n          \"skipTests\": true\n        },\n        \"@schematics/angular:directive\": {\n          \"standalone\": true\n        }\n      },\n      \"root\": \"\",\n      \"sourceRoot\": \"src\",\n      \"prefix\": \"app\",\n      \"architect\": {\n        \"build\": {\n          \"builder\": \"@angular-devkit/build-angular:application\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app\",\n            \"index\": \"src/index.html\",\n            \"browser\": \"src/main.ts\",\n            \"polyfills\": [\"zone.js\"],\n            \"tsConfig\": \"tsconfig.app.json\",\n            \"inlineStyleLanguage\": \"scss\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.scss\"],\n            \"scripts\": [],\n            \"optimization\": false,\n            \"budgets\": [\n              {\n                \"type\": \"initial\",\n                \"maximumWarning\": \"500kb\",\n                \"maximumError\": \"1mb\"\n              },\n              {\n                \"type\": \"anyComponentStyle\",\n                \"maximumWarning\": \"2kb\",\n                \"maximumError\": \"4kb\"\n              }\n            ]\n          },\n          \"configurations\": {\n            \"production\": {\n              \"budgets\": [\n                {\n                  \"type\": \"initial\",\n                  \"maximumWarning\": \"500kb\",\n                  \"maximumError\": \"1mb\"\n                },\n                {\n                  \"type\": \"anyComponentStyle\",\n                  \"maximumWarning\": \"2kb\",\n                  \"maximumError\": \"4kb\"\n                }\n              ],\n              \"fileReplacements\": [\n                {\n                  \"replace\": \"src/environments/environment.ts\",\n                  \"with\": \"src/environments/environment.production.ts\"\n                }\n              ],\n              \"outputHashing\": \"all\",\n              \"optimization\": true,\n              \"sourceMap\": false\n            },\n            \"development\": {\n              \"optimization\": false,\n              \"extractLicenses\": false,\n              \"sourceMap\": true\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        },\n        \"serve\": {\n          \"builder\": \"@angular-devkit/build-angular:dev-server\",\n          \"configurations\": {\n            \"production\": {\n              \"buildTarget\": \"my-app:build:production\"\n            },\n            \"development\": {\n              \"buildTarget\": \"my-app:build:development\"\n            }\n          },\n          \"defaultConfiguration\": \"development\"\n        },\n        \"test\": {\n          \"builder\": \"@angular-devkit/build-angular:karma\",\n          \"options\": {\n            \"polyfills\": [\"zone.js\", \"zone.js/testing\"],\n            \"tsConfig\": \"tsconfig.spec.json\",\n            \"inlineStyleLanguage\": \"scss\",\n            \"assets\": [\"src/favicon.ico\", \"src/assets\"],\n            \"styles\": [\"src/styles.scss\"],\n            \"scripts\": []\n          }\n        },\n        \"server\": {\n          \"builder\": \"@angular-devkit/build-angular:server\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app/server\",\n            \"main\": \"server.ts\",\n            \"tsConfig\": \"tsconfig.server.json\",\n            \"optimization\": false,\n            \"sourceMap\": true\n          },\n          \"configurations\": {\n            \"production\": {\n              \"outputHashing\": \"media\",\n              \"optimization\": true,\n              \"sourceMap\": false\n            },\n            \"development\": {\n              \"optimization\": false,\n              \"sourceMap\": true\n            }\n          },\n          \"defaultConfiguration\": \"production\"\n        }\n      }\n    }\n  }\n}`;\n\n  environmentConfigCode = `// environment.ts - base environment file\nexport const environment = {\n  production: false,\n  apiUrl: 'https://api.example.com/dev',\n  features: {\n    enableExperimentalFeatures: true,\n    useSignals: true,\n    enableDeferredComponents: true\n  },\n  auth: {\n    clientId: 'your-dev-client-id',\n    authority: 'https://login.example.com/dev'\n  },\n  logging: {\n    level: 'debug',\n    enableConsoleLogging: true\n  }\n};\n\n// environment.production.ts - production environment\nexport const environment = {\n  production: true,\n  apiUrl: 'https://api.example.com/prod',\n  features: {\n    enableExperimentalFeatures: false,\n    useSignals: true,\n    enableDeferredComponents: true\n  },\n  auth: {\n    clientId: 'your-prod-client-id',\n    authority: 'https://login.example.com/prod'\n  },\n  logging: {\n    level: 'error',\n    enableConsoleLogging: false\n  }\n};\n\n// Using environment values in a service\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = environment.production\n    ? environment.apiUrl\n    : environment.apiUrl + '/v1';\n\n  constructor() {\n    if (environment.features.enableExperimentalFeatures) {\n      console.log('Experimental features enabled');\n    }\n  }\n\n  // Service methods...\n}`;\n\n  workspaceConfigCode = `// tsconfig.json\n{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist/out-tsc\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"noImplicitOverride\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"downlevelIteration\": true,\n    \"experimentalDecorators\": true,\n    \"moduleResolution\": \"node\",\n    \"importHelpers\": true,\n    \"target\": \"ES2022\",\n    \"module\": \"ES2022\",\n    \"useDefineForClassFields\": false,\n    \"lib\": [\n      \"ES2022\",\n      \"dom\"\n    ],\n    \"paths\": {\n      \"@core/*\": [\"src/app/core/*\"],\n      \"@shared/*\": [\"src/app/shared/*\"],\n      \"@env/*\": [\"src/environments/*\"]\n    }\n  },\n  \"angularCompilerOptions\": {\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n}\n\n// package.json (partial)\n{\n  \"name\": \"my-angular19-app\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"build:prod\": \"ng build --configuration production\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\",\n    \"lint\": \"eslint 'src/**/*.{ts,html}'\",\n    \"e2e\": \"ng e2e\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^19.0.0\",\n    \"@angular/common\": \"^19.0.0\",\n    \"@angular/compiler\": \"^19.0.0\",\n    \"@angular/core\": \"^19.0.0\",\n    \"@angular/forms\": \"^19.0.0\",\n    \"@angular/platform-browser\": \"^19.0.0\",\n    \"@angular/platform-browser-dynamic\": \"^19.0.0\",\n    \"@angular/router\": \"^19.0.0\",\n    \"rxjs\": \"~7.8.0\",\n    \"tslib\": \"^2.3.0\",\n    \"zone.js\": \"~0.14.0\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^19.0.0\",\n    \"@angular/cli\": \"^19.0.0\",\n    \"@angular/compiler-cli\": \"^19.0.0\",\n    \"@types/jasmine\": \"~4.3.0\",\n    \"jasmine-core\": \"~4.6.0\",\n    \"karma\": \"~6.4.0\",\n    \"karma-chrome-launcher\": \"~3.2.0\",\n    \"karma-coverage\": \"~2.2.0\",\n    \"karma-jasmine\": \"~5.1.0\",\n    \"karma-jasmine-html-reporter\": \"~2.1.0\",\n    \"typescript\": \"~5.2.2\"\n  }\n}`;\n\n  modernBundlingCode = `// vite.config.ts - Modern bundling configuration for an Angular app\nimport { defineConfig } from 'vite';\nimport analog from '@analogjs/platform';\nimport { vavite } from 'vavite';\n\n// https://vitejs.dev/config/\nexport default defineConfig(({mode}) => {\n  const isProduction = mode === 'production';\n\n  return {\n    publicDir: 'src/assets',\n    build: {\n      target: 'es2022',\n      outDir: 'dist',\n      rollupOptions: {\n        // Externalize Angular deps for better build times in dev\n        external: isProduction ? [] : [\n          '@angular/core',\n          '@angular/common',\n          '@angular/router'\n        ]\n      }\n    },\n    resolve: {\n      mainFields: ['module']\n    },\n    plugins: [\n      analog({\n        ssrBuildDir: './dist/ssr',\n        prerender: {\n          routes: ['/'],\n          sitemap: { host: 'https://example.com' },\n        },\n        nitro: {\n          preset: 'vercel',\n          // Customize server-side rendering options\n          serverRoutes: ['/api/**'],\n          externals: { inline: ['zone.js/node'] }\n        },\n        vite: {\n          inlineStylesExtension: 'scss'\n        }\n      }),\n      vavite({\n        serverEntry: '/server/main.ts',\n        serveClientAssetsInDev: true\n      })\n    ],\n    optimizeDeps: {\n      include: ['@angular/common', '@angular/core'],\n      exclude: ['@analogjs/router', '@analogjs/platform']\n    },\n    ssr: {\n      noExternal: [\n        '@angular/**',\n        '@analogjs/**',\n        'rxjs/**',\n      ]\n    }\n  };\n});\n\n// Angular specific configuration for enabling partial hydration\n// app/config.ts\nimport { ApplicationConfig } from '@angular/core';\nimport { provideHttpClient } from '@angular/common/http';\nimport { provideClientHydration, withNoHttpTransferCache } from '@angular/platform-browser';\nimport { provideFileRouter, withInMemoryScrolling } from '@analogjs/router';\nimport { withViewTransitions } from '@angular/router';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideFileRouter(\n      withInMemoryScrolling({ scrollPositionRestoration: 'enabled' }),\n      withViewTransitions()\n    ),\n    provideHttpClient(),\n    provideClientHydration(withNoHttpTransferCache())\n  ]\n};`;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Configuration in Angular\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Configuration</span>\n      refers to the various settings and options that control how an Angular application is built, served, and deployed. This includes workspace configuration, build options, environment-specific settings, and more. In Angular 19, configuration has been enhanced with improved flexibility, better performance optimization options, and streamlined workflows for modern development approaches like Server-Side Rendering (SSR) and partial hydration.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <div *ngIf=\"selectedTab === 1\">\n          <!-- Notes Tab -->\n          <p>Core Configuration Files and Options</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>angular.json</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>The primary workspace configuration file for Angular projects</li>\n                <li>Configures build options, server settings, testing, and more</li>\n                <li>Defines defaults for generated components and other artifacts</li>\n                <li>Updated in Angular 19 to support the new application builder by default</li>\n                <button (click)=\"angularJsonCodeEl.hidden = !angularJsonCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #angularJsonCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>json</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"angularJsonCode\" [languages]=\"['json']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>Environment Configuration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Environment-specific settings stored in separate TypeScript files</li>\n                <li>Allows for different configuration in development, testing, and production</li>\n                <li>Typically includes API endpoints, feature flags, and other runtime settings</li>\n                <li>Angular 19 supports improved environment file swapping during builds</li>\n                <button (click)=\"environmentConfigCodeEl.hidden = !environmentConfigCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #environmentConfigCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"environmentConfigCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n            <li>\n              <strong>TypeScript and Package Configuration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>tsconfig.json controls TypeScript compiler options</li>\n                <li>package.json manages dependencies and defines scripts</li>\n                <li>Both work together to define the development and build environment</li>\n                <li>Updated in Angular 19 for better modern JavaScript support</li>\n                <button (click)=\"workspaceConfigCodeEl.hidden = !workspaceConfigCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #workspaceConfigCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"workspaceConfigCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Angular 19 Configuration Enhancements</p>\n          <ul class=\"list-disc pl-4 text-sm\">\n            <li>\n              <strong>Application Builder</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>New default builder with improved bundling and optimization</li>\n                <li>Enhanced support for code splitting and lazy loading</li>\n                <li>Better tree-shaking for smaller production bundles</li>\n                <li>Integrated support for SSR and hydration configuration</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Standalone-first Configuration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Default configuration optimized for standalone components</li>\n                <li>Simplified setup for new projects without NgModules</li>\n                <li>Improved tree-shaking for standalone-based applications</li>\n                <li>Streamlined configuration for modern Angular development</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Modern Bundling Options</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Angular 19 adds improved support for ESM and modern bundlers</li>\n                <li>Vite integration through AnalogJS is now better supported</li>\n                <li>New options for optimizing Initial and Largest Contentful Paint</li>\n                <li>Enhanced configuration for partial hydration and island architecture</li>\n                <button (click)=\"modernBundlingCodeEl.hidden = !modernBundlingCodeEl.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n                <span #modernBundlingCodeEl hidden copyToClipboard>\n                  <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n                    <span>typescript</span>\n                    <span class=\"copy-button-wrapper bg-gray-700\"></span>\n                  </div>\n                  <pre>\n                    <code [highlight]=\"modernBundlingCode\" [languages]=\"['typescript']\"></code>\n                  </pre>\n                </span>\n              </ul>\n            </li>\n          </ul>\n\n          <br>\n          <br>\n\n          <p>Configuration Types in Angular 19</p>\n          <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n            <thead>\n              <tr class=\"bg-gray-800 text-gray-100\">\n                <th class=\"py-3 px-4 text-left\">Configuration Type</th>\n                <th class=\"py-3 px-4 text-left\">Purpose</th>\n                <th class=\"py-3 px-4 text-left\">Angular 19 Enhancements</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Workspace Configuration</td>\n                <td class=\"py-3 px-4\">Project structure, builders, and defaults</td>\n                <td class=\"py-3 px-4\">Improved standalone defaults, new application builder</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Build Configuration</td>\n                <td class=\"py-3 px-4\">Optimization, bundling, and output settings</td>\n                <td class=\"py-3 px-4\">Better tree-shaking, ESM support, smaller bundles</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">SSR Configuration</td>\n                <td class=\"py-3 px-4\">Server-side rendering settings</td>\n                <td class=\"py-3 px-4\">Simplified setup, partial hydration options</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">TypeScript Configuration</td>\n                <td class=\"py-3 px-4\">Language and compiler options</td>\n                <td class=\"py-3 px-4\">Updated defaults for modern JavaScript features</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Testing Configuration</td>\n                <td class=\"py-3 px-4\">Test runner and framework settings</td>\n                <td class=\"py-3 px-4\">Better integration with modern testing patterns</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Environment Configuration</td>\n                <td class=\"py-3 px-4\">Runtime settings for different environments</td>\n                <td class=\"py-3 px-4\">Enhanced file replacement, feature flag support</td>\n              </tr>\n              <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n                <td class=\"py-3 px-4\">Dependency Configuration</td>\n                <td class=\"py-3 px-4\">Package dependencies and versions</td>\n                <td class=\"py-3 px-4\">Streamlined peer dependencies, better migrations</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div *ngIf=\"selectedTab === 2\">\n          <!-- Best Practices Tab -->\n          <ol class=\"list-decimal pl-4 text-sm\">\n            <li>\n              <strong class=\"text-sky-400\">Organize Configuration by Environment</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Create separate environment files for development, testing, and production</li>\n                <li>Use environment-specific API endpoints and feature flags</li>\n                <li>Configure file replacements in angular.json for environment switching</li>\n                <li>Keep sensitive configuration out of source control</li>\n                <li>Consider using environment variables for deployment-specific settings</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Optimize Build Configuration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Set appropriate budget thresholds to monitor bundle sizes</li>\n                <li>Enable production optimizations like minification and tree-shaking</li>\n                <li>Configure code splitting for optimal loading performance</li>\n                <li>Use the new Angular 19 application builder for better defaults</li>\n                <li>Enable source maps in development but disable in production</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Implement Proper TypeScript Configuration</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Enable strict type checking for better code quality</li>\n                <li>Set proper target and module settings for browser compatibility</li>\n                <li>Configure paths aliases for cleaner imports</li>\n                <li>Use strict template checking for better component safety</li>\n                <li>Configure Angular-specific compiler options appropriately</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Streamline Dependency Management</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Lock versions for consistent builds across environments</li>\n                <li>Separate dev dependencies from runtime dependencies</li>\n                <li>Define custom scripts for common development workflows</li>\n                <li>Consider using nx or npm workspaces for monorepo management</li>\n                <li>Regularly update dependencies with ng update</li>\n              </ul>\n            </li>\n            <li>\n              <strong class=\"text-sky-400\">Configure for Modern Angular Features</strong>\n              <ul class=\"list-disc pl-4\">\n                <li>Enable standalone component defaults in schematics configuration</li>\n                <li>Configure SSR and hydration options for improved performance</li>\n                <li>Set up proper bundling for signal-based components</li>\n                <li>Configure module federation if building micro frontends</li>\n                <li>Use the latest ESM and zone-less configurations where appropriate</li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n\n        <div *ngIf=\"selectedTab === 3\">\n          <!-- Pros and Cons Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Angular Configuration System</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Centralized Management</strong>: Core configuration in a single angular.json file</li>\n              <li><strong>Environment Support</strong>: Easy switching between development and production settings</li>\n              <li><strong>Build Optimization</strong>: Powerful options for bundle size reduction and performance</li>\n              <li><strong>Convention over Configuration</strong>: Sensible defaults reduce boilerplate</li>\n              <li><strong>Extensibility</strong>: Support for custom builders and configuration extensions</li>\n              <li><strong>TypeScript Integration</strong>: Deep integration with TypeScript configuration</li>\n              <li><strong>Tooling Support</strong>: Excellent IDE and command-line tooling for configuration</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Challenges with Angular Configuration</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Complexity</strong>: Many configuration files and options can be overwhelming</li>\n              <li><strong>Learning Curve</strong>: Understanding all configuration options requires time</li>\n              <li><strong>Verbosity</strong>: Some configuration requires significant boilerplate</li>\n              <li><strong>Migration Challenges</strong>: Configuration changes between versions can be difficult</li>\n              <li><strong>Limited Runtime Configuration</strong>: Some settings require rebuilding the application</li>\n              <li><strong>Interdependencies</strong>: Configuration options often depend on each other</li>\n              <li><strong>Build Performance</strong>: Complex configuration can lead to slower builds</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Angular 19 Configuration Improvements Over Previous Versions</p>\n            <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n              <thead>\n                <tr class=\"bg-gray-800 text-gray-100\">\n                  <th class=\"py-3 px-4 text-left\">Feature</th>\n                  <th class=\"py-3 px-4 text-left\">Before Angular 19</th>\n                  <th class=\"py-3 px-4 text-left\">Angular 19 Improvements</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Build System</td>\n                  <td class=\"py-3 px-4\">browser and server builders</td>\n                  <td class=\"py-3 px-4\">New unified application builder with better defaults</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">Component Generation</td>\n                  <td class=\"py-3 px-4\">NgModule-based defaults</td>\n                  <td class=\"py-3 px-4\">Standalone and signal-based defaults</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Server-Side Rendering</td>\n                  <td class=\"py-3 px-4\">Complex, separate configuration</td>\n                  <td class=\"py-3 px-4\">Integrated SSR and hydration configuration</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-950\">\n                  <td class=\"py-3 px-4\">TypeScript Integration</td>\n                  <td class=\"py-3 px-4\">Older ECMAScript targets</td>\n                  <td class=\"py-3 px-4\">Modern ES2022 targets with better typing</td>\n                </tr>\n                <tr class=\"border-b border-gray-700 bg-gray-900\">\n                  <td class=\"py-3 px-4\">Bundling Options</td>\n                  <td class=\"py-3 px-4\">Limited optimization controls</td>\n                  <td class=\"py-3 px-4\">Enhanced tree-shaking and code splitting options</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div *ngIf=\"selectedTab === 4\">\n          <!-- Related Topics Tab -->\n          <div class=\"text-sm\">\n            <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li><strong>Angular CLI</strong>: Command-line tool that uses the configuration to build and serve apps</li>\n              <li><strong>Workspace</strong>: Overall project structure defined by configuration</li>\n              <li><strong>Schematics</strong>: Generation templates that use and extend configuration</li>\n              <li><strong>Builders</strong>: Tools that implement the build processes defined in configuration</li>\n              <li><strong>SSR (Server-Side Rendering)</strong>: Features configured in angular.json</li>\n              <li><strong>Dependency Injection</strong>: Providers often configured through environment files</li>\n              <li><strong>Code Splitting</strong>: Configured through build options for performance</li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Configuration FAQ</p>\n            <ul class=\"list-disc pl-4 mb-6\">\n              <li>\n                <strong>Q: How do I configure my Angular 19 app for server-side rendering?</strong><br>\n                A: In Angular 19, SSR configuration is simplified. Use the application builder in angular.json and set the \"ssr\" option with an entry point to your server file. To enable SSR in an existing project, run <code>ng add &#64;angular/ssr</code>, which will update your configuration automatically. The new configuration also supports partial hydration through additional settings in the component or application configuration.\n              </li>\n              <li>\n                <strong>Q: What's the best way to handle environment-specific configuration in Angular 19?</strong><br>\n                A: Create multiple environment files (environment.ts, environment.development.ts, environment.production.ts) in the src/environments directory. Configure file replacements in the angular.json \"fileReplacements\" section under the appropriate build configuration. For sensitive values like API keys, consider using environment variables with a .env file (not committed to source control) and the @angular-builders/custom-webpack builder to inject them at build time.\n              </li>\n              <li>\n                <strong>Q: How can I optimize bundle size in Angular 19 through configuration?</strong><br>\n                A: Use the budgets configuration in angular.json to set size limits and get warnings/errors when exceeded. Enable build optimizer and production mode. Configure proper code splitting through the route configuration with lazy loading. Use the new application builder which has better tree-shaking. Consider setting up module federation for micro frontends. In Angular 19, you can also leverage the new standalone defaults and defer blocks for further optimization.\n              </li>\n              <li>\n                <strong>Q: What TypeScript configuration is recommended for Angular 19 projects?</strong><br>\n                A: For Angular 19, use TypeScript 5.2 or newer with \"target\": \"ES2022\" and \"module\": \"ES2022\". Enable strict type checking with \"strict\": true. Configure Angular-specific options in angularCompilerOptions with strictTemplates and strictInjectionParameters set to true for better type safety. The recommended lib settings include ES2022 and DOM. For better debugging, enable sourceMap in development configurations.\n              </li>\n              <li>\n                <strong>Q: How do I migrate my configuration from older Angular versions to Angular 19?</strong><br>\n                A: Use <code>ng update &#64;angular/cli &#64;angular/core</code> to automatically update configuration files to Angular 19 format. Review the browser builder to application builder migration. Update TypeScript configuration to use ES2022. Check for standalone component defaults in schematics. Review SSR configuration if you're using it, as the API has changed. The Angular update tool will handle most migrations automatically, but some manual adjustments might be needed, especially for custom builders or complex setups.\n              </li>\n            </ul>\n\n            <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n            <ul class=\"list-disc pl-4\">\n              <li><a href=\"https://angular.dev/guide/workspace-config\" class=\"text-sky-400 hover:underline\">Angular Workspace Configuration Guide</a></li>\n              <li><a href=\"https://angular.dev/guide/build\" class=\"text-sky-400 hover:underline\">Angular Build Configuration</a></li>\n              <li><a href=\"https://angular.dev/guide/deployment\" class=\"text-sky-400 hover:underline\">Deployment Configuration</a></li>\n              <li><a href=\"https://angular.dev/guide/ssr\" class=\"text-sky-400 hover:underline\">Server-Side Rendering Configuration</a></li>\n              <li><a href=\"https://angular.dev/tools/cli/configs\" class=\"text-sky-400 hover:underline\">CLI Configuration Reference</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { CommonModule } from '@angular/common';\nimport { Component, ViewChild, TemplateRef, ElementRef, AfterViewInit, OnInit } from '@angular/core';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-content-projection',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './content-projection.component.html',\n  styleUrls: ['./content-projection.component.scss'],\n  providers: [UnsubscribeService]\n})\nexport class ContentProjectionComponent implements OnInit, AfterViewInit {\n  selectedTab = 'notes';\n\n  @ViewChild('notesTemplate', { static: true }) notesTemplate!: TemplateRef<any>;\n  @ViewChild('bestPracticesTemplate', { static: true }) bestPracticesTemplate!: TemplateRef<any>;\n  @ViewChild('prosConsTemplate', { static: true }) prosConsTemplate!: TemplateRef<any>;\n  @ViewChild('relatedTopicsTemplate', { static: true }) relatedTopicsTemplate!: TemplateRef<any>;\n\n  @ViewChild('basicExampleEl', { static: false }) basicExampleEl!: ElementRef;\n  @ViewChild('usageExampleEl', { static: false }) usageExampleEl!: ElementRef;\n  @ViewChild('contentChildExampleEl', { static: false }) contentChildExampleEl!: ElementRef;\n  @ViewChild('ngContainerExampleEl', { static: false }) ngContainerExampleEl!: ElementRef;\n\n  // Visibility state for code examples\n  showBasicExample = false;\n  showUsageExample = false;\n  showContentChildExample = false;\n  showNgContainerExample = false;\n\n  // Code example strings for syntax highlighting\n  basicExample = '';\n  usageExample = '';\n  contentChildExample = '';\n  ngContainerExample = '';\n\n  constructor(private unsub: UnsubscribeService) {}\n\n  ngOnInit(): void {\n    this.initializeCodeExamples();\n  }\n\n  ngAfterViewInit(): void {\n    // No need to update DOM element content as we're using the string variables directly\n  }\n\n  // Toggle methods for code examples\n  toggleBasicExample(): void {\n    this.showBasicExample = !this.showBasicExample;\n  }\n\n  toggleUsageExample(): void {\n    this.showUsageExample = !this.showUsageExample;\n  }\n\n  toggleContentChildExample(): void {\n    this.showContentChildExample = !this.showContentChildExample;\n  }\n\n  toggleNgContainerExample(): void {\n    this.showNgContainerExample = !this.showNgContainerExample;\n  }\n\n  private initializeCodeExamples(): void {\n    this.basicExample = `// card.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  template: \\`\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  \\`,\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent {}`;\n\n    this.usageExample = `<!-- Using the card component -->\n<app-card>\n  <h2 card-header>Card Title</h2>\n  <p>This is the main content of the card.</p>\n  <p>You can add any elements here.</p>\n  <div card-footer>\n    <button>Action</button>\n  </div>\n</app-card>`;\n\n    this.contentChildExample = `// Using ContentChild and ContentChildren\nimport { Component, ContentChild, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\nimport { TabComponent } from './tab.component';\n\n@Component({\n  selector: 'app-tabs',\n  template: \\`\n    <div class=\"tabs-header\">\n      <ul>\n        <li *ngFor=\"let tab of tabs\"\n            [class.active]=\"tab.active\"\n            (click)=\"selectTab(tab)\">\n          {{ tab.title }}\n        </li>\n      </ul>\n    </div>\n    <div class=\"tabs-body\">\n      <ng-content></ng-content>\n    </div>\n  \\`\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabComponent) tabs!: QueryList<TabComponent>;\n\n  ngAfterContentInit() {\n    // Set the first tab as active if none is active\n    if (this.tabs.length && !this.tabs.find(tab => tab.active)) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  selectTab(selectedTab: TabComponent) {\n    this.tabs.forEach(tab => {\n      tab.active = (tab === selectedTab);\n    });\n  }\n}`;\n\n    this.ngContainerExample = `<!-- Deferred content projection with @defer -->\n<app-dashboard>\n  <ng-container dashboard-main>\n    <h2>Dashboard Overview</h2>\n\n    @defer (on viewport) {\n      <app-heavy-chart [data]=\"chartData\"></app-heavy-chart>\n    } @loading {\n      <div class=\"loading-placeholder\">Chart loading...</div>\n    }\n  </ng-container>\n\n  <ng-container dashboard-sidebar>\n    @defer (when sidebarVisible) {\n      <app-sidebar-navigation [items]=\"navItems\"></app-sidebar-navigation>\n    }\n  </ng-container>\n</app-dashboard>`;\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Content Projection in Angular\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Content Projection</span>\n      is a powerful pattern in Angular that allows you to insert content from a parent component into specific locations in a child component. In Angular 19, content projection has been enhanced with improved performance, tighter integration with signals, better SSR support, and advanced lazy-loading capabilities through the new &#64;defer block.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 'notes'\" [class.text-rose-300]=\"selectedTab==='notes'\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 'bestPractices'\" [class.text-rose-300]=\"selectedTab==='bestPractices'\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 'prosCons'\" [class.text-rose-300]=\"selectedTab==='prosCons'\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 'relatedTopics'\" [class.text-rose-300]=\"selectedTab==='relatedTopics'\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <ng-container *ngSwitchCase=\"'bestPractices'\">\n            <ng-container *ngTemplateOutlet=\"bestPracticesTemplate\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'prosCons'\">\n            <ng-container *ngTemplateOutlet=\"prosConsTemplate\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"'relatedTopics'\">\n            <ng-container *ngTemplateOutlet=\"relatedTopicsTemplate\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesTemplate\"></ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesTemplate>\n  <p>Core Concepts of Content Projection</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Basic Content Projection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>The <code>ng-content</code> element is the core mechanism for projecting content</li>\n        <li>Content between component tags is inserted at the <code>ng-content</code> location</li>\n        <li>Projected content maintains the context of its parent component</li>\n        <li>Enables building reusable, customizable components with flexible layouts</li>\n        <button (click)=\"toggleBasicExample()\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n        <span #basicExampleEl [hidden]=\"!showBasicExample\">\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n          <pre>\n            <code [highlight]=\"basicExample\" [languages]=\"['typescript']\"></code>\n          </pre>\n        </span>\n      </ul>\n    </li>\n    <li>\n      <strong>Multi-slot Projection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>Multiple <code>ng-content</code> elements can be used with the <code>select</code> attribute</li>\n        <li>The <code>select</code> attribute takes CSS selectors to match specific content</li>\n        <li>Common selectors include element names, CSS classes, and attributes</li>\n        <li>Enables complex component layouts with multiple insertion points</li>\n        <button (click)=\"toggleUsageExample()\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n        <span #usageExampleEl [hidden]=\"!showUsageExample\">\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>html</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n          <pre>\n            <code [highlight]=\"usageExample\" [languages]=\"['html']\"></code>\n          </pre>\n        </span>\n      </ul>\n    </li>\n    <li>\n      <strong>Accessing Projected Content</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>The <code>&#64;ContentChild</code> and <code>&#64;ContentChildren</code> decorators provide access to projected content</li>\n        <li>Content queries are initialized in the <code>ngAfterContentInit</code> lifecycle hook</li>\n        <li>The <code>QueryList.changes</code> Observable tracks changes to projected content</li>\n        <li>Enables components to interact with their projected content programmatically</li>\n        <button (click)=\"toggleContentChildExample()\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n        <span #contentChildExampleEl [hidden]=\"!showContentChildExample\">\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n          <pre>\n            <code [highlight]=\"contentChildExample\" [languages]=\"['typescript']\"></code>\n          </pre>\n        </span>\n      </ul>\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Content Projection Enhancements</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Integration with Signal Components</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>Better performance with signal-based components and content projection</li>\n        <li>More efficient change detection for projected content</li>\n        <li>Signal-based content queries for reactive access to projected content</li>\n        <li>Improved developer experience when working with dynamic projections</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Deferred Content Projection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>Support for the new <code>&#64;defer</code> block within projected content</li>\n        <li>Lazy-loading of heavy projected content for better performance</li>\n        <li>Conditional loading strategies for projected content</li>\n        <li>Placeholder and loading states for deferred projected content</li>\n        <button (click)=\"toggleNgContainerExample()\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n        <span #ngContainerExampleEl [hidden]=\"!showNgContainerExample\">\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>html</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n          <pre>\n            <code [highlight]=\"ngContainerExample\" [languages]=\"['html']\"></code>\n          </pre>\n        </span>\n      </ul>\n    </li>\n    <li>\n      <strong>Server-Side Rendering Improvements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>Enhanced hydration support for projected content</li>\n        <li>Partial hydration options for content projections</li>\n        <li>Better serialization of projected content during SSR</li>\n        <li>Improved performance metrics for content projection in SSR applications</li>\n      </ul>\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Content Projection Patterns in Angular 19</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Pattern</th>\n        <th class=\"py-3 px-4 text-left\">Description</th>\n        <th class=\"py-3 px-4 text-left\">Use Case</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Single-slot Projection</td>\n        <td class=\"py-3 px-4\">Basic projection with a single <code>ng-content</code></td>\n        <td class=\"py-3 px-4\">Simple container components, wrappers</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Multi-slot Projection</td>\n        <td class=\"py-3 px-4\">Multiple <code>ng-content</code> elements with selectors</td>\n        <td class=\"py-3 px-4\">Layout components, cards, panels</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Conditional Projection</td>\n        <td class=\"py-3 px-4\">Projecting content based on conditions</td>\n        <td class=\"py-3 px-4\">Tabs, accordions, toggle panels</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Deferred Projection</td>\n        <td class=\"py-3 px-4\">Lazy-loading projected content with <code>&#64;defer</code></td>\n        <td class=\"py-3 px-4\">Performance-critical components, heavy content</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Template Outlet Projection</td>\n        <td class=\"py-3 px-4\">Using <code>ngTemplateOutlet</code> for dynamic projection</td>\n        <td class=\"py-3 px-4\">Dynamic lists, configurable interfaces</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Signal-based Projection</td>\n        <td class=\"py-3 px-4\">Projecting content with signal integration</td>\n        <td class=\"py-3 px-4\">Reactive components, performance-optimized UIs</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestPracticesTemplate>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Design Clear Component APIs</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>Define clear projection slots with descriptive selectors</li>\n        <li>Document each projection slot and its purpose</li>\n        <li>Use consistent naming conventions for selectors</li>\n        <li>Consider providing default content for optional slots</li>\n        <li>Maintain backward compatibility when updating projection APIs</li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>Use OnPush change detection for components with content projection</li>\n        <li>Leverage the new <code>&#64;defer</code> block for heavy projected content</li>\n        <li>Minimize DOM manipulation of projected content</li>\n        <li>Consider signal-based approaches for dynamic projections</li>\n        <li>Use <code>ng-container</code> to avoid unnecessary DOM elements</li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Smart Selectors</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>Choose appropriate selector types (element, class, attribute)</li>\n        <li>Prefer attribute selectors for clearer intent (e.g., <code>[header]</code>)</li>\n        <li>Avoid overly generic selectors that might match unintended content</li>\n        <li>Consider selector specificity for complex projection scenarios</li>\n        <li>Document the expected structure for multi-slot projections</li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Handle Content Queries Properly</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>Initialize content queries in <code>ngAfterContentInit</code></li>\n        <li>Subscribe to <code>QueryList.changes</code> to react to dynamic changes</li>\n        <li>Unsubscribe from change observables in <code>ngOnDestroy</code></li>\n        <li>Use <code>static: true</code> for content needed in <code>ngOnInit</code></li>\n        <li>Consider using signal-based content queries for better reactivity</li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Structure Component Hierarchies Thoughtfully</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>Design components with clear responsibilities and boundaries</li>\n        <li>Use content projection for UI composition, not just for reusability</li>\n        <li>Create specialized projection components for complex UI patterns</li>\n        <li>Consider the depth of projection (avoid excessive nesting)</li>\n        <li>Manage context carefully between parent and projected content</li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsTemplate>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Advantages of Content Projection</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Component Reusability</strong>: Create highly reusable components with customizable content</li>\n      <li><strong>UI Composition</strong>: Build complex interfaces through component composition</li>\n      <li><strong>Separation of Concerns</strong>: Cleanly separate component structure from content</li>\n      <li><strong>Contextual Integrity</strong>: Projected content retains access to its parent context</li>\n      <li><strong>Flexible Layout Patterns</strong>: Implement advanced UI patterns like cards, tabs, and panels</li>\n      <li><strong>Efficient DOM Structure</strong>: Create clean DOM hierarchies without excessive nesting</li>\n      <li><strong>Enhanced Developer Experience</strong>: More intuitive component APIs and usage patterns</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Challenges with Content Projection</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Learning Curve</strong>: Understanding projection concepts can be challenging for beginners</li>\n      <li><strong>Debugging Complexity</strong>: Issues in projected content can be harder to debug</li>\n      <li><strong>Style Encapsulation Boundaries</strong>: Managing styles across projection boundaries</li>\n      <li><strong>Change Detection Considerations</strong>: Complex change detection interactions with projected content</li>\n      <li><strong>Performance Overhead</strong>: Potential performance costs with deeply nested projections</li>\n      <li><strong>Component API Design Challenges</strong>: Designing intuitive projection patterns requires care</li>\n      <li><strong>Template Constraints</strong>: Some limitations when combining with other Angular features</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Angular 19 Content Projection Improvements</p>\n    <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n      <thead>\n        <tr class=\"bg-gray-800 text-gray-100\">\n          <th class=\"py-3 px-4 text-left\">Feature</th>\n          <th class=\"py-3 px-4 text-left\">Before Angular 19</th>\n          <th class=\"py-3 px-4 text-left\">Angular 19 Improvements</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-b border-gray-700 bg-gray-900\">\n          <td class=\"py-3 px-4\">Performance</td>\n          <td class=\"py-3 px-4\">Zone-based change detection</td>\n          <td class=\"py-3 px-4\">Signal-based change detection for better performance</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950\">\n          <td class=\"py-3 px-4\">Lazy Loading</td>\n          <td class=\"py-3 px-4\">Requires manual implementation</td>\n          <td class=\"py-3 px-4\">Native support through &#64;defer blocks</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900\">\n          <td class=\"py-3 px-4\">SSR Integration</td>\n          <td class=\"py-3 px-4\">Basic hydration</td>\n          <td class=\"py-3 px-4\">Enhanced with partial hydration support</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950\">\n          <td class=\"py-3 px-4\">Type Safety</td>\n          <td class=\"py-3 px-4\">Limited component API type safety</td>\n          <td class=\"py-3 px-4\">Improved type checking for projected content</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900\">\n          <td class=\"py-3 px-4\">Content Queries</td>\n          <td class=\"py-3 px-4\">Observable-based content changes</td>\n          <td class=\"py-3 px-4\">Signal-based content queries for reactivity</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Content Projection vs. Alternative Patterns</p>\n    <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mb-4\">\n      <thead>\n        <tr class=\"bg-gray-800 text-gray-100\">\n          <th class=\"py-3 px-4 text-left\">Consideration</th>\n          <th class=\"py-3 px-4 text-left\">Content Projection</th>\n          <th class=\"py-3 px-4 text-left\">Property Binding</th>\n          <th class=\"py-3 px-4 text-left\">Dynamic Components</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"border-b border-gray-700 bg-gray-900\">\n          <td class=\"py-3 px-4\">Flexibility</td>\n          <td class=\"py-3 px-4\">High</td>\n          <td class=\"py-3 px-4\">Medium</td>\n          <td class=\"py-3 px-4\">High</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950\">\n          <td class=\"py-3 px-4\">Complexity</td>\n          <td class=\"py-3 px-4\">Medium</td>\n          <td class=\"py-3 px-4\">Low</td>\n          <td class=\"py-3 px-4\">High</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900\">\n          <td class=\"py-3 px-4\">Performance</td>\n          <td class=\"py-3 px-4\">Good</td>\n          <td class=\"py-3 px-4\">Excellent</td>\n          <td class=\"py-3 px-4\">Variable</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-950\">\n          <td class=\"py-3 px-4\">Type Safety</td>\n          <td class=\"py-3 px-4\">Medium</td>\n          <td class=\"py-3 px-4\">High</td>\n          <td class=\"py-3 px-4\">Low to Medium</td>\n        </tr>\n        <tr class=\"border-b border-gray-700 bg-gray-900\">\n          <td class=\"py-3 px-4\">Use Case</td>\n          <td class=\"py-3 px-4\">Layout components</td>\n          <td class=\"py-3 px-4\">Data-driven components</td>\n          <td class=\"py-3 px-4\">Highly dynamic UIs</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</ng-template>\n\n<ng-template #relatedTopicsTemplate>\n  <div class=\"text-sm\">\n    <p class=\"font-semibold text-sky-400 mb-2\">Related Angular Concepts</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li><strong>Component Architecture</strong>: Understanding component hierarchies and composition patterns</li>\n      <li><strong>Template Syntax</strong>: Angular's template language and directives</li>\n      <li><strong>Content Queries</strong>: Using <code>&#64;ContentChild</code> and <code>&#64;ContentChildren</code> to access projected content</li>\n      <li><strong>Change Detection</strong>: How changes in projections affect detection strategy</li>\n      <li><strong>Lifecycle Hooks</strong>: Particularly <code>ngAfterContentInit</code> and <code>ngAfterContentChecked</code></li>\n      <li><strong>View Encapsulation</strong>: Styling considerations for projected content</li>\n      <li><strong>Defer Block</strong>: Integration with deferred loading for projected content</li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Content Projection FAQs</p>\n    <ul class=\"list-disc pl-4 mb-6\">\n      <li>\n        <strong>Q: How does content projection work with Angular 19's signal-based components?</strong><br>\n        A: Angular 19 introduces tight integration between signals and content projection. Signal-based components can project content more efficiently due to fine-grained reactivity. When using content projection with signals, change detection becomes more precise, as only the affected parts of the projected content update when signal values change. Additionally, content queries can now be signal-based, providing reactive access to projected content with better performance characteristics.\n      </li>\n      <li>\n        <strong>Q: Can I use the new &#64;defer block with content projection?</strong><br>\n        A: Yes, Angular 19 fully supports using &#64;defer blocks within projected content. This powerful combination allows for lazy-loading portions of projected content based on conditions like visibility, user interaction, or custom triggers. This is particularly useful for performance optimization when projecting heavy content into lightweight container components. The defer block respects the context of the parent component while still being rendered within the child component's structure.\n      </li>\n      <li>\n        <strong>Q: What's the best approach for styling projected content in Angular 19?</strong><br>\n        A: Angular 19 maintains the same view encapsulation principles for projected content. The most effective approach is using the ::ng-deep combinator with :host selectors in the child component to target projected content while limiting the scope. Additionally, consider using CSS custom properties (variables) to allow child components to influence projected content styles without breaking encapsulation. For shared styling, consider utility classes that can be applied to both parent and child contexts.\n      </li>\n      <li>\n        <strong>Q: How do content projection and SSR work together in Angular 19?</strong><br>\n        A: Angular 19 significantly improves the integration between content projection and server-side rendering. The new partial hydration features work seamlessly with projected content, allowing for more efficient client-side rehydration of server-rendered components. Components can now specify which parts of their projected content should be eagerly or lazily hydrated, leading to better performance metrics like First Contentful Paint and Time to Interactive for applications using extensive content projection.\n      </li>\n      <li>\n        <strong>Q: What are the performance considerations for content projection in Angular 19?</strong><br>\n        A: Angular 19 addresses many previous performance concerns with content projection. The signal-based architecture provides more efficient change detection for projected content. Use OnPush change detection strategy for components with projection to minimize unnecessary checks. For complex projections, consider using the &#64;defer block to lazy-load content. Be mindful of projection depth, as deeply nested projections can still impact performance. Finally, use the new DevTools profiling capabilities to identify potential bottlenecks in your projection architecture.\n      </li>\n    </ul>\n\n    <p class=\"font-semibold text-sky-400 mb-2\">Useful Resources</p>\n    <ul class=\"list-disc pl-4\">\n      <li><a href=\"https://angular.dev/guide/components/content-projection\" class=\"text-sky-400 hover:underline\">Angular Content Projection Guide</a></li>\n      <li><a href=\"https://angular.dev/guide/defer\" class=\"text-sky-400 hover:underline\">Angular Defer Block Documentation</a></li>\n      <li><a href=\"https://angular.dev/guide/signals\" class=\"text-sky-400 hover:underline\">Angular Signals Documentation</a></li>\n      <li><a href=\"https://angular.dev/guide/components/lifecycle\" class=\"text-sky-400 hover:underline\">Component Lifecycle Hooks Guide</a></li>\n      <li><a href=\"https://angular.dev/guide/ssr\" class=\"text-sky-400 hover:underline\">Server-side Rendering in Angular</a></li>\n    </ul>\n  </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { catchError, of, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-control-flow',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './control-flow.component.html',\n  styleUrls: ['./control-flow.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ControlFlowComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Define template references for tabs\n  bestRef: any;\n  prosConsRef: any;\n  topicsRef: any;\n\n  // Code examples\n  code_1 = `<!-- Conditional Rendering with @if -->\n<div>\n  @if (user.isAdmin) {\n    <admin-dashboard></admin-dashboard>\n  } @else if (user.isManager) {\n    <manager-dashboard></manager-dashboard>\n  } @else {\n    <user-dashboard></user-dashboard>\n  }\n</div>\n\n<!-- Compared to traditional ngIf -->\n<!-- <div *ngIf=\"user.isAdmin\">\n  <admin-dashboard></admin-dashboard>\n</div>\n<div *ngIf=\"!user.isAdmin && user.isManager\">\n  <manager-dashboard></manager-dashboard>\n</div>\n<div *ngIf=\"!user.isAdmin && !user.isManager\">\n  <user-dashboard></user-dashboard>\n</div> -->`;\n\n  code_2 = `<!-- Iterating with @for -->\n<ul>\n  @for (item of items; track item.id) {\n    <li>{{ item.name }}</li>\n  } @empty {\n    <li>No items available</li>\n  }\n</ul>\n\n<!-- Variables available in @for -->\n<ul>\n  @for (item of items; track item.id; let i = $index, first = $first, last = $last, even = $even, odd = $odd, count = $count) {\n    <li [class.highlighted]=\"first || last\"\n        [class.striped]=\"even\">\n      Item #{{ i + 1 }} of {{ count }}: {{ item.name }}\n    </li>\n  }\n</ul>`;\n\n  code_3 = `<!-- Switch statement with @switch -->\n<div>\n  @switch (userRole) {\n    @case ('admin') {\n      <admin-panel></admin-panel>\n    }\n    @case ('editor') {\n      <editor-tools></editor-tools>\n    }\n    @case ('viewer') {\n      <viewer-display></viewer-display>\n    }\n    @default {\n      <guest-view></guest-view>\n    }\n  }\n</div>\n\n<!-- Compared to traditional ngSwitch -->\n<!-- <div [ngSwitch]=\"userRole\">\n  <admin-panel *ngSwitchCase=\"'admin'\"></admin-panel>\n  <editor-tools *ngSwitchCase=\"'editor'\"></editor-tools>\n  <viewer-display *ngSwitchCase=\"'viewer'\"></viewer-display>\n  <guest-view *ngSwitchDefault></guest-view>\n</div> -->`;\n\n  code_4 = `<!-- Lazy loading with @defer -->\n<section>\n  <header>Always rendered content</header>\n\n  @defer {\n    <!-- Heavy component only loaded when visible or on trigger -->\n    <heavy-data-grid [data]=\"hugeDataset\"></heavy-data-grid>\n  } @loading {\n    <p>Loading data grid...</p>\n  } @error {\n    <p>Error loading component</p>\n  } @placeholder {\n    <p>Data grid will appear here</p>\n  }\n</section>\n\n<!-- Defer with when condition -->\n<div>\n  @defer (when isLoggedIn) {\n    <user-profile></user-profile>\n  }\n</div>\n\n<!-- Defer with prefetching -->\n<div>\n  @defer (on viewport; prefetch on idle) {\n    <feedback-form></feedback-form>\n  }\n</div>`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit(): void {\n    // Load code examples from text files\n    this.http.get('assets/codes/control-flow/notes/code_1.txt', { responseType: 'text' })\n      .pipe(\n        takeUntil(this.toUnsubscribe$),\n        catchError(() => of(this.code_1))\n      )\n      .subscribe(code => this.code_1 = code);\n\n    this.http.get('assets/codes/control-flow/notes/code_2.txt', { responseType: 'text' })\n      .pipe(\n        takeUntil(this.toUnsubscribe$),\n        catchError(() => of(this.code_2))\n      )\n      .subscribe(code => this.code_2 = code);\n\n    this.http.get('assets/codes/control-flow/notes/code_3.txt', { responseType: 'text' })\n      .pipe(\n        takeUntil(this.toUnsubscribe$),\n        catchError(() => of(this.code_3))\n      )\n      .subscribe(code => this.code_3 = code);\n\n    this.http.get('assets/codes/control-flow/notes/code_4.txt', { responseType: 'text' })\n      .pipe(\n        takeUntil(this.toUnsubscribe$),\n        catchError(() => of(this.code_4))\n      )\n      .subscribe(code => this.code_4 = code);\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Built-in Control Flow\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Built-in Control Flow</span>\n      in Angular 19 provides a more efficient and type-safe way to implement conditional rendering, iterating over collections, and switching between different views. This feature is now fully stable in Angular 19, offering significant performance improvements and more intuitive template syntax compared to traditional structural directives.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>Key Features of Built-in Control Flow in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>&#64;if Blocks</strong>:\n      Replaces ngIf with a more efficient and readable syntax for conditional rendering.\n    </li>\n    <li>\n      <strong>&#64;for Blocks</strong>:\n      Replaces ngFor with built-in tracking, better performance, and enhanced syntax for iterating over collections.\n    </li>\n    <li>\n      <strong>&#64;switch Blocks</strong>:\n      Provides a more intuitive way to render different templates based on a given expression.\n    </li>\n    <li>\n      <strong>&#64;defer Blocks</strong>:\n      Enables lazy loading of templates for improved initial loading performance.\n    </li>\n    <li>\n      <strong>&#64;empty Blocks</strong>:\n      Simplifies handling of empty collections in loops.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Enhancements for Control Flow</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Fully Stable Release</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Built-in control flow, introduced as a developer preview in Angular 17, is now fully stable in Angular 19, making it the recommended approach for all production applications.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Improvements</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 further optimizes control flow blocks, resulting in faster rendering, smaller bundles, and improved change detection.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Type Safety</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Better TypeScript integration with improved type checking for variables used inside control flow blocks.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better AOT Compilation</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Control flow blocks are now fully optimized for AOT compilation, allowing for more aggressive tree-shaking and smaller bundles compared to structural directives.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Migration Tools</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 includes improved migration tools that help automatically convert traditional structural directives to the new control flow syntax.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>&#64;if Blocks (Conditional Rendering)</p>\n\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_1\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>&#64;for Blocks (Iterating over Collections)</p>\n\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_2\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>&#64;switch Blocks (Conditional Rendering with Multiple Options)</p>\n\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_3\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>&#64;defer Blocks (Lazy Loading of Templates)</p>\n\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_4\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Common Patterns and Usage</p>\n  <br>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Traditional Directive</th>\n        <th class=\"py-3 px-4 text-left\">Built-in Control Flow</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>*ngIf=\"condition\"</code></td>\n        <td class=\"py-3 px-4\"><code>&#64;if (condition)</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>*ngIf=\"condition; else elseBlock\"</code></td>\n        <td class=\"py-3 px-4\"><code>&#64;if (condition) {{ '{' }} ... {{ '}' }} &#64;else {{ '{' }} ... {{ '}' }}</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>*ngFor=\"let item of items\"</code></td>\n        <td class=\"py-3 px-4\"><code>&#64;for (item of items; track item.id)</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>*ngFor=\"let item of items; index as i\"</code></td>\n        <td class=\"py-3 px-4\"><code>&#64;for (item of items; track $index)</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>[ngSwitch]=\"value\"</code></td>\n        <td class=\"py-3 px-4\"><code>&#64;switch (value)</code></td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use Track Function for Better Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Always Use Track</strong>:\n          Always specify a track function with the &#64;for block to optimize rendering. Use unique identifiers like item IDs when available.\n        </li>\n        <li>\n          <strong>Avoid Using $index as Track</strong>:\n          While $index is available, prefer using a unique identifier for tracking when possible, as it provides better performance for collections that change frequently.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage &#64;empty for Better User Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Handle Empty States</strong>:\n          Always provide an &#64;empty block when using &#64;for to handle empty collections gracefully and improve user experience.\n        </li>\n        <li>\n          <strong>Use Meaningful Empty States</strong>:\n          Instead of just showing \"No items\", provide context-specific empty states that guide users on how to add items or what to expect.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Template Size</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Keep Templates Small</strong>:\n          Break down large templates into smaller components to improve maintainability and performance.\n        </li>\n        <li>\n          <strong>Use Defer for Heavy Content</strong>:\n          Use &#64;defer for content that is heavy or not immediately needed, especially in conjunction with &#64;if and &#64;for blocks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Migration and Compatibility</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Migrate Gradually</strong>:\n          When migrating existing applications, start with newer components or simpler templates before tackling complex ones.\n        </li>\n        <li>\n          <strong>Use Migration Tools</strong>:\n          Leverage Angular's official migration tools to help with the conversion process from structural directives to control flow blocks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Testing Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Test Empty States</strong>:\n          Ensure your tests cover empty collections and other edge cases when using control flow blocks.\n        </li>\n        <li>\n          <strong>Test Lazy Loaded Content</strong>:\n          When using &#64;defer, ensure your tests properly handle the loading and placeholder states.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Improved Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Faster Rendering</span>:\n          Built-in control flow provides more efficient rendering through optimized compilation and change detection.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Smaller Bundle Size</span>:\n          Control flow blocks result in smaller bundle sizes compared to directive-based approaches due to better tree-shaking.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Developer Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Cleaner Syntax</span>:\n          The new syntax is more intuitive and easier to read, especially for complex conditional logic.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better Type Checking</span>:\n          Improved TypeScript integration provides better type checking and autocomplete support.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Optimizations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Automatic Tracking</span>:\n          The &#64;for block requires explicit tracking, which leads to more predictable and efficient rendering.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Lazy Loading</span>:\n          Integration with the &#64;defer block allows for more granular control over when content is loaded.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Future-Proof Development</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Angular's Recommended Approach</span>:\n          As of Angular 19, built-in control flow is fully stable and is now the officially recommended approach for all new development.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better AOT Compatibility</span>:\n          Built for better integration with Angular's AOT compiler, leading to more efficient builds.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Migration Effort</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Learning Curve</span>:\n          Developers familiar with the traditional structural directives need to learn the new syntax.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Codebase Migration</span>:\n          Existing applications may require significant effort to migrate from structural directives to the new control flow blocks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Compatibility Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Library Support</span>:\n          Some third-party libraries may not yet fully support or integrate well with the new control flow syntax.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Mixed Syntax</span>:\n          During migration, applications may have a mix of both syntaxes, which can lead to inconsistency.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Testing Adjustments</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Updated Testing Patterns</span>:\n          Testing strategies and helpers designed for structural directives may need updates to work properly with control flow blocks.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Summary Comparison\n  </p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Aspect</th>\n        <th class=\"py-3 px-4 text-left\">Built-in Control Flow</th>\n        <th class=\"py-3 px-4 text-left\">Structural Directives</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Performance</td>\n        <td class=\"py-3 px-4\">Generally faster with smaller bundle size</td>\n        <td class=\"py-3 px-4\">Less optimized, especially in complex templates</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Syntax</td>\n        <td class=\"py-3 px-4\">Cleaner and more intuitive</td>\n        <td class=\"py-3 px-4\">More verbose, especially for complex logic</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Type Safety</td>\n        <td class=\"py-3 px-4\">Better TypeScript integration</td>\n        <td class=\"py-3 px-4\">Limited type checking in templates</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Legacy Support</td>\n        <td class=\"py-3 px-4\">New feature, requires Angular 17+</td>\n        <td class=\"py-3 px-4\">Supported in all Angular versions</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Ecosystem</td>\n        <td class=\"py-3 px-4\">Growing support in newer libraries</td>\n        <td class=\"py-3 px-4\">Well-established with wide library support</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Future Direction</td>\n        <td class=\"py-3 px-4\">Angular's recommended approach going forward</td>\n        <td class=\"py-3 px-4\">Will be maintained but deprecated in future versions</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Performance Optimization</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Built-in control flow is designed to be more performant than structural directives, with improved change detection and rendering speed.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Performance</strong>:\n          The control flow blocks are compiled differently than structural directives, resulting in smaller bundle sizes and faster rendering times.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Template Syntax</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Built-in control flow introduces a new syntax for writing templates in Angular, moving away from attribute-based directives to block-based structures.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Templates</strong>:\n          The new syntax provides a more intuitive way to write conditions and loops in templates, closer to how they would be written in TypeScript.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Ahead-of-Time (AOT) Compilation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          AOT compilation is a process where Angular templates are compiled during the build process rather than at runtime.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Control Flow</strong>:\n          Built-in control flow is optimized for AOT compilation, allowing for more aggressive optimizations and smaller bundle sizes.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Lazy Loading</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Lazy loading is a technique where parts of an application are loaded only when needed, improving initial load times.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Control Flow</strong>:\n          The &#64;defer block in the control flow syntax provides a built-in way to lazily load parts of a template, integrating well with other control flow blocks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Server-Side Rendering (SSR)</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          SSR is a technique where Angular applications are pre-rendered on the server before being sent to the client.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Control Flow</strong>:\n          Built-in control flow works well with SSR, providing better hydration support and more predictable rendering.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>Angular 19 Updates for Built-in Control Flow</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Full Stability</strong>:\n      Built-in control flow is now fully stable and recommended for all production applications.\n    </li>\n    <li>\n      <strong>Performance Enhancements</strong>:\n      Significant performance improvements over the developer preview in Angular 17, with better change detection and rendering speed.\n    </li>\n    <li>\n      <strong>Enhanced Type Safety</strong>:\n      Improved TypeScript integration for better type checking and autocomplete support.\n    </li>\n    <li>\n      <strong>Migration Tools</strong>:\n      Improved migration tools to help convert existing structural directives to control flow blocks.\n    </li>\n    <li>\n      <strong>Better Error Messages</strong>:\n      More helpful error messages and debugging support for control flow blocks.\n    </li>\n    <li>\n      <strong>IDE Support</strong>:\n      Enhanced IDE support with better syntax highlighting and autocomplete suggestions.\n    </li>\n  </ul>\n</ng-template>\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Custom Element\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Custom Elements</span>\n      in Angular 19 are a way to package Angular components as standard web components (custom elements) that can be used in any HTML page. This feature allows you to create reusable components that work across different frameworks or in applications that don't use a framework at all.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>What are Custom Elements?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Web Components Standard</strong>:\n      Custom Elements are part of the Web Components standard, allowing developers to create new HTML elements.\n    </li>\n    <li>\n      <strong>Framework Agnostic</strong>:\n      Once created, custom elements can be used in any HTML page, regardless of the framework used.\n    </li>\n    <li>\n      <strong>Encapsulated Functionality</strong>:\n      They encapsulate functionality, making it reusable across different applications.\n    </li>\n    <li>\n      <strong>Browser Support</strong>:\n      Modern browsers support custom elements natively, with polyfills available for older browsers.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Creating Custom Elements in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Step 1: Create an Angular Component</strong>:\n      First, create the Angular component you want to convert into a custom element.\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Step 2: Register as Custom Element</strong>:\n      Convert the Angular component to a custom element using Angular's built-in APIs.\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Angular 19 Standalone Components</strong>:\n      In Angular 19, you can use standalone components for a simpler approach.\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Using the Custom Element</strong>:\n      After registration, use your custom element like any other HTML element.\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>html</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ul>\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Keep Components Simple and Focused</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Single Responsibility</strong>:\n          Design custom elements to have a single, well-defined responsibility. This makes them more reusable and easier to maintain.\n        </li>\n        <li>\n          <strong>Minimize Dependencies</strong>:\n          Reduce dependencies on external services or components. If dependencies are necessary, inject them through the custom element's API.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Design a Clean API</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Clear Inputs and Outputs</strong>:\n          Define clear inputs (properties) and outputs (events) for your custom element. Use semantic naming that follows HTML conventions.\n        </li>\n        <li>\n          <strong>Document the API</strong>:\n          Provide documentation for all properties, methods, and events exposed by your custom element.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Handle Lifecycle Properly</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Clean Up Resources</strong>:\n          Ensure proper cleanup in the ngOnDestroy lifecycle hook to prevent memory leaks, especially for components that use observables or event listeners.\n        </li>\n        <li>\n          <strong>Initialize Appropriately</strong>:\n          Use the appropriate lifecycle hooks for initialization (ngOnInit, afterNextRender, etc.) to ensure your component initializes correctly.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize for Performance</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Lazy Loading</strong>:\n          Consider lazy loading custom elements to reduce initial bundle size, especially for elements that aren't immediately needed.\n        </li>\n        <li>\n          <strong>OnPush Change Detection</strong>:\n          Use OnPush change detection strategy to improve performance by reducing unnecessary change detection cycles.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Consider Browser Support</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Polyfills</strong>:\n          Include appropriate polyfills for browsers that don't fully support custom elements. Angular provides built-in support for this.\n        </li>\n        <li>\n          <strong>Test Across Browsers</strong>:\n          Test your custom elements across different browsers to ensure consistent behavior.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Framework Agnostic</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Custom elements can be used in any HTML page, regardless of whether it uses Angular, React, Vue, or no framework at all, making them truly reusable across different projects.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Encapsulated Functionality</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Custom elements encapsulate their functionality, including HTML, CSS, and JavaScript, which helps maintain clean separation of concerns and prevents style conflicts.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simplified Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          They provide a simple way to integrate Angular components into existing applications without requiring a full migration to Angular.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Modern Web Standards</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Custom elements are part of the web standards, ensuring long-term support and compatibility with future web technologies.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Reduced Bundle Size</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          In Angular 19, custom elements can be built as standalone components, reducing the need to include the entire Angular framework in your bundle.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Additional Build Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Creating and packaging custom elements requires additional build steps and configuration, which can increase project complexity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Browser Support Limitations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          While most modern browsers support custom elements, older browsers may require polyfills, which can add to the bundle size and complexity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Custom elements built with Angular still include parts of the Angular runtime, which can add performance overhead compared to native web components built from scratch.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Limited Angular Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Some Angular features may not work as expected when used in custom elements, particularly those that rely on the Angular dependency injection system or routing.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Debugging issues in custom elements can be more challenging, especially when they're used outside of an Angular application.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mt-4\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left w-1/2\">Pros</th>\n        <th class=\"py-3 px-4 text-left w-1/2\">Cons</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Framework agnostic</td>\n        <td class=\"py-3 px-4\">Additional build complexity</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Encapsulated functionality</td>\n        <td class=\"py-3 px-4\">Browser support limitations</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Simplified integration</td>\n        <td class=\"py-3 px-4\">Performance overhead</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Modern web standards</td>\n        <td class=\"py-3 px-4\">Limited Angular features</td>\n      </tr>\n      <tr class=\"bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Reduced bundle size</td>\n        <td class=\"py-3 px-4\">Debugging complexity</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Standalone Components</strong>:\n\n      <p>\n        Standalone components in Angular 19 provide a simplified way to create and use components without requiring NgModules, making them ideal for use with custom elements.\n      </p>\n    </li>\n    <li>\n      <strong>Angular Elements Package</strong>:\n\n      <p>\n        The @angular/elements package provides the createCustomElement() function, which transforms Angular components into custom elements. In Angular 19, this functionality has been enhanced for better performance and compatibility.\n      </p>\n    </li>\n    <li>\n      <strong>Web Components</strong>:\n\n      <p>\n        Custom elements are part of the broader Web Components standard, which also includes Shadow DOM, HTML templates, and HTML imports. Understanding these related technologies can help you build more powerful custom elements.\n      </p>\n    </li>\n    <li>\n      <strong>Dependency Injection</strong>:\n\n      <p>\n        Custom elements in Angular 19 can leverage Angular's dependency injection system, allowing you to inject services and other dependencies into your custom elements.\n      </p>\n    </li>\n    <li>\n      <strong>Zone.js and Change Detection</strong>:\n\n      <p>\n        Angular 19 offers improved zoneless applications, which can be particularly beneficial for custom elements by reducing the overhead of zone.js and optimizing change detection.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { CopyDirective } from '../../../../utils/directives/copy.directive';\n\n@Component({\n  selector: 'app-custom-element',\n  templateUrl: './custom-element.component.html',\n  styleUrls: ['./custom-element.component.scss'],\n})\nexport class CustomElementComponent {\n  selectedTab = 1;\n\n  // Sample code snippets for the component\n  code_1 = `\n// Step 1: Create a component to be converted to custom element\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'hello-world',\n  template: \\`<h1>Hello {{name}}!</h1>\\`,\n  styles: [\\`h1 { color: #3498db; }\\`]\n})\nexport class HelloWorldComponent {\n  @Input() name: string = 'World';\n}\n  `;\n\n  code_2 = `\n// Step 2: Create a module for the custom element\nimport { NgModule, Injector } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { createCustomElement } from '@angular/elements';\nimport { HelloWorldComponent } from './hello-world.component';\n\n@NgModule({\n  imports: [BrowserModule],\n  declarations: [HelloWorldComponent],\n  entryComponents: [HelloWorldComponent]\n})\nexport class HelloElementModule {\n  constructor(private injector: Injector) {\n    // Convert component to custom element\n    const helloElement = createCustomElement(HelloWorldComponent, { injector });\n\n    // Register the custom element with the browser\n    customElements.define('hello-element', helloElement);\n  }\n}\n  `;\n\n  code_3 = `\n// With Standalone Components in Angular 19\nimport { NgModule, Injector } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { HelloWorldComponent } from './hello-world.component';\n\n// No module needed for the component itself (it's standalone)\n// Just register it as a custom element\nexport function registerHelloElement(injector: Injector) {\n  const helloElement = createCustomElement(HelloWorldComponent, { injector });\n  customElements.define('hello-element', helloElement);\n}\n  `;\n\n  code_4 = `\n<!-- Usage in HTML -->\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Using Custom Elements</title>\n</head>\n<body>\n  <!-- Use the custom element like any HTML element -->\n  <hello-element name=\"Angular 19\"></hello-element>\n\n  <!-- You can also set attributes dynamically -->\n  <script>\n    const element = document.createElement('hello-element');\n    element.setAttribute('name', 'Dynamic Content');\n    document.body.appendChild(element);\n  </script>\n</body>\n</html>\n  `;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { CustomElementComponent } from './custom-element.component';\n\n@NgModule({\n  declarations: [\n    CustomElementComponent\n  ],\n  imports: [\n    CommonModule,\n    HighlightModule\n  ],\n  exports: [\n    CustomElementComponent\n  ]\n})\nexport class CustomElementModule { }\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Data Binding\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Data Binding</span>\n      in Angular 19 is a powerful mechanism that connects application data to the DOM, allowing automatic synchronization between your component's state and the UI. Data binding reduces the boilerplate code needed to keep your views up-to-date and enables a more declarative approach to UI development.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>Types of Data Binding in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Interpolation</strong>:\n      Displays component data in the view using double curly braces.\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Property Binding</strong>:\n      Binds component data to a property of a DOM element or directive using square brackets.\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Event Binding</strong>:\n      Binds DOM events to component methods using parentheses.\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Two-way Binding</strong>:\n      Combines property and event binding using the banana-in-a-box syntax [(ngModel)].\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Data Binding Enhancements</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Signal-based Binding</strong>:\n      Angular 19 introduces a new reactivity model with signals, providing more efficient and fine-grained updates.\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Performance Improvements</strong>:\n      Optimized change detection that reduces unnecessary DOM updates for better runtime performance.\n    </li>\n    <li>\n      <strong>Improved Type Safety</strong>:\n      Enhanced type checking for binding expressions that catch errors during development.\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>:\n      Support for data binding in applications that don't use Zone.js, resulting in reduced bundle size and improved performance.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Data Flow Directions</p>\n  <br>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Binding Type</th>\n        <th class=\"py-3 px-4 text-left\">Direction</th>\n        <th class=\"py-3 px-4 text-left\">Syntax</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Interpolation</td>\n        <td class=\"py-3 px-4\">Component to View</td>\n        <td class=\"py-3 px-4\"><code ngNonBindable>{{ property }}</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Property Binding</td>\n        <td class=\"py-3 px-4\">Component to View</td>\n        <td class=\"py-3 px-4\"><code>[property]=\"expression\"</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Event Binding</td>\n        <td class=\"py-3 px-4\">View to Component</td>\n        <td class=\"py-3 px-4\"><code>(event)=\"handler()\"</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Two-way Binding</td>\n        <td class=\"py-3 px-4\">Both Directions</td>\n        <td class=\"py-3 px-4\"><code>[(ngModel)]=\"property\"</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Signal-based Binding</td>\n        <td class=\"py-3 px-4\">Component to View</td>\n        <td class=\"py-3 px-4\"><code ngNonBindable>{{ signal() }}</code> or <code ngNonBindable>[prop]=\"signal()\"</code></td>\n      </tr>\n    </tbody>\n  </table>\n\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Keep Templates Simple</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Avoid Complex Expressions</strong>:\n          Keep binding expressions simple and focused on data display or simple transformations. Move complex logic to component methods or services.\n        </li>\n        <li>\n          <strong>Use Pipes for Transformations</strong>:\n          Instead of transforming data in your binding expressions, use Angular pipes. They're more readable and can be optimized with the pure property.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Change Detection</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use OnPush Change Detection</strong>:\n          For components that don't need frequent updates, use OnPush change detection strategy to improve performance by reducing change detection cycles.\n        </li>\n        <li>\n          <strong>Consider Signals for Fine-grained Updates</strong>:\n          Angular 19's signal-based reactivity model provides more efficient updates by tracking dependencies automatically. Use signals for critical performance paths.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Handle Events Properly</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Debounce High-Frequency Events</strong>:\n          For events that fire frequently like scroll, resize, or input, use debouncing techniques to limit how often your event handlers run.\n        </li>\n        <li>\n          <strong>Use Event Delegation</strong>:\n          When binding the same event to multiple elements, consider using event delegation instead of binding to each element individually.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Choose the Right Binding Type</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Interpolation vs Property Binding</strong>:\n          Use interpolation for text rendering and property binding for non-string attributes. While <code ngNonBindable>{{ url }}</code> and <code ngNonBindable>[src]=\"url\"</code> may seem interchangeable, property binding is more appropriate for the latter.\n        </li>\n        <li>\n          <strong>When to Use Two-way Binding</strong>:\n          Limit two-way binding to form controls and simple components. Overusing two-way binding can create complex data flows that are hard to debug.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Organize Binding Logic</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Template Reference Variables</strong>:\n          When you need to reference elements in your template, use template reference variables (<code>#element</code>) instead of querying the DOM.\n        </li>\n        <li>\n          <strong>Break Down Complex Templates</strong>:\n          Separate complex templates into smaller, more manageable components to make bindings more maintainable and to improve reusability.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Automatic UI Updates</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Data binding automatically updates the UI when the underlying data changes, eliminating the need for manual DOM manipulations and significantly reducing boilerplate code.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Declarative Approach</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The declarative nature of Angular's data binding makes templates more readable and intuitive, clearly showing the relationship between data and its representation.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Type Safety</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular's binding system, especially in Angular 19, provides strong type checking that catches errors during development rather than at runtime.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Bi-directional Data Flow</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Two-way binding simplifies form handling by synchronizing the model and view automatically, making form implementations straightforward.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Performance with Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19's signal-based reactivity provides more efficient updates by tracking dependencies at a fine-grained level, reducing the overhead of change detection.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Performance Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Traditional data binding in Angular relies on change detection, which can introduce performance overhead, especially in large applications with complex component trees.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Complexity in Large Applications</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          In larger applications, extensive use of two-way binding can create complex data flows that are difficult to debug and may lead to unpredictable behavior.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Understanding the different binding types and their appropriate use cases requires some learning, especially with the introduction of signals in Angular 19.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Template Verbosity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Heavy use of bindings can make templates verbose and potentially harder to read, especially when multiple bindings are applied to the same element.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          When binding expressions become complex, debugging can be more challenging as the relationship between the component state and UI behavior becomes less transparent.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mt-4\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left w-1/2\">Pros</th>\n        <th class=\"py-3 px-4 text-left w-1/2\">Cons</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Automatic UI updates</td>\n        <td class=\"py-3 px-4\">Performance overhead with change detection</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Declarative approach</td>\n        <td class=\"py-3 px-4\">Complexity in large applications</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Type safety</td>\n        <td class=\"py-3 px-4\">Learning curve</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Bi-directional data flow</td>\n        <td class=\"py-3 px-4\">Template verbosity</td>\n      </tr>\n      <tr class=\"bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Enhanced performance with signals</td>\n        <td class=\"py-3 px-4\">Debugging challenges</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Signals</strong>:\n\n      <p>\n        Angular 19 introduces a comprehensive signal-based reactivity system that enhances data binding performance. Signals provide more efficient change detection by tracking dependencies precisely and updating only what needs to be updated.\n      </p>\n    </li>\n    <li>\n      <strong>Change Detection</strong>:\n\n      <p>\n        Change detection is closely related to data binding as it determines when and how Angular updates the DOM based on data changes. Angular 19 offers improved change detection strategies, especially when combined with signals.\n      </p>\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>:\n\n      <p>\n        Angular 19 stabilizes zoneless applications, which changes how change detection works. In zoneless mode, data binding still functions but requires explicit notification of changes, often using signals or manual change detection triggers.\n      </p>\n    </li>\n    <li>\n      <strong>Forms (Reactive and Template-driven)</strong>:\n\n      <p>\n        Angular forms heavily rely on data binding to synchronize form controls with component data. Both reactive forms and template-driven forms use binding approaches to manage form state and validation.\n      </p>\n    </li>\n    <li>\n      <strong>Components and Templates</strong>:\n\n      <p>\n        Data binding is a fundamental aspect of component architecture in Angular, connecting component class properties and methods to their templates. Understanding components and templates is essential for mastering data binding.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-data-binding',\n  templateUrl: './data-binding.component.html',\n  styleUrls: ['./data-binding.component.scss']\n})\nexport class DataBindingComponent {\n  selectedTab = 1;\n\n  // Sample code snippets for the component\n  code_1 = `\n// Interpolation\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-interpolation-example',\n  template: \\`\n    <h2>{{ title }}</h2>\n    <p>The sum of 1 + 1 is {{ 1 + 1 }}</p>\n    <p>Your username is {{ user.name }}</p>\n  \\`\n})\nexport class InterpolationExampleComponent {\n  title = 'Interpolation Example';\n  user = { name: 'Angular Dev' };\n}\n  `;\n\n  code_2 = `\n// Property Binding\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-property-binding',\n  template: \\`\n    <!-- Bind to an element property -->\n    <img [src]=\"imageUrl\" [alt]=\"imageAlt\">\n\n    <!-- Bind to a component property -->\n    <app-user-profile [userId]=\"currentUser.id\"></app-user-profile>\n\n    <!-- Shorthand for setting the disabled property -->\n    <button [disabled]=\"isSubmitting\">Submit</button>\n  \\`\n})\nexport class PropertyBindingComponent {\n  imageUrl = 'assets/logo.png';\n  imageAlt = 'Angular Logo';\n  currentUser = { id: 42 };\n  isSubmitting = false;\n}\n  `;\n\n  code_3 = `\n// Event Binding\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-event-binding',\n  template: \\`\n    <!-- Basic click event -->\n    <button (click)=\"handleClick()\">Click Me</button>\n\n    <!-- Event with data -->\n    <button (click)=\"handleClick($event)\">Get Event Data</button>\n\n    <!-- Key events -->\n    <input (keyup.enter)=\"submitForm()\">\n\n    <!-- Custom events from child components -->\n    <app-child (itemSelected)=\"onItemSelected($event)\"></app-child>\n  \\`\n})\nexport class EventBindingComponent {\n  handleClick(event?: any) {\n    console.log('Button clicked!', event);\n  }\n\n  submitForm() {\n    console.log('Form submitted!');\n  }\n\n  onItemSelected(item: any) {\n    console.log('Item selected:', item);\n  }\n}\n  `;\n\n  code_4 = `\n// Two-way Binding\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-two-way-binding',\n  standalone: true,\n  imports: [FormsModule],\n  template: \\`\n    <!-- Two-way binding with ngModel -->\n    <input [(ngModel)]=\"username\">\n    <p>You entered: {{ username }}</p>\n\n    <!-- The expanded syntax (property and event binding) -->\n    <input [ngModel]=\"email\" (ngModelChange)=\"email = $event\">\n    <p>Email: {{ email }}</p>\n  \\`\n})\nexport class TwoWayBindingComponent {\n  username = '';\n  email = '';\n}\n  `;\n\n  code_5 = `\n// Signal-based binding (Angular 19)\nimport { Component, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-signal-binding',\n  template: \\`\n    <h2>{{ title() }}</h2>\n    <p>Counter: {{ counter() }}</p>\n    <button (click)=\"increment()\">Increment</button>\n\n    <!-- Signal-driven properties -->\n    <div [class.active]=\"isActive()\">This div is conditionally active</div>\n  \\`\n})\nexport class SignalBindingComponent {\n  title = signal('Signal Binding Example');\n  counter = signal(0);\n  isActive = signal(false);\n\n  increment() {\n    this.counter.update(value => value + 1);\n    this.isActive.set(this.counter() > 5);\n  }\n}\n  `;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { DataBindingComponent } from './data-binding.component';\n\n@NgModule({\n  declarations: [\n    DataBindingComponent\n  ],\n  imports: [\n    CommonModule,\n    HighlightModule\n  ],\n  exports: [\n    DataBindingComponent\n  ]\n})\nexport class DataBindingModule { }\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Declarable\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Declarables</span>\n      in Angular 19 are a fundamental concept referring to components, directives, and pipes that must be declared in an NgModule before they can be used in templates. With the stabilization of standalone components in Angular 19, declarables can now also be self-contained without requiring NgModule declarations.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>What are Declarables in Angular?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      Declarables are Angular artifacts that can be used in templates. There are three types of declarables:\n      <ul class=\"list-disc pl-4\">\n        <li><strong>Components</strong>: Define views with their own templates, styles, and logic</li>\n        <li><strong>Directives</strong>: Add behavior to existing DOM elements or components</li>\n        <li><strong>Pipes</strong>: Transform data for display in templates</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Declaration Requirement</strong>:\n      In traditional Angular applications, all declarables must be declared in exactly one NgModule's <code>declarations</code> array before they can be used.\n    </li>\n    <li>\n      <strong>Scope</strong>:\n      Declarables are only visible within the module they're declared in, unless explicitly exported and imported by another module.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Declarables in NgModules</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Component Declaration</strong>:\n      Components must be declared in an NgModule before they can be referenced in templates.\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Directive Declaration</strong>:\n      Directives must also be declared in an NgModule's declarations array.\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Pipe Declaration</strong>:\n      Pipes, like components and directives, must be declared in an NgModule.\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 and Standalone Components</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Standalone Declarables</strong>:\n      Angular 19 fully stabilizes standalone components, directives, and pipes, which do not require NgModule declarations.\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Import-based Architecture</strong>:\n      Standalone components manage their dependencies through imports rather than module declarations, simplifying the architecture.\n    </li>\n    <li>\n      <strong>Coexistence</strong>:\n      Angular 19 supports both NgModule-based declarables and standalone declarables in the same application, allowing for gradual migration.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Using Declarables in Templates</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Template Usage</strong>:\n      Once declared (or marked as standalone), components, directives, and pipes can be used in templates.\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Declarable Types Comparison</p>\n  <br>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Type</th>\n        <th class=\"py-3 px-4 text-left\">Purpose</th>\n        <th class=\"py-3 px-4 text-left\">Template Usage</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Component</td>\n        <td class=\"py-3 px-4\">Defines a view with template, styles, and logic</td>\n        <td class=\"py-3 px-4\"><code ngNonBindable>&lt;app-my-component&gt;&lt;/app-my-component&gt;</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Directive</td>\n        <td class=\"py-3 px-4\">Adds behavior to elements or components</td>\n        <td class=\"py-3 px-4\"><code ngNonBindable>&lt;div appHighlight&gt;Text&lt;/div&gt;</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Pipe</td>\n        <td class=\"py-3 px-4\">Transforms data for display</td>\n        <td class=\"py-3 px-4\"><code ngNonBindable>{{ value | myPipe }}</code></td>\n      </tr>\n    </tbody>\n  </table>\n\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Organize Declarables Logically</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Feature Modules</strong>:\n          Group related declarables into feature modules to improve organization and maintain separation of concerns.\n        </li>\n        <li>\n          <strong>Shared Modules</strong>:\n          Place common declarables in shared modules and export them for use across the application.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Prevent Duplicate Declarations</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Single Declaration Rule</strong>:\n          Ensure each declarable is declared in exactly one NgModule to prevent runtime errors. Angular will throw an error if a component, directive, or pipe is declared in multiple modules.\n        </li>\n        <li>\n          <strong>Use Module Imports</strong>:\n          Instead of re-declaring components across modules, import the module that declares and exports them.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Consider Standalone Components</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>For New Development</strong>:\n          In Angular 19, prefer standalone components, directives, and pipes for new development, as they simplify the architecture and reduce boilerplate.\n        </li>\n        <li>\n          <strong>Gradual Migration</strong>:\n          For existing applications, gradually migrate to standalone components starting with leaf components and moving toward the root.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Export Public Declarables</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Explicit Exports</strong>:\n          Only export declarables that are intended to be used outside their declaring module. Keep internal components private.\n        </li>\n        <li>\n          <strong>Export Re-exports</strong>:\n          When creating aggregator modules, re-export declarables from imported modules to simplify the public API.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Test Declarables in Isolation</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Component Test Harnesses</strong>:\n          Use Angular's Component Test Harnesses to test components in isolation, without their parent module dependencies.\n        </li>\n        <li>\n          <strong>Shallow Component Tests</strong>:\n          For unit tests, prefer shallow component tests that don't require child components to be declared or mocked.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of NgModule Declarables:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Explicit Component Boundaries</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          NgModule declarations clearly define which components, directives, and pipes are available within a module scope, making the boundaries explicit.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Encapsulation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          NgModules provide strong encapsulation, ensuring that declarables are only available where explicitly exported and imported.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Lazy Loading</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          NgModules facilitate feature-based lazy loading, where entire feature sets of declarables can be loaded on demand.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Established Pattern</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The NgModule architecture is well-established with clear patterns and extensive documentation for organizing declarables.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons of NgModule Declarables:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Boilerplate Code</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          NgModules add boilerplate through declarations, imports, and exports arrays that must be maintained as the application grows.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Cognitive Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Understanding which module declares a component and tracking the module dependency tree can increase cognitive load.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Duplication Risk</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The single-declaration rule can lead to errors when a declarable is accidentally included in multiple modules.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Indirection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The layer of indirection between components and their dependencies can make code navigation and understanding more difficult.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Pros of Standalone Declarables (Angular 19):\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Simplified Architecture</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Standalone components eliminate the need for NgModule declarations, reducing boilerplate and simplifying the application structure.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Direct Dependencies</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Dependencies are declared directly at the component level, making it clearer what each component needs.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Tree-Shakable</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Standalone components are more efficiently tree-shakable, potentially reducing bundle sizes.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Easier Testing</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Testing standalone components is simpler as they explicitly declare their dependencies, requiring less test setup.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons of Standalone Declarables:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Dependency Management</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Without NgModules, developers must be careful to import all necessary dependencies in each standalone component.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Migration Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Migrating existing applications from NgModule-based declarables to standalone components requires careful planning.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Duplication</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Without the centralized declarations of NgModules, there's a risk of duplicating import statements across components.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mt-4\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Aspect</th>\n        <th class=\"py-3 px-4 text-left\">NgModule Declarables</th>\n        <th class=\"py-3 px-4 text-left\">Standalone Declarables</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Boilerplate</td>\n        <td class=\"py-3 px-4\">More (module declarations)</td>\n        <td class=\"py-3 px-4\">Less (direct imports)</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Organization</td>\n        <td class=\"py-3 px-4\">Module-based grouping</td>\n        <td class=\"py-3 px-4\">Component-level organization</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Dependency Management</td>\n        <td class=\"py-3 px-4\">Centralized in modules</td>\n        <td class=\"py-3 px-4\">Distributed across components</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Testing</td>\n        <td class=\"py-3 px-4\">Often requires TestBed configuration</td>\n        <td class=\"py-3 px-4\">Simpler setup with explicit dependencies</td>\n      </tr>\n      <tr class=\"bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Bundle Size</td>\n        <td class=\"py-3 px-4\">Potentially larger</td>\n        <td class=\"py-3 px-4\">More efficiently tree-shakable</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Standalone Components</strong>:\n\n      <p>\n        Angular 19 fully stabilizes standalone components, which eliminate the need for NgModule declarations. Standalone components can import their dependencies directly, including other standalone components, directives, and pipes.\n      </p>\n    </li>\n    <li>\n      <strong>NgModules</strong>:\n\n      <p>\n        While Angular 19 emphasizes standalone components, NgModules remain a fundamental part of Angular for organizing and encapsulating application features. Understanding the relationship between modules and declarables is still important.\n      </p>\n    </li>\n    <li>\n      <strong>Components, Directives, and Pipes</strong>:\n\n      <p>\n        These three types of declarables form the building blocks of Angular UIs. Components define views, directives modify DOM elements, and pipes transform data. All can now be either NgModule-declared or standalone.\n      </p>\n    </li>\n    <li>\n      <strong>Lazy Loading</strong>:\n\n      <p>\n        Angular 19 supports lazy loading for both NgModule-based features and standalone components. With standalone components, Angular introduces new, simpler patterns for lazy loading that don't require modules.\n      </p>\n    </li>\n    <li>\n      <strong>Dependency Injection</strong>:\n\n      <p>\n        Angular's dependency injection system works closely with declarables, especially for providing services to components. In standalone components, dependencies can be injected directly without module providers.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-declarable',\n  templateUrl: './declarable.component.html',\n  styleUrls: ['./declarable.component.scss']\n})\nexport class DeclarableComponent {\n  selectedTab = 1;\n\n  // Sample code snippets for the component\n  code_1 = `\n// Basic component declaration in NgModule\nimport { NgModule } from '@angular/core';\nimport { MyComponent } from './my.component';\n\n@NgModule({\n  declarations: [\n    MyComponent // Component is declarable\n  ],\n  exports: [\n    MyComponent // Optional: Making it available to other modules\n  ]\n})\nexport class MyModule { }\n  `;\n\n  code_2 = `\n// Directive declaration in NgModule\nimport { NgModule } from '@angular/core';\nimport { HighlightDirective } from './highlight.directive';\n\n@NgModule({\n  declarations: [\n    HighlightDirective // Directive is declarable\n  ],\n  exports: [\n    HighlightDirective // Optional: Making it available to other modules\n  ]\n})\nexport class DirectivesModule { }\n  `;\n\n  code_3 = `\n// Pipe declaration in NgModule\nimport { NgModule } from '@angular/core';\nimport { FilterPipe } from './filter.pipe';\n\n@NgModule({\n  declarations: [\n    FilterPipe // Pipe is declarable\n  ],\n  exports: [\n    FilterPipe // Optional: Making it available to other modules\n  ]\n})\nexport class PipesModule { }\n  `;\n\n  code_4 = `\n// Standalone component in Angular 19 (not needing NgModule declarations)\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-standalone',\n  standalone: true, // No longer requires declaration in NgModule\n  imports: [CommonModule], // Imports dependencies directly\n  template: \\`<h1>I'm a standalone component!</h1>\\`\n})\nexport class StandaloneComponent { }\n  `;\n\n  code_5 = `\n// Using declarables in templates\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: \\`\n    <!-- Using a declarable component -->\n    <app-my-component></app-my-component>\n\n    <!-- Using a declarable directive -->\n    <div appHighlight>Highlighted text</div>\n\n    <!-- Using a declarable pipe -->\n    {{ data | filterPipe:criteria }}\n  \\`\n})\nexport class AppComponent { }\n  `;\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { DeclarableComponent } from './declarable.component';\n\n@NgModule({\n  declarations: [DeclarableComponent],\n  imports: [\n    CommonModule,\n    HighlightModule\n  ],\n  exports: [DeclarableComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DeclarableModule { }\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Decorator | Decoration\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Decorators</span>\n      in Angular 19 are special declarations that can be attached to classes, methods, accessors, properties, or parameters. They provide a powerful way to modify class behaviors, add metadata, and enable framework features with a clean, declarative syntax. Angular 19 enhances decorators with improved performance and integration with the signals architecture.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>Core Angular 19 Decorators:</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>&#64;Component</strong> - Defines a class as an Angular component and specifies its metadata like template, styles, and other configuration options.\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"'&#64;Component({\\n  selector: \\'app-example\\',\\n  template: \\'<div>Hello Angular 19</div>\\',\\n  standalone: true,\\n  styles: [`div { color: blue; }`]\\n})\\nexport class ExampleComponent {}'\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>&#64;Directive</strong> - Declares a class as an Angular directive, which can modify DOM elements or extend their functionality.\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"'&#64;Directive({\\n  selector: \\'[appHighlight]\\',\\n  standalone: true\\n})\\nexport class HighlightDirective {\\n  constructor(private el: ElementRef) {\\n    this.el.nativeElement.style.backgroundColor = \\'yellow\\';\\n  }\\n}'\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>&#64;Pipe</strong> - Defines a class as an Angular pipe, which transforms data for display in templates.\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"'&#64;Pipe({\\n  name: \\'capitalize\\',\\n  standalone: true\\n})\\nexport class CapitalizePipe implements PipeTransform {\\n  transform(value: string): string {\\n    return value.charAt(0).toUpperCase() + value.slice(1);\\n  }\\n}'\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>&#64;Injectable</strong> - Marks a class as available for dependency injection, typically used for services.\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"'&#64;Injectable({\\n  providedIn: \\'root\\'\\n})\\nexport class DataService {\\n  getData() {\\n    return [\\'item1\\', \\'item2\\', \\'item3\\'];\\n  }\\n}'\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Angular 19 New Features:</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Signal Inputs</strong> - In Angular 19, the input() function creates a signal-based input for better performance and reactivity.\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"'&#64;Component({\\n  selector: \\'app-user-profile\\',\\n  template: \\'<div>User: {{userName()}}</div>\\',\\n  standalone: true\\n})\\nexport class UserProfileComponent {\\n  // Signal input with a default value\\n  userName = input<string>(\\'Guest\\');\\n}'\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Input Transform</strong> - Angular 19 supports transforming input values as they are set, providing clean data manipulation.\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"'&#64;Component({\\n  selector: \\'app-price-display\\',\\n  template: \\'<div>Price: ${{price()}}</div>\\',\\n  standalone: true\\n})\\nexport class PriceDisplayComponent {\\n  // Transform input to format as currency\\n  price = input<number>(0, {\\n    transform: (value: number) => value.toFixed(2)\\n  });\\n}'\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Required Inputs</strong> - Angular 19 provides better support for required inputs with improved error messages.\n\n      <button (click)=\"code7.hidden = !code7.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code7 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"'&#64;Component({\\n  selector: \\'app-user-card\\',\\n  template: \\'<div>ID: {{userId()}}</div>\\',\\n  standalone: true\\n})\\nexport class UserCardComponent {\\n  // Required input with no default value\\n  userId = input.required<string>();\\n}'\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Decorator Usage in Angular 19</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Decorator</th>\n        <th class=\"py-3 px-4 text-left\">Common Use Case</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>&#64;Component</code></td>\n        <td class=\"py-3 px-4\">Creating UI components with templates and styles</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>&#64;Directive</code></td>\n        <td class=\"py-3 px-4\">Adding behavior to existing DOM elements</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>&#64;Injectable</code></td>\n        <td class=\"py-3 px-4\">Creating services for dependency injection</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>&#64;Pipe</code></td>\n        <td class=\"py-3 px-4\">Transforming data in templates</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use Decorators for Their Intended Purpose</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Follow Angular Conventions</strong>:\n          Use decorators as intended by the Angular team. For example, use &#64;Injectable() for services, &#64;Component() for components, etc.\n        </li>\n        <li>\n          <strong>Prefer Signal Inputs</strong>:\n          In Angular 19, use the new signal-based input() function instead of the &#64;Input() decorator for better performance and reactive capabilities.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Keep Component Decorators Lean</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Minimize Template Size</strong>:\n          For complex components, use external template files rather than inline templates in &#64;Component decorators.\n        </li>\n        <li>\n          <strong>Use Input Transforms</strong>:\n          Instead of transforming input data in lifecycle hooks like ngOnChanges, use Angular 19's input transforms to handle transformations declaratively.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize for AOT Compilation</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Static Metadata</strong>:\n          Ensure decorator metadata is statically analyzable. Avoid dynamically generating selectors, template URLs, or other metadata.\n        </li>\n        <li>\n          <strong>Mark Services with Proper Scope</strong>:\n          Use the providedIn property in &#64;Injectable() to specify the appropriate scope (root, platform, any) for better tree-shaking.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Angular Decorators:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Declarative Code</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Decorators provide a clean, declarative way to define component metadata, inputs, outputs, and other Angular features.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Separation of Concerns</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Allows you to separate configuration from implementation, making code easier to read and maintain.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Framework Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular's decorator system enables seamless integration with the framework's dependency injection, change detection, and rendering systems.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal Integration in Angular 19</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The new signal-based input system in Angular 19 provides better performance and reactive programming capabilities.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons of Angular Decorators:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The variety of decorators and their specific behaviors can be overwhelming for new Angular developers.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>TypeScript Dependency</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular decorators rely on TypeScript and experimental decorators support, which may require specific configuration.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Decorator Limitations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Decorators cannot access instance properties and methods, as they are applied at class definition time, not instantiation time.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Migration Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Transitioning from traditional decorators to signal-based inputs in Angular 19 may require significant refactoring in larger applications.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Signals Framework</strong>:\n      <p>\n        Angular 19 enhances the signal support, which complements decorators by providing a more reactive way to handle state and component inputs.\n      </p>\n    </li>\n    <li>\n      <strong>Dependency Injection</strong>:\n      <p>\n        Decorators like &#64;Injectable, &#64;Inject, and &#64;Optional are core to Angular's dependency injection system, which has been optimized in Angular 19 for better performance.\n      </p>\n    </li>\n    <li>\n      <strong>Standalone Components</strong>:\n      <p>\n        Angular 19 fully embraces standalone components, which simplify the component decorator by removing the need for NgModule declarations.\n      </p>\n    </li>\n    <li>\n      <strong>Angular 19 Control Flow</strong>:\n      <p>\n        The new control flow syntax (&#64;if, &#64;for, &#64;switch) in Angular 19 complements decorators by providing template-level declarative constructs.\n      </p>\n    </li>\n    <li>\n      <strong>Hydration and SSR</strong>:\n      <p>\n        Angular 19's improved hydration strategies work with decorated components to provide better server-side rendering performance.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n\n","import { Component, ViewChild, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'app-decorator',\n  templateUrl: './decorator.component.html',\n  styleUrls: ['./decorator.component.scss']\n})\nexport class DecoratorComponent {\n  selectedTab = 1;\n\n  @ViewChild('notesRef') notesRef!: TemplateRef<any>;\n  @ViewChild('bestRef') bestRef!: TemplateRef<any>;\n  @ViewChild('prosConsRef') prosConsRef!: TemplateRef<any>;\n  @ViewChild('topicsRef') topicsRef!: TemplateRef<any>;\n\n  // Sample code snippets for the component\n  code_1 = `\n// Component Decorator Example\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-my-component',\n  template: '<h1>&#123;&#123; title &#125;&#125;</h1>',\n  styles: ['h1 { color: blue; }']\n})\nexport class MyComponent {\n  title = 'Hello from Component';\n}\n  `;\n\n  code_2 = `\n// Directive Decorator Example\nimport { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]',\n  standalone: true\n})\nexport class HighlightDirective {\n  constructor(el: ElementRef) {\n    el.nativeElement.style.backgroundColor = 'yellow';\n  }\n}\n  `;\n\n  code_3 = `\n// Pipe Decorator Example\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalize',\n  standalone: true\n})\nexport class CapitalizePipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return value;\n    return value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\n  }\n}\n  `;\n\n  code_4 = `\n// Injectable Decorator Example\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root' // Angular 19 improved support for tree-shakable providers\n})\nexport class DataService {\n  constructor(private http: HttpClient) {}\n\n  getData(): Observable<any[]> {\n    return this.http.get<any[]>('api/data');\n  }\n}\n  `;\n\n  code_5 = `\n// Input and Output Decorators Example\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-child',\n  template: \\`\n    <div>\n      <h2>&#123;&#123; title &#125;&#125;</h2>\n      <button (click)=\"onClick()\">Click me!</button>\n    </div>\n  \\`,\n  standalone: true\n})\nexport class ChildComponent {\n  @Input() title: string = '';\n  @Output() buttonClicked = new EventEmitter<void>();\n\n  onClick() {\n    this.buttonClicked.emit();\n  }\n}\n  `;\n\n  code_6 = `\n// HostListener and HostBinding Decorators\nimport { Directive, ElementRef, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appInteractive]',\n  standalone: true\n})\nexport class InteractiveDirective {\n  @HostBinding('style.color') color: string = 'black';\n\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    this.color = 'red';\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    this.color = 'black';\n  }\n}\n  `;\n\n  code_7 = `\n// Angular 19 Signal Inputs\nimport { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'app-signal-demo',\n  template: \\`\n    <div>&#123;&#123; name() &#125;&#125; - &#123;&#123; age() &#125;&#125;</div>\n  \\`,\n  standalone: true\n})\nexport class SignalDemoComponent {\n  // Signal inputs in Angular 19\n  name = input<string>('Default Name');\n  age = input.required<number>();\n}\n  `;\n\n  code_8 = `\n// Angular 19 Input Transform\nimport { Component, input, InputSignal } from '@angular/core';\n\n@Component({\n  selector: 'app-transform-demo',\n  template: \\`<p>Price: &#123;&#123; price() | currency &#125;&#125;</p>\\`,\n  standalone: true\n})\nexport class TransformDemoComponent {\n  // Transform input when it's set\n  price = input<number>(0, {\n    transform: (value: string | number) =>\n      typeof value === 'string' ? parseFloat(value) : value\n  });\n}\n  `;\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { DecoratorComponent } from './decorator.component';\n\n@NgModule({\n  declarations: [DecoratorComponent],\n  imports: [\n    CommonModule,\n    HighlightModule\n  ],\n  exports: [DecoratorComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DecoratorModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-deferrable-views',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './deferrable-views.component.html',\n  styleUrls: ['./deferrable-views.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeferrableViewsComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Code examples for deferrable views\n  basicDeferCode = `<!-- Basic @defer syntax -->\n<section>\n  <header>Always rendered content</header>\n\n  @defer {\n    <!-- Heavy component only loaded when needed -->\n    <app-data-visualization [data]=\"complexData\"></app-data-visualization>\n  } @loading {\n    <p>Loading visualization...</p>\n  } @error {\n    <p>Error loading visualization component</p>\n  } @placeholder {\n    <div class=\"placeholder-box\">Visualization will appear here</div>\n  }\n</section>`;\n\n  triggerConditionsCode = `<!-- Different trigger conditions -->\n<!-- Load when element becomes visible -->\n@defer (on viewport) {\n  <app-comments [postId]=\"postId\"></app-comments>\n}\n\n<!-- Load when user interaction occurs -->\n@defer (on interaction) {\n  <app-interactive-map></app-interactive-map>\n}\n\n<!-- Load when specific condition is met -->\n@defer (when isUserLoggedIn) {\n  <app-user-dashboard></app-user-dashboard>\n}\n\n<!-- Load after timer expires -->\n@defer (on timer(2000)) {\n  <app-newsletter-signup></app-newsletter-signup>\n}\n\n<!-- Load during idle browser time -->\n@defer (on idle) {\n  <app-related-posts></app-related-posts>\n}`;\n\n  prefetchingCode = `<!-- Prefetching strategies -->\n<!-- Fetch on idle but render on viewport -->\n@defer (on viewport; prefetch on idle) {\n  <app-product-recommendations></app-product-recommendations>\n}\n\n<!-- Fetch when hovering somewhere, render when in viewport -->\n@defer (on viewport; prefetch on hover(buyButton)) {\n  <app-checkout-options></app-checkout-options>\n}\n\n<!-- Fetch immediately but render only when condition is met -->\n@defer (when isCartFull; prefetch on immediate) {\n  <app-special-offers></app-special-offers>\n}`;\n\n  v19EnhancementsCode = `// Angular 19 Enhanced Deferrable Views Features\n\n// 1. Minimum rendering time to prevent flashing\n@defer (on viewport; minimum 300ms) {\n  <app-content-section></app-content-section>\n}\n\n// 2. Progressive hydration integration\n@defer (on viewport; hydration: partial) {\n  <app-server-rendered-content></app-server-rendered-content>\n}\n\n// 3. Loading skeleton with data access\n@defer {\n  <app-user-profile [data]=\"userData\"></app-user-profile>\n} @loading (minimum 500ms) {\n  <app-profile-skeleton [userName]=\"userData.name\"></app-profile-skeleton>\n}\n\n// 4. Signals integration for dynamic conditions\n@defer (when userPermissions.admin()) {\n  <app-admin-dashboard></app-admin-dashboard>\n}\n\n// 5. Priority hints for browser loading\n@defer (on viewport; priority: high) {\n  <app-critical-content></app-critical-content>\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Load code examples from files if needed\n    // Currently using inline examples\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Deferrable Views\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Deferrable Views</span>\n      in Angular 19 provide an enhanced built-in mechanism for lazy loading template fragments. Using the <code>&#64;defer</code> block, developers can optimize initial load times by deferring non-critical content, with improved integration with partial hydration, signals, and enhanced performance metrics.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What are Deferrable Views?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Template Fragments</strong>:\n      Portions of templates that can be lazily loaded based on conditions.\n    </li>\n    <li>\n      <strong>&#64;defer Block</strong>:\n      Angular's built-in syntax for declaring deferred content.\n    </li>\n    <li>\n      <strong>Optimized Loading</strong>:\n      Loads content only when needed, improving initial page load times.\n    </li>\n    <li>\n      <strong>Fallback States</strong>:\n      Provides loading, error, and placeholder states for a better user experience.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Basic &#64;defer Syntax</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"basicDeferCode\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Trigger Conditions for Deferrable Content</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"triggerConditionsCode\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Prefetching Strategies</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"prefetchingCode\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>New in Angular 19: Enhanced Deferrable Views</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19EnhancementsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Key Enhancements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Integrated Partial Hydration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Deferrable views now work seamlessly with Angular's partial hydration system, allowing for finer control over which parts of server-rendered content get hydrated.</li>\n        <li>Content can remain static or be selectively hydrated based on priority and user interaction patterns.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Metrics Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Built-in performance tracking for deferred content, with integration into Angular DevTools.</li>\n        <li>Measures key metrics like Time to Interactive for deferred content.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signals-based Trigger Conditions</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Deferred content can be triggered based on signals, providing reactive loading based on state changes.</li>\n        <li>Enables more sophisticated loading strategies tied to application state.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Loading States</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Minimum loading times to prevent \"flashing\" of loading states for fast connections.</li>\n        <li>Ability to access parent scope data within loading and placeholder templates.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Priority Hints</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Support for browser priority hints to indicate the importance of deferred content to the browser's loading mechanisms.</li>\n        <li>Helps optimize browser resource allocation for critical deferred content.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>How Deferrable Views Improve Performance</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Metric</th>\n        <th class=\"py-3 px-4 text-left\">Improvement</th>\n        <th class=\"py-3 px-4 text-left\">Typical Impact</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Initial Load Time</td>\n        <td class=\"py-3 px-4\">Load only essential content initially</td>\n        <td class=\"py-3 px-4\">20-40% faster FCP</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Bundle Size</td>\n        <td class=\"py-3 px-4\">Components loaded on demand</td>\n        <td class=\"py-3 px-4\">15-30% smaller initial bundle</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Rendering Time</td>\n        <td class=\"py-3 px-4\">Less initial rendering work</td>\n        <td class=\"py-3 px-4\">Improved TTI by 25-35%</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Resource Usage</td>\n        <td class=\"py-3 px-4\">Lower CPU/memory initial footprint</td>\n        <td class=\"py-3 px-4\">Reduced by up to 25%</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Choose Appropriate Trigger Conditions</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Viewport Triggers</strong>:\n          Use <code>on viewport</code> for below-the-fold content that's likely to be scrolled to.\n        </li>\n        <li>\n          <strong>Interaction Triggers</strong>:\n          Use <code>on interaction</code> for content that should load after a user interaction, like clicking a tab.\n        </li>\n        <li>\n          <strong>Idle Triggers</strong>:\n          Use <code>on idle</code> for non-critical content that should load when the browser is idle.\n        </li>\n        <li>\n          <strong>Condition Triggers</strong>:\n          Use <code>when</code> with signals for content that depends on application state.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Prefetching Strategy</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Pair Rendering and Prefetching</strong>:\n          Use different triggers for prefetching vs. rendering for best user experience.\n        </li>\n        <li>\n          <strong>Prefetch Critical Paths</strong>:\n          Prefetch content that users are likely to need based on common navigation patterns.\n        </li>\n        <li>\n          <strong>Balance Resource Usage</strong>:\n          Don't prefetch everything—prioritize based on likelihood of use and resource cost.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Design Meaningful Loading States</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Skeleton UI</strong>:\n          Implement skeleton UI patterns in loading blocks that match the shape of the content.\n        </li>\n        <li>\n          <strong>Avoid Layout Shifts</strong>:\n          Ensure loading, placeholder, and content states have similar dimensions to prevent layout shifts.\n        </li>\n        <li>\n          <strong>Set Minimum Display Times</strong>:\n          Use the minimum time parameter to prevent loading state flashing on fast connections.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Error Handling</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Always Include Error States</strong>:\n          Always include an <code>&#64;error</code> block to handle loading failures gracefully.\n        </li>\n        <li>\n          <strong>Provide Recovery Options</strong>:\n          Include retry functionality in error states when appropriate.\n        </li>\n        <li>\n          <strong>Log Errors</strong>:\n          Implement error logging in error blocks to track loading issues.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Integration with Angular 19 Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Combine with Partial Hydration</strong>:\n          Use deferrable views with partial hydration for optimal SSR performance.\n        </li>\n        <li>\n          <strong>Use with Control Flow</strong>:\n          Combine with <code>&#64;if</code>, <code>&#64;for</code>, and <code>&#64;switch</code> blocks for dynamic content control.\n        </li>\n        <li>\n          <strong>Leverage Signals</strong>:\n          Use signals for trigger conditions to create reactive loading patterns.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Performance Improvements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Faster Initial Load</span>:\n          Only essential content is loaded initially, resulting in faster First Contentful Paint and Time to Interactive metrics.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Bundle Size</span>:\n          Components are loaded on demand, reducing the initial JavaScript payload.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Optimized Resource Usage</span>:\n          Lower CPU and memory usage during initial page load, especially important for mobile devices.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced User Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Graceful Loading States</span>:\n          Provides built-in loading, error, and placeholder states for a polished user experience.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Prioritized Content</span>:\n          Critical content appears quickly, with less important content loaded later.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Responsive Interaction</span>:\n          Interface remains responsive while heavy content loads in the background.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Declarative Syntax</span>:\n          Simple, readable syntax that clearly expresses loading intent.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Built-in Framework Feature</span>:\n          No need for third-party libraries or complex setup for lazy loading template fragments.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Fine-grained Control</span>:\n          Multiple trigger options and prefetching strategies for precise loading control.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular 19 Enhancements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Partial Hydration Integration</span>:\n          Seamless integration with Angular's partial hydration system for superior SSR performance.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Signals Compatibility</span>:\n          Can use signals for reactive loading conditions, enhancing the reactive programming model.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Performance Metrics</span>:\n          Built-in performance tracking and integration with Angular DevTools for optimization.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Potential for Overuse</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Too Many Defer Blocks</span>:\n          Overuse can lead to too many HTTP requests and actually harm performance.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Complex Loading Patterns</span>:\n          Excessive defer blocks can create complex loading patterns that are hard to predict and debug.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>UX Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Layout Shifts</span>:\n          If not carefully designed, deferred content can cause layout shifts when it loads.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Loading Flashes</span>:\n          Without minimum time settings, rapid loading/unloading of states can cause visual flashing.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">User Expectation Management</span>:\n          Users may be confused by content that appears after they've already scanned a page.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Testing Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Complex Test Scenarios</span>:\n          Testing deferred content requires handling multiple loading states and timing conditions.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">E2E Test Timing</span>:\n          End-to-end tests need to account for deferred loading timing, which can be tricky.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">New Syntax to Learn</span>:\n          Additional syntax and concepts for team members to master.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Strategic Implementation</span>:\n          Requires understanding of performance optimization principles to use effectively.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Built-in Control Flow</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's new template syntax for conditional rendering (<code>&#64;if</code>), iteration (<code>&#64;for</code>), and branching (<code>&#64;switch</code>).\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          Deferrable views (<code>&#64;defer</code>) are part of the same control flow syntax family and can be nested within other control flow blocks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Lazy Loading</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          A technique where parts of an application are loaded only when needed, traditionally used for route-level code splitting.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          Deferrable views bring lazy loading to the template fragment level, complementing route-level lazy loading.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Server-Side Rendering (SSR)</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Rendering Angular applications on the server before sending them to the client.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          Deferrable views can be integrated with SSR and partial hydration for more efficient server rendering.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          A technique where only parts of a server-rendered application are \"hydrated\" with JavaScript functionality.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          In Angular 19, deferrable views integrate with partial hydration to allow granular control over hydration.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimization</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Techniques to improve application load times, interactivity, and resource usage.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          Deferrable views are a primary tool for optimizing initial load performance in Angular applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's reactive state management primitives introduced in recent versions.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          In Angular 19, deferrable views can use signals for their conditional triggers, enabling reactive loading patterns.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Core Web Vitals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Google's metrics for measuring user experience quality, including LCP, FID, and CLS.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          Deferrable views can significantly improve metrics like Largest Contentful Paint by prioritizing critical content.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-dependency-injection',\n  templateUrl: './dependency-injection.component.html',\n  styleUrls: ['./dependency-injection.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DependencyInjectionComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n  code_7 = '';\n  code_8 = '';\n  code_9 = '';\n  code_10 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/di/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/di/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/di/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/di/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/di/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n    this.http.get('assets/codes/di/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n    this.http.get('assets/codes/di/notes/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_7 = data);\n\n    this.http.get('assets/codes/di/notes/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_8 = data);\n\n    this.http.get('assets/codes/di/notes/code_9.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_9 = data);\n\n    this.http.get('assets/codes/di/notes/code_10.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_10 = data);\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Dependency Injection (DI)\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Dependency Injection (DI)</span>\n      in Angular 19 is a design pattern and core mechanism for creating and delivering parts of an application (dependencies) to other parts that require them. Angular 19 enhances DI with improved performance, simplified providers, and better integration with the signals architecture.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>\n    Core Dependency Injection Concepts in Angular 19:\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Providers</strong> - Define the dependencies that are injected into components, directives, and services. In Angular 19, providers can be declared at the component, standalone component, or application level.\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Injectors</strong> - Responsible for providing dependencies to components and services. Angular 19 optimizes injector hierarchies for better performance with standalone components.\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Services</strong> - Provide reusable functionality to components and other services. In Angular 19, services integrate seamlessly with signals for reactive state management.\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Injectable</strong> - A decorator that marks a class as injectable and provides metadata that the injector uses to resolve dependencies.\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Tokens</strong> - Unique identifiers used by the injector to resolve dependencies. Angular 19 expands token types with better type safety.\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Factory providers</strong> - Allow for custom logic to be used when creating dependencies. Angular 19 simplifies factory providers with improved type inference.\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Value providers</strong> - Allow for simple, static values to be injected as dependencies. Angular 19 adds better type checking for value providers.\n\n      <button (click)=\"code7.hidden = !code7.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code7 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_7\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Optional dependencies</strong> - Dependencies that are not required by a component or service can be marked as optional using the &#64;Optional decorator.\n\n      <button (click)=\"code8.hidden = !code8.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code8 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_8\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Injection tokens</strong> - Unique identifiers that can be used to resolve dependencies. Angular 19 improves injection token type inference.\n\n      <button (click)=\"code9.hidden = !code9.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code9 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_9\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Hierarchical injection</strong> - Allows for dependencies to be inherited by child components and services. Angular 19 optimizes this for standalone components.\n\n      <button (click)=\"code10.hidden = !code10.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code10 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_10\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>New Dependency Injection Features in Angular 19</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Signal-based Injection</strong> - Angular 19 introduces a new way to inject dependencies that integrates with the signals architecture for better reactivity and performance.\n\n      <button (click)=\"code11.hidden = !code11.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code11 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"'// Using the new inject function in a component\\n&#64;Component({\\n  selector: \\'app-user-profile\\',\\n  template: \\'<div>Welcome, {{userName()}}</div>\\',\\n  standalone: true\\n})\\nexport class UserProfileComponent {\\n  private userService = inject(UserService);\\n  userName = computed(() => this.userService.getCurrentUser().name);\\n}'\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Improved providedIn options</strong> - Angular 19 expands the providedIn options for better tree-shaking and scope control.\n\n      <button (click)=\"code12.hidden = !code12.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code12 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"'&#64;Injectable({\\n  providedIn: \\'platform\\' // Available across multiple Angular applications\\n})\\nexport class SharedService {\\n  // Service implementation\\n}'\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Standalone-friendly providers</strong> - Angular 19 fully stabilizes the standalone API for DI, making it easier to use without NgModules.\n\n      <button (click)=\"code13.hidden = !code13.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code13 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"'// Providing services to standalone components\\n&#64;Component({\\n  selector: \\'app-feature\\',\\n  template: \\'...\\',\\n  standalone: true,\\n  providers: [FeatureService]\\n})\\nexport class FeatureComponent {\\n  constructor(private featureService: FeatureService) {}\\n}'\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Dependency Injection Usage in Angular 19</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Approach</th>\n        <th class=\"py-3 px-4 text-left\">Use Case</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>constructor injection</code></td>\n        <td class=\"py-3 px-4\">Traditional approach, works with all services and components</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>inject() function</code></td>\n        <td class=\"py-3 px-4\">Modern approach, better with signals and standalone components</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>providedIn: 'root'</code></td>\n        <td class=\"py-3 px-4\">Application-wide singleton services</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>Component providers</code></td>\n        <td class=\"py-3 px-4\">Component-scoped services that follow component lifecycle</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use the inject() Function in Angular 19</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Prefer inject() over Constructor Injection</strong>:\n          In Angular 19, use the inject() function instead of constructor injection for better code organization and compatibility with the signals architecture.\n        </li>\n        <li>\n          <strong>Combine with Signal Features</strong>:\n          Leverage inject() with computed() to create reactive dependencies that automatically update when underlying data changes.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Provider Scope</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use providedIn Strategically</strong>:\n          In Angular 19, carefully select the appropriate providedIn option ('root', 'platform', 'any') to optimize tree-shaking and performance.\n        </li>\n        <li>\n          <strong>Leverage Standalone Components</strong>:\n          Use component-level providers with standalone components to create isolated dependency trees that are more maintainable and testable.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Design Services for Testability</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Interfaces for Dependencies</strong>:\n          Define interfaces for your services and use injection tokens to provide more flexibility when testing.\n        </li>\n        <li>\n          <strong>Create Mock Services</strong>:\n          Develop mock implementations for your services to make testing easier and more reliable.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Embrace Hierarchical Injection</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Component Providers</strong>:\n          Leverage component providers to create service instances tied to component lifecycles, which helps prevent memory leaks.\n        </li>\n        <li>\n          <strong>Understand Injector Hierarchies</strong>:\n          Learn how Angular's injector hierarchy works to avoid unexpected behavior with shared services.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Angular 19's Dependency Injection:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Improved Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19 optimizes the dependency injection system for better startup time and runtime performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Integration with Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The DI system in Angular 19 works seamlessly with signals for reactive state management.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Type Safety</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19 improves type inference for injected dependencies, reducing runtime errors.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simplified Module-less Development</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          With full support for standalone components, Angular 19's DI system works without requiring NgModules.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Understanding Angular's DI system, particularly with the new signal-based approach, can be challenging for newcomers.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Multiple Injection Methods</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Having both constructor injection and the inject() function can lead to inconsistent code patterns in large teams.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Migration Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Migrating from older Angular versions to Angular 19's dependency injection patterns can require significant refactoring.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Hierarchical injection can sometimes make it difficult to track where a service instance is coming from, especially in complex applications.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Signals Framework</strong>:\n      <p>\n        Angular 19's signals architecture integrates deeply with the dependency injection system, enabling reactive programming patterns without RxJS.\n      </p>\n    </li>\n    <li>\n      <strong>Standalone Components</strong>:\n      <p>\n        Angular 19 fully stabilizes standalone components with their own provider system, reducing the need for NgModules.\n      </p>\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>:\n      <p>\n        Angular 19's zoneless applications rely on signal-based dependency injection for change detection without zone.js.\n      </p>\n    </li>\n    <li>\n      <strong>Server-Side Rendering (SSR)</strong>:\n      <p>\n        Angular 19 enhances the dependency injection system for better server-side rendering performance and hydration.\n      </p>\n    </li>\n    <li>\n      <strong>Environment Injection</strong>:\n      <p>\n        Angular 19 improves environment-specific configuration injection for better development, testing, and production management.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    DI Token\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Dependency Injection (DI) Tokens</span>\n      in Angular 19 are unique identifiers used by the injector to locate and provide dependencies. Tokens act as keys in Angular's dependency injection system, enabling more flexible, type-safe dependency management with improved performance in the latest version.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>Types of DI Tokens in Angular 19:</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Class Tokens</strong>: The most common type, using the class itself as its own token.\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>InjectionToken</strong>: A token that creates a unique identifier for non-class dependencies.\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>String Tokens</strong>: Legacy string tokens, less commonly used in Angular 19 due to lack of type safety.\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>New DI Token Features in Angular 19</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Enhanced Type Safety</strong>:\n      Angular 19 strengthens type checking for tokens, particularly with improved generic type inference for InjectionToken.\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Signal Integration</strong>:\n      Angular 19 introduces better integration between tokens and signals for reactive dependencies.\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Performance Improvements</strong>:\n      Angular 19 optimizes token resolution for faster dependency injection, especially with providedIn.\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Common DI Token Usage Patterns in Angular 19</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Token Type</th>\n        <th class=\"py-3 px-4 text-left\">Best Used For</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>Class Token</code></td>\n        <td class=\"py-3 px-4\">Service instances where the class itself is the token</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>InjectionToken</code></td>\n        <td class=\"py-3 px-4\">Non-class dependencies like primitive values, objects, or functions</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>Multi-provider tokens</code></td>\n        <td class=\"py-3 px-4\">Arrays of values where multiple providers contribute to a collection</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>Optional tokens</code></td>\n        <td class=\"py-3 px-4\">Dependencies that aren't required and may not be available</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use InjectionToken for Non-Class Dependencies</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Prefer InjectionToken Over String Tokens</strong>:\n          Always use InjectionToken instead of string tokens in Angular 19 applications to ensure type safety and better debugging.\n        </li>\n        <li>\n          <strong>Include Descriptive Token Names</strong>:\n          Provide meaningful names to InjectionToken constructors to make debugging easier when dependency resolution fails.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Token Factories</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Factory Functions with ProvidedIn</strong>:\n          In Angular 19, define token factories with the providedIn option for better tree-shaking and initialization performance.\n        </li>\n        <li>\n          <strong>Keep Factories Pure</strong>:\n          Ensure token factory functions remain pure and deterministic to avoid unexpected behavior and facilitate testing.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Design for Hierarchical Injection</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Organize Tokens by Scope</strong>:\n          Plan which injector level each token belongs to—root, platform, standalone component, or NgModule (legacy).\n        </li>\n        <li>\n          <strong>Use Environment-Specific Tokens</strong>:\n          Create separate tokens for environment-specific values to switch between development, testing, and production configurations.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Integrate with Signals</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Provide Signal-Based Dependencies</strong>:\n          For reactive configuration in Angular 19, use InjectionTokens that provide signal values for automatic change detection.\n        </li>\n        <li>\n          <strong>Combine with Computed Signals</strong>:\n          When injecting signal tokens, pair them with computed signals to derive reactive values without external libraries.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Multi-Provider Best Practices</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Design for Extensibility</strong>:\n          Use multi-providers with tokens when designing extensible systems where multiple providers can contribute values.\n        </li>\n        <li>\n          <strong>Type Arrays Properly</strong>:\n          Ensure multi-provider tokens have properly typed arrays (InjectionToken&lt;YourType[]&gt;) to maintain type safety.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of DI Tokens in Angular 19:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Improved Type Safety</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19 enhances type inference for InjectionToken, reducing runtime errors with better compile-time checking.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Tree-Shaking</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Tokens with providedIn configurations enable more effective tree-shaking in Angular 19, reducing bundle sizes.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          New in Angular 19, tokens can seamlessly provide and work with signals for better reactivity without RxJS.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Debugging</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19 improves error messages for token resolution failures, making dependency issues easier to diagnose.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Standalone-Friendly</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Tokens in Angular 19 work seamlessly with standalone components and the new module-less architecture.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          InjectionToken concepts can be complex for developers new to Angular, especially with the signal integration in Angular 19.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Configuration Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Setting up tokens properly requires more boilerplate code compared to direct service usage.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Despite improvements, tracking down issues with incorrectly configured tokens can still be challenging.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Migration Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Updating legacy applications to use modern token patterns (like converting string tokens to InjectionToken) requires effort.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential for Misuse</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Overusing tokens for simple scenarios can introduce unnecessary abstraction and complexity.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Dependency Injection System</strong>:\n      <p>\n        DI tokens are fundamental building blocks in Angular's dependency injection system, which has been enhanced in Angular 19 with performance optimizations.\n      </p>\n    </li>\n    <li>\n      <strong>Signals Architecture</strong>:\n      <p>\n        Angular 19 integrates tokens with the signals architecture, enabling reactive applications without RxJS dependencies.\n      </p>\n    </li>\n    <li>\n      <strong>Standalone Components</strong>:\n      <p>\n        Tokens work seamlessly with standalone components in Angular 19, supporting the new module-less architecture.\n      </p>\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>:\n      <p>\n        DI tokens play a crucial role in zoneless Angular 19 applications by providing signal-based dependencies for change detection.\n      </p>\n    </li>\n    <li>\n      <strong>Server-Side Rendering (SSR)</strong>:\n      <p>\n        Angular 19 improves how tokens work with SSR and hydration, ensuring consistent dependency resolution between server and client.\n      </p>\n    </li>\n    <li>\n      <strong>Environment Injection</strong>:\n      <p>\n        Tokens facilitate environment-specific configuration in Angular 19, making it easier to switch between development, testing, and production settings.\n      </p>\n    </li>\n    <li>\n      <strong>Multi-Providers</strong>:\n      <p>\n        Angular 19 enhances multi-provider tokens, which allow multiple providers to contribute values to a single token.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-di-token',\n  templateUrl: './di-token.component.html',\n  styleUrls: ['./di-token.component.scss']\n})\nexport class DiTokenComponent {\n  selectedTab = 1;\n\n  // Code examples for syntax highlighting\n  code_1 = `@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  // Service implementation\n}\n\n// Injecting using the class token\nconst userService = inject(UserService);`;\n\n  code_2 = `import { InjectionToken } from '@angular/core';\n\n// Define a token with improved type safety in Angular 19\nexport const API_URL = new InjectionToken<string>(\n  'API URL token',\n  { providedIn: 'root', factory: () => 'https://api.example.com' }\n);\n\n// Using inject() function with the token\nconst apiUrl = inject(API_URL);`;\n\n  code_3 = `// String tokens (not recommended in Angular 19)\n{\n  provide: 'API_URL',\n  useValue: 'https://api.example.com'\n}\n\n// Inject with string token - lacks type safety\n@Inject('API_URL') apiUrl: string`;\n\n  code_4 = `// Type-safe configuration token with interface\ninterface AppConfig {\n  apiUrl: string;\n  theme: 'light' | 'dark';\n  features: string[];\n}\n\n// Angular 19 improves type inference here\nexport const APP_CONFIG = new InjectionToken<AppConfig>(\n  'Application configuration',\n  {\n    providedIn: 'root',\n    factory: () => ({\n      apiUrl: 'https://api.example.com',\n      theme: 'light',\n      features: ['search', 'notifications']\n    })\n  }\n);`;\n\n  code_5 = `import { signal } from '@angular/core';\n\n// Token for a signal-based configuration\nexport const THEME_CONFIG = new InjectionToken<Signal<string>>(\n  'Theme configuration',\n  {\n    providedIn: 'root',\n    factory: () => signal('light')\n  }\n);\n\n// Component using the signal from token\n@Component({\n  /* ... */\n})\nexport class ThemeComponent {\n  private themeSignal = inject(THEME_CONFIG);\n\n  // Use in template with automatic reactivity\n  currentTheme = computed(() => \\`theme-\\${this.themeSignal()}\\`);\n}`;\n\n  code_6 = `// Optimized token with providedIn for tree-shaking\nexport const LOGGER = new InjectionToken<LoggerService>(\n  'Logger Service',\n  {\n    providedIn: 'root',\n    factory: () => new ConsoleLoggerService()\n  }\n);\n\n// Modern inject approach - more efficient in Angular 19\nconst logger = inject(LOGGER);`;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from '../../../../utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-directive',\n  templateUrl: './directive.component.html',\n  styleUrls: ['./directive.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DirectiveComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3_1 = '';\n  code_3_2 = '';\n  code_3_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n  code_7 = '';\n  code_8 = '';\n  code_9 = '';\n  code_10 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/directives/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/directives/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/directives/notes/code_3_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3_1 = data);\n\n    this.http.get('assets/codes/directives/notes/code_3_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3_2 = data);\n\n    this.http.get('assets/codes/directives/notes/code_3_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3_3 = data);\n\n    this.http.get('assets/codes/directives/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/directives/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n    this.http.get('assets/codes/directives/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n    this.http.get('assets/codes/directives/notes/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_7 = data);\n\n    this.http.get('assets/codes/directives/notes/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_8 = data);\n\n    this.http.get('assets/codes/directives/notes/code_9.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_9 = data);\n\n    this.http.get('assets/codes/directives/notes/code_10.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_10 = data);\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Directive\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Directives</span>\n      in Angular 19 are powerful features that manipulate the DOM, add behaviors to existing elements, and create reusable components. Angular 19 enhances directives with signal-based reactivity, improved performance, and better integration with the new control flow syntax, allowing developers to build more responsive and efficient applications.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>Types of Directives in Angular 19:</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Component Directives</strong>:\n      Components with their own templates, styles, and behavior, created using the @Component decorator.\n    </li>\n    <li>\n      <strong>Attribute Directives</strong>:\n      Directives that change the appearance or behavior of existing elements, created using the @Directive decorator.\n    </li>\n    <li>\n      <strong>Structural Directives</strong>:\n      Directives that add or remove DOM elements based on conditions, now with built-in alternatives in Angular 19.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>New Directive Features in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Signal-Based Directives</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces signal-based inputs for directives, enabling reactive behavior with improved performance and reduced memory usage compared to traditional input bindings.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Host Directive Composition</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 enhances host directives to enable better directive composition, allowing multiple directives to be combined in a more efficient and maintainable way.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Built-in Control Flow Reducing Structural Directives</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 stabilizes the built-in control flow syntax (@if, @for, @switch) that provides an alternative to traditional structural directives like *ngIf, *ngFor, and *ngSwitch with better performance and type safety.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Standalone Directive Improvements</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 fully optimizes standalone directives, eliminating NgModule dependencies and improving tree-shaking for smaller bundle sizes.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Deferred Loading for Directives</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 provides improved deferred loading capabilities for directives, allowing better control over when directives are loaded and initialized.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Types of Angular Directives with Examples</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      Component Directive\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      Attribute Directive\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      Structural Directive\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n\n        <span copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_3_2\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n\n        <span copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_3_3\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n      </span>\n    </li>\n    <li>\n      Input Binding\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      Output Binding\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      Host Binding\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      Host Listener\n\n      <button (click)=\"code7.hidden = !code7.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code7 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_7\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      ElementRef\n\n      <button (click)=\"code8.hidden = !code8.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code8 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_8\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Directive Usage Patterns in Angular 19</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Directive Type</th>\n        <th class=\"py-3 px-4 text-left\">Use Case</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>Component</code></td>\n        <td class=\"py-3 px-4\">Building UI components with encapsulated logic and styling</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>Attribute</code></td>\n        <td class=\"py-3 px-4\">Modifying behavior or appearance of existing elements</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>Structural</code></td>\n        <td class=\"py-3 px-4\">Adding/removing elements based on conditions (legacy approach)</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>Host Directive</code></td>\n        <td class=\"py-3 px-4\">Composing multiple directives together on a component</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Prefer Built-in Control Flow Over Structural Directives</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use @if Over *ngIf</strong>:\n          In Angular 19, prefer the new @if control flow syntax over *ngIf directive for better performance and type checking.\n        </li>\n        <li>\n          <strong>Use @for Over *ngFor</strong>:\n          Take advantage of the @for syntax which provides improved change detection and better memory management compared to *ngFor.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Signal-Based Inputs</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use input() Function</strong>:\n          Replace traditional @Input() decorators with signal-based input() functions for better reactivity and performance.\n        </li>\n        <li>\n          <strong>Implement Input Transforms</strong>:\n          Use input transforms to process and validate input values as they arrive, avoiding unnecessary change detection cycles.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Create Standalone Directives</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use standalone: true</strong>:\n          Create standalone directives to avoid NgModule dependencies and improve tree-shaking for smaller bundles.\n        </li>\n        <li>\n          <strong>Self-Contained Dependencies</strong>:\n          Ensure directives import their own dependencies rather than relying on shared module imports.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Apply Host Directive Composition</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Compose Multiple Directives</strong>:\n          Use the hostDirectives property to compose multiple directives together, promoting code reuse.\n        </li>\n        <li>\n          <strong>Expose API Selectively</strong>:\n          Control which inputs and outputs from host directives are exposed using the inputs and outputs properties.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Apply the OnPush Change Detection Strategy</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Performance Optimization</strong>:\n          Use OnPush change detection strategy with directives to significantly improve performance, especially in large applications.\n        </li>\n        <li>\n          <strong>Immutable Input Data</strong>:\n          Design directives to work with immutable data structures for better performance with OnPush change detection.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Angular 19 Directives:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Improved Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19 directives provide better performance through signal-based reactivity and optimized change detection.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Type Safety</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Enhanced TypeScript integration offers improved type checking for directives, reducing runtime errors.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Modular Design</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Standalone directives enable more modular code organization without NgModule dependencies.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Code Reusability</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Host directive composition allows for better code reuse across components.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Declarative Syntax</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Directives provide a clean, declarative way to modify DOM behavior without complex imperative code.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The new signal-based approach and control flow syntax requires learning new patterns for those familiar with older directive models.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Migration Effort</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Converting existing directives to use new Angular 19 features can require significant refactoring in larger applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Complex directive compositions can be difficult to debug when issues arise.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Overuse</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Directives can be overused, leading to \"directive soup\" and harder-to-maintain code.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Built-in Control Flow</strong>:\n      <p>\n        Angular 19's new control flow syntax (@if, @for, @switch) provides an alternative to structural directives with improved performance and type safety.\n      </p>\n    </li>\n    <li>\n      <strong>Signal-Based Inputs</strong>:\n      <p>\n        The input() function in Angular 19 enables reactive, signal-based properties in directives for better performance and change detection.\n      </p>\n    </li>\n    <li>\n      <strong>Host Directive Composition</strong>:\n      <p>\n        Angular 19 enhances the ability to compose multiple directives together using the hostDirectives feature.\n      </p>\n    </li>\n    <li>\n      <strong>Standalone Components and Directives</strong>:\n      <p>\n        Angular 19 fully stabilizes the standalone API, allowing directives to be used without NgModule dependencies.\n      </p>\n    </li>\n    <li>\n      <strong>Deferred Loading</strong>:\n      <p>\n        Angular 19 improves support for lazy-loading directives using the @defer syntax, optimizing initial load times.\n      </p>\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>:\n      <p>\n        Directives in Angular 19 integrate with the zoneless reactivity model for improved performance without zone.js.\n      </p>\n    </li>\n    <li>\n      <strong>Server-Side Rendering (SSR)</strong>:\n      <p>\n        Angular 19 optimizes directive hydration in SSR scenarios for better performance and user experience.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Domain-Specific Language (DSL)\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Domain-Specific Languages (DSLs)</span>\n      in Angular 19 are specialized language constructs designed to express solutions for specific problem domains more effectively than general-purpose programming languages. Angular 19 enhances DSL capabilities through signal-based APIs, improved type safety, and more declarative patterns that enable developers to create concise, expressive, and maintainable code for complex application domains.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>What are Domain-Specific Languages in Angular?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      A domain-specific language (DSL) is a specialized language construct that provides a tailored vocabulary and syntax for solving problems in a specific domain more effectively than general-purpose languages.\n    </li>\n    <li>\n      <strong>Types in Angular</strong>:\n      Angular uses both external DSLs (like template syntax) and internal DSLs (fluent APIs within TypeScript) to create expressive abstractions for UI development, routing, forms, and more.\n    </li>\n    <li>\n      <strong>Purpose</strong>:\n      DSLs simplify complex operations, reduce boilerplate code, improve readability, and provide domain-specific abstractions that match how domain experts think about problems.\n    </li>\n    <li>\n      <strong>Implementation</strong>:\n      Angular DSLs are typically implemented through TypeScript interfaces, decorators, and method chaining patterns that create fluent, expressive APIs.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>New DSL Features in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Signal-Based Reactive DSLs</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces powerful signal-based DSLs for reactive programming with improved type safety and developer experience compared to RxJS-based approaches in earlier versions.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Template DSL</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>The template syntax now includes built-in control flow (&#64;if, &#64;for, &#64;switch) that offers a more expressive and type-safe way to define conditional rendering and list iterations.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Form Builder Improvements</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 improves the form builder DSL with signal-based form controls, allowing for more declarative and reactive form definitions with better TypeScript integration.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Router Configuration DSL</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>The routing DSL has been enhanced with better TypeScript type checking, improved lazy loading syntax, and more granular control over route guards and resolvers.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Testing DSL Refinements</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 provides a more expressive and concise testing DSL that simplifies component testing, particularly for signal-based components and standalone features.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Common DSLs in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Form Field Definition DSL</strong>:\n      Creates declarative form field configurations.\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Component Template DSL</strong>:\n      Declarative UI composition through Angular templates.\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Reactive State Management DSL</strong>:\n      Signal-based state management patterns.\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Reactive Form DSL</strong>:\n      Signal-based form control definitions.\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Router Configuration DSL</strong>:\n      Declarative route definitions.\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Testing DSL</strong>:\n      Expressive component testing syntax.\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 DSL Comparison</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">DSL Type</th>\n        <th class=\"py-3 px-4 text-left\">Angular 18</th>\n        <th class=\"py-3 px-4 text-left\">Angular 19</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Template</td>\n        <td class=\"py-3 px-4\">*ngIf, *ngFor directives</td>\n        <td class=\"py-3 px-4\">&#64;if, &#64;for built-in control flow</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Reactive State</td>\n        <td class=\"py-3 px-4\">RxJS-based patterns</td>\n        <td class=\"py-3 px-4\">Signal-based state management</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Forms</td>\n        <td class=\"py-3 px-4\">FormBuilder, FormGroup</td>\n        <td class=\"py-3 px-4\">Signal-based form controls</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Inputs</td>\n        <td class=\"py-3 px-4\">&#64;Input() decorator</td>\n        <td class=\"py-3 px-4\">input() function with transforms</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Router</td>\n        <td class=\"py-3 px-4\">Basic route configuration</td>\n        <td class=\"py-3 px-4\">Enhanced type safety and features</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Design for Readability and Domain Expressiveness</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Domain Terminology</strong>:\n          Create DSL constructs that use vocabulary familiar to domain experts, making the code more readable and understandable to both developers and business stakeholders.\n        </li>\n        <li>\n          <strong>Favor Declarative Over Imperative</strong>:\n          Design DSLs to describe what should happen rather than how it should be implemented. Declarative DSLs are typically more concise and easier to understand.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage TypeScript's Type System</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Strong Type Safety</strong>:\n          Use TypeScript's advanced type features like discriminated unions, generics, and conditional types to create compile-time safety for your DSLs, catching errors early.\n        </li>\n        <li>\n          <strong>Autocomplete Support</strong>:\n          Design DSLs to work well with IDE autocompletion by providing clear type definitions and avoiding dynamic string-based APIs where possible.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Follow Angular Idioms and Patterns</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Consistency with Angular</strong>:\n          Align your DSL syntax and semantics with existing Angular patterns to create a consistent developer experience across your application.\n        </li>\n        <li>\n          <strong>Use Signal-Based Patterns</strong>:\n          In Angular 19, prefer signal-based DSLs over RxJS-based ones for simpler reactive patterns with better TypeScript integration and runtime performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Progressive Complexity</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Simple for Common Cases</strong>:\n          Design DSLs to be extremely simple for the most common use cases, but extensible for more complex scenarios.\n        </li>\n        <li>\n          <strong>Support Progressive Disclosure</strong>:\n          Allow users to discover more advanced features gradually as they need them, rather than overwhelming them with complexity upfront.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Focus on Developer Experience</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Clear Error Messages</strong>:\n          Provide informative error messages that help developers understand what went wrong and how to fix it when using your DSL incorrectly.\n        </li>\n        <li>\n          <strong>Documentation and Examples</strong>:\n          Create comprehensive documentation and examples that demonstrate how to use your DSL effectively for various use cases.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of DSLs in Angular 19:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Improved Expressiveness</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          DSLs use domain-specific terminology and abstractions, making code more expressive and easier to understand for those familiar with the domain.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Reduced Boilerplate</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Well-designed DSLs can significantly reduce the amount of repetitive code, allowing developers to express intent more concisely.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Error Detection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19's improved type system integration allows DSLs to catch more errors at compile time, reducing runtime issues.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Developer Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          DSLs with good IDE integration provide better autocomplete, documentation, and refactoring support, improving productivity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Domain Expert Collaboration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Well-designed DSLs can bridge the gap between developers and domain experts, facilitating better communication and validation of business requirements.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Each DSL introduces its own syntax and semantics that developers need to learn, potentially increasing cognitive load.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Implementation Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Creating effective, type-safe DSLs often requires advanced TypeScript knowledge and careful API design.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The abstraction layer introduced by DSLs can sometimes make debugging more difficult by obscuring the underlying implementation.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Overuse</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Creating too many specialized DSLs can fragment the codebase and increase the learning burden for new team members.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Maintenance Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          DSLs need to be maintained and evolved alongside the application, which can add overhead, especially when Angular introduces new features or patterns.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Signal-Based Programming</strong>:\n      <p>\n        Angular 19's signal-based reactive programming model provides a foundation for creating expressive, type-safe DSLs for state management, form handling, and more.\n      </p>\n    </li>\n    <li>\n      <strong>Built-in Control Flow</strong>:\n      <p>\n        The new template syntax (&#64;if, &#64;for, &#64;switch) represents a significant enhancement to Angular's template DSL, improving type safety and performance.\n      </p>\n    </li>\n    <li>\n      <strong>Reactive Forms</strong>:\n      <p>\n        Angular 19 introduces signal-based reactive forms that provide a more concise and type-safe DSL for form definitions and validation.\n      </p>\n    </li>\n    <li>\n      <strong>Dependency Injection</strong>:\n      <p>\n        Angular's DI system uses a declarative DSL for provider configuration, with improvements in Angular 19 for better type safety and tree-shaking.\n      </p>\n    </li>\n    <li>\n      <strong>Router Configuration</strong>:\n      <p>\n        Angular's router uses a declarative DSL for route definitions, with enhanced type safety and features in Angular 19.\n      </p>\n    </li>\n    <li>\n      <strong>Standalone Components</strong>:\n      <p>\n        Angular 19's standalone components provide a more concise, DSL-like API for component definitions without NgModule boilerplate.\n      </p>\n    </li>\n    <li>\n      <strong>Testing Utilities</strong>:\n      <p>\n        Angular testing utilities offer a DSL for component and service testing, with improvements in Angular 19 for testing signal-based code.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dsl',\n  templateUrl: './dsl.component.html',\n  styleUrls: ['./dsl.component.scss']\n})\nexport class DslComponent {\n  selectedTab = 1;\n\n  code_1 = `\n// Example of an Angular DSL for form field definitions\nexport const FORM_FIELDS = {\n  name: {\n    type: 'text',\n    label: 'Full Name',\n    validators: ['required', 'minLength:2'],\n    errorMessages: {\n      required: 'Name is required',\n      minLength: 'Name must be at least 2 characters'\n    }\n  },\n  email: {\n    type: 'email',\n    label: 'Email Address',\n    validators: ['required', 'email'],\n    errorMessages: {\n      required: 'Email is required',\n      email: 'Please enter a valid email address'\n    }\n  }\n};\n`;\n\n  code_2 = `\n// Angular 19 DSL for declarative UI composition\n@Component({\n  selector: 'app-user-card',\n  template: \\`\n    <div class=\"card\">\n      <div class=\"header\">{{ user.name }}</div>\n      <div class=\"body\">\n        <div class=\"field\">\n          <label>Email:</label>\n          <span>{{ user.email }}</span>\n        </div>\n        <div class=\"field\">\n          <label>Role:</label>\n          <span>{{ user.role }}</span>\n        </div>\n      </div>\n      <div class=\"footer\">\n        <button (click)=\"editUser()\">Edit</button>\n        <button (click)=\"deleteUser()\">Delete</button>\n      </div>\n    </div>\n  \\`\n})\nexport class UserCardComponent {\n  @Input() user: User;\n\n  editUser() { /* ... */ }\n  deleteUser() { /* ... */ }\n}\n`;\n\n  code_3 = `\n// Signal-based DSL for reactive state management in Angular 19\nimport { signal, computed, effect } from '@angular/core';\n\n// Create a mini-store using Angular 19 signals\nexport function createStore<T>(initialState: T) {\n  // State container\n  const state = signal(initialState);\n\n  // Selector functions\n  const select = <K extends keyof T>(key: K) => computed(() => state()[key]);\n\n  // Action dispatcher\n  const dispatch = (action: Partial<T> | ((currentState: T) => Partial<T>)) => {\n    const update = typeof action === 'function'\n      ? action(state())\n      : action;\n\n    state.update(currentValue => ({ ...currentValue, ...update }));\n  };\n\n  // Subscribe to state changes\n  const subscribe = (callback: (state: T) => void) => {\n    return effect(() => {\n      callback(state());\n    });\n  };\n\n  return {\n    state,\n    select,\n    dispatch,\n    subscribe\n  };\n}\n`;\n\n  code_4 = `\n// Angular 19 signals-based reactive form DSL\nimport { signal, computed } from '@angular/core';\n\nexport function createFormControl(initialValue = '', validators = []) {\n  const value = signal(initialValue);\n  const dirty = signal(false);\n  const touched = signal(false);\n  const errors = computed(() => {\n    return validators.reduce((errs, validator) => {\n      const error = validator(value());\n      return error ? { ...errs, ...error } : errs;\n    }, {});\n  });\n\n  const valid = computed(() => Object.keys(errors()).length === 0);\n\n  return {\n    value,\n    setValue: (newValue: string) => {\n      value.set(newValue);\n      dirty.set(true);\n    },\n    markAsTouched: () => touched.set(true),\n    reset: () => {\n      value.set(initialValue);\n      dirty.set(false);\n      touched.set(false);\n    },\n    errors,\n    valid,\n    dirty,\n    touched\n  };\n}\n`;\n\n  code_5 = `\n// Angular 19 RouterConfig DSL for declarative routing\nconst routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    title: 'Home'\n  },\n  {\n    path: 'users',\n    component: UsersComponent,\n    title: 'Users',\n    canActivate: [authGuard],\n    children: [\n      {\n        path: ':id',\n        component: UserDetailComponent,\n        title: 'User Detail',\n        resolve: {\n          user: userResolver\n        }\n      }\n    ]\n  },\n  {\n    path: 'settings',\n    loadComponent: () => import('./settings.component').then(m => m.SettingsComponent),\n    canMatch: [adminGuard]\n  },\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n`;\n\n  code_6 = `\n// Angular 19 Component Test DSL\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { UserListComponent } from './user-list.component';\n\ndescribe('UserListComponent', () => {\n  let component: UserListComponent;\n  let fixture: ComponentFixture<UserListComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [UserListComponent]\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(UserListComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should display users when data is loaded', () => {\n    // Arrange\n    component.users = [\n      { id: 1, name: 'Alice' },\n      { id: 2, name: 'Bob' }\n    ];\n\n    // Act\n    fixture.detectChanges();\n\n    // Assert\n    const userElements = fixture.nativeElement.querySelectorAll('.user-item');\n    expect(userElements.length).toBe(2);\n    expect(userElements[0].textContent).toContain('Alice');\n  });\n});\n`;\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-dynamic-component-loading',\n  templateUrl: './dynamic-component-loading.component.html',\n  styleUrls: ['./dynamic-component-loading.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DynamicComponentLoadingComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n  code_7 = '';\n  code_8 = '';\n  code_9 = '';\n  code_10 = '';\n  code_11 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_7 = data);\n\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_8 = data);\n\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_9.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_9 = data);\n\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_10.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_10 = data);\n\n    this.http.get('assets/codes/dynamic-component-loading/notes/code_11.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_11 = data);\n  }\n\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Dynamic Component Loading\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Dynamic Component Loading</span>\n      in Angular 19 is a powerful technique that allows developers to load, instantiate, and render components at runtime rather than at compile time. Angular 19 introduces significant improvements to this process with enhanced ViewContainerRef APIs, better integration with signals, standalone component support, and new defer block syntax for more efficient and declarative dynamic component loading patterns.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>Dynamic Component Loading Approaches in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Defer Blocks</strong>:\n      Angular 19's new defer blocks provide a declarative, template-based approach to lazy loading components with built-in loading states and triggers.\n    </li>\n    <li>\n      <strong>ViewContainerRef</strong>:\n      Enhanced in Angular 19 with better TypeScript typings and improved performance for programmatic component creation and manipulation.\n    </li>\n    <li>\n      <strong>ngComponentOutlet</strong>:\n      Updated directive for template-based component instantiation with better support for standalone components and signal inputs.\n    </li>\n    <li>\n      <strong>Dynamic Imports</strong>:\n      Improved support for dynamically importing component classes with optimized bundling strategies.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>New Features and Enhancements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Signal-Based Inputs for Dynamic Components</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 enables dynamic components to leverage signal-based inputs, improving communication between parent and dynamically loaded children with better change detection performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Declarative Defer Loading</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>The new <code>&#64;defer</code> block provides a template-based, declarative approach to dynamically loading components with built-in support for loading, error, and placeholder states.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Standalone Component Support</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Dynamic component loading fully supports standalone components without the need for NgModule, simplifying the dynamic loading process and improving bundle optimization.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Context Passing</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 offers enhanced APIs for passing and managing context data to dynamically loaded components, including better type safety and integration with dependency injection.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Embedded View Management</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Refined APIs for managing embedded views and their lifecycle, with improved performance and memory management for components that frequently create and destroy dynamic content.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Key Dynamic Component Loading Techniques</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Using ViewContainerRef with createComponent</strong>:\n      Programmatically create components with enhanced API in Angular 19.\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Using ngComponentOutlet</strong>:\n      Declarative component instantiation in templates.\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Using Defer Blocks (New in Angular 19)</strong>:\n      Declarative lazy loading with comprehensive loading states.\n\n      <button (click)=\"code8.hidden = !code8.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code8 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_8\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Dynamic Component Loading with Signals</strong>:\n      Passing signal-based data to dynamic components.\n\n      <button (click)=\"code9.hidden = !code9.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code9 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_9\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Dynamic Importing Standalone Components</strong>:\n      Loading standalone components on-demand.\n\n      <button (click)=\"code10.hidden = !code10.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code10 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_10\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Dynamic Component Loading Comparison in Angular 19</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Approach</th>\n        <th class=\"py-3 px-4 text-left\">Use Case</th>\n        <th class=\"py-3 px-4 text-left\">Complexity</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Defer Blocks</td>\n        <td class=\"py-3 px-4\">Template-based lazy loading with loading states</td>\n        <td class=\"py-3 px-4\">Low</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ViewContainerRef</td>\n        <td class=\"py-3 px-4\">Programmatic control over component lifecycle</td>\n        <td class=\"py-3 px-4\">Medium</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ngComponentOutlet</td>\n        <td class=\"py-3 px-4\">Simple template-based component switching</td>\n        <td class=\"py-3 px-4\">Low</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Dynamic Imports</td>\n        <td class=\"py-3 px-4\">Advanced lazy loading with custom bundling</td>\n        <td class=\"py-3 px-4\">High</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Prefer Defer Blocks for Common Use Cases</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Declarative Approach</strong>:\n          Use Angular 19's defer blocks for most lazy loading scenarios as they provide a declarative, template-based approach with built-in loading, error, and placeholder states.\n        </li>\n        <li>\n          <strong>Loading Triggers</strong>:\n          Leverage the various loading triggers (on viewport, on interaction, on timer) to optimize when components are loaded based on user needs.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Dynamic Component Communication</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Signal-Based Inputs</strong>:\n          When passing data to dynamically loaded components, prefer signal-based inputs which integrate better with Angular 19's change detection system.\n        </li>\n        <li>\n          <strong>Context Injection</strong>:\n          For complex data requirements, use dependency injection and context tokens to provide data to dynamic components rather than complex property binding chains.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Standalone Components</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Eliminate NgModule Overhead</strong>:\n          Use standalone components for dynamic loading to simplify the code and improve tree-shaking in your application.\n        </li>\n        <li>\n          <strong>Self-Contained Dependencies</strong>:\n          Ensure dynamic components declare all their dependencies to avoid unexpected runtime errors when loaded in isolation.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Manage Component Lifecycle</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Cleanup Resources</strong>:\n          Always clean up dynamically created components by destroying references and unsubscribing from observables to prevent memory leaks.\n        </li>\n        <li>\n          <strong>OnPush Change Detection</strong>:\n          Use OnPush change detection for dynamically loaded components to improve performance, especially with signal-based inputs in Angular 19.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Bundle Size</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Dynamic Import Chunking</strong>:\n          Configure appropriate bundling strategies in your Angular application to ensure dynamically loaded components are efficiently chunked.\n        </li>\n        <li>\n          <strong>Preloading Strategies</strong>:\n          Consider implementing custom preloading strategies for frequently used dynamic components to balance performance and initial load time.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Dynamic Component Loading in Angular 19:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Improved Initial Load Time</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          By loading components only when needed, applications can achieve faster initial load times and better overall performance, especially with Angular 19's optimized lazy loading.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Modularity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Dynamic component loading enables more modular application design by allowing components to be loaded, instantiated, and removed as needed at runtime.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Declarative Loading with Defer</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19's defer blocks provide a declarative approach to dynamic loading with built-in loading states, simplifying previously complex patterns.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Signal Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Dynamic components in Angular 19 work seamlessly with signal-based inputs and reactivity, improving performance and developer experience.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Optimized Standalone Support</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Standalone components simplify dynamic loading by removing NgModule dependencies, resulting in cleaner code and better tree-shaking.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Increased Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Dynamic component loading adds complexity to application architecture, especially when managing component communication and lifecycle events.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Performance Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          While lazy loading improves initial load time, it can introduce slight delays when components are loaded on-demand, requiring careful consideration of loading strategies.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Type Safety Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Maintaining type safety when passing data to dynamically loaded components can be challenging, though Angular 19's improved typing helps mitigate this.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Testing Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Dynamically loaded components require more comprehensive testing strategies to ensure proper loading, initialization, and interaction.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Bundle Configuration Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Optimizing bundle chunking for dynamically loaded components requires careful configuration of build tools and understanding of code splitting strategies.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Defer Blocks</strong>:\n      <p>\n        Angular 19's new template feature for declaratively lazy-loading components with built-in loading, error, and placeholder states.\n      </p>\n    </li>\n    <li>\n      <strong>Standalone Components</strong>:\n      <p>\n        Self-contained components that don't require NgModule declarations, simplifying dynamic loading and improving tree-shaking.\n      </p>\n    </li>\n    <li>\n      <strong>Signal-Based Inputs</strong>:\n      <p>\n        Using the new input() function with dynamically loaded components for reactive, fine-grained updates with better performance.\n      </p>\n    </li>\n    <li>\n      <strong>Angular Hydration</strong>:\n      <p>\n        Optimizing server-side rendering (SSR) and client-side hydration for applications using dynamic component loading techniques.\n      </p>\n    </li>\n    <li>\n      <strong>Lazy Loading Modules</strong>:\n      <p>\n        Angular's router-based approach to lazy loading feature modules, which complements component-level dynamic loading.\n      </p>\n    </li>\n    <li>\n      <strong>Content Projection</strong>:\n      <p>\n        Using ng-content and ng-template with dynamically loaded components to implement flexible content composition patterns.\n      </p>\n    </li>\n    <li>\n      <strong>ViewContainerRef</strong>:\n      <p>\n        Angular's core API for programmatically creating and managing views, including dynamically loaded components.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Eager Loading\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Eager Loading</span>\n      in Angular 19 is the default module and component loading strategy where resources are loaded and initialized during application bootstrap rather than on-demand. Angular 19 enhances eager loading with improved bundle optimization, standalone component support, and signal-based architecture for better startup performance while maintaining the immediacy and reliability of upfront resource loading.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>What is Eager Loading?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      Eager loading is Angular's default loading strategy where components, modules, and other resources are loaded and initialized during application bootstrap rather than on-demand.\n    </li>\n    <li>\n      <strong>Immediate Availability</strong>:\n      All eagerly loaded components are available immediately after the application starts, without additional network requests or loading delays.\n    </li>\n    <li>\n      <strong>Bundle Impact</strong>:\n      Eagerly loaded resources are included in the main application bundle, affecting initial load time but providing reliable post-load performance.\n    </li>\n    <li>\n      <strong>Implementation</strong>:\n      Resources are eagerly loaded by including them in imports, declarations, or by directly referencing them in the application's main module or bootstrap configuration.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Eager Loading Enhancements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Standalone Component Optimization</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces improved tree-shaking and bundle optimization for eagerly loaded standalone components, reducing bundle sizes even with eager loading.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal-Based Architecture</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>The new signal-based reactivity model in Angular 19 optimizes eager loading by reducing the overhead of change detection for eagerly loaded components.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Dependency Injection</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 optimizes the dependency injection system for eagerly loaded components and services, improving initialization times during application bootstrap.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Partial Hydration Support</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>New support for eager loading with partial hydration allows applications to prioritize which eagerly loaded components get hydrated first, improving perceived performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Advanced Preloading Strategies</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces refined preloading strategies that bridge the gap between eager and lazy loading by eagerly loading critical components and preloading others after initialization.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Eager Loading Implementation in Angular 19</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>NgModule-Based Eager Loading</strong>:\n      Traditional approach using Angular modules.\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Standalone Component Eager Loading</strong>:\n      Modern approach using Angular 19's standalone components.\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Route Configuration</strong>:\n      Eager loading through route configuration.\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Signal-Based Eager Components</strong>:\n      Optimized eager loading with Angular 19 signals.\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Eager vs. Lazy Loading in Angular 19</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Aspect</th>\n        <th class=\"py-3 px-4 text-left\">Eager Loading</th>\n        <th class=\"py-3 px-4 text-left\">Lazy Loading</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Initial Load Time</td>\n        <td class=\"py-3 px-4\">Longer initial load</td>\n        <td class=\"py-3 px-4\">Faster initial load</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Runtime Performance</td>\n        <td class=\"py-3 px-4\">Immediate access to all features</td>\n        <td class=\"py-3 px-4\">Loading delays when accessing features</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Bundle Size</td>\n        <td class=\"py-3 px-4\">Larger initial bundle</td>\n        <td class=\"py-3 px-4\">Smaller initial bundle, multiple chunks</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Implementation</td>\n        <td class=\"py-3 px-4\">Simpler implementation</td>\n        <td class=\"py-3 px-4\">More complex setup</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Use Case</td>\n        <td class=\"py-3 px-4\">Critical features, smaller apps</td>\n        <td class=\"py-3 px-4\">Secondary features, larger apps</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Choose the Right Loading Strategy</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Eagerly Load Core Components</strong>:\n          Use eager loading for components that are immediately visible on application launch or critical to the user experience, such as navigation bars, authentication components, and core layout elements.\n        </li>\n        <li>\n          <strong>Combined Approach</strong>:\n          Implement a hybrid approach where essential features are eagerly loaded and secondary features are lazy loaded to balance immediate availability with optimization.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Eagerly Loaded Components</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Standalone Components</strong>:\n          Angular 19's standalone components provide better tree-shaking for eagerly loaded components, reducing unnecessary code in the bundle.\n        </li>\n        <li>\n          <strong>Implement Signal-Based Reactivity</strong>:\n          Leverage Angular 19's signal-based architecture for eagerly loaded components to reduce change detection overhead during application startup.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Consider Advanced Preloading Strategies</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Configure Preloading</strong>:\n          Use Angular 19's enhanced preloading strategies to eagerly load critical components while preloading secondary ones to improve overall application performance.\n\n          <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code6 hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_6\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Custom Preloading Strategy</strong>:\n          Implement a custom preloading strategy that prioritizes modules based on user behavior analytics or application-specific requirements.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Initial Route Rendering</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Component Input Binding</strong>:\n          Use Angular 19's enhanced component input binding for route parameters in eagerly loaded route components for faster initialization.\n\n          <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code3 hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_3\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Prioritize Critical Routes</strong>:\n          Eagerly load routes that are part of the initial user flow while lazily loading routes for secondary or less frequently used features.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Bundle Optimization</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Audit Dependencies</strong>:\n          Regularly audit eagerly loaded components and their dependencies to ensure only necessary code is included in the main bundle.\n        </li>\n        <li>\n          <strong>Code Splitting Even with Eager Loading</strong>:\n          Use Angular 19's improved build tools to implement code splitting strategies even for eagerly loaded modules, keeping critical features eagerly loaded while optimizing bundle size.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Eager Loading in Angular 19:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Immediate Feature Availability</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          All eagerly loaded components and features are available immediately after the application loads, providing a smoother user experience without loading delays.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simpler Implementation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Eager loading is Angular's default loading strategy and requires less complex code than lazy loading, making it easier to implement and maintain.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Error Detection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Loading all components at startup means dependency issues or errors are discovered immediately rather than when a user tries to access a specific feature.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Integration with Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19's signal-based architecture provides more efficient change detection for eagerly loaded components, reducing the traditional performance penalty.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simplified Testing</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Testing eagerly loaded components is more straightforward as they're always available and initialized, simplifying integration and end-to-end testing.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Larger Initial Bundle Size</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Eagerly loading all components increases the initial bundle size, which can lead to longer load times and reduced performance on first visit.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Slower Startup Time</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The application has to parse, compile, and initialize all eagerly loaded components during startup, which can delay the time to interactive state.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Wasted Resources</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Resources are loaded for features that the user might never access, potentially wasting bandwidth and processing power.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Mobile Performance Impact</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          On mobile devices with limited bandwidth and processing power, eager loading can significantly impact the initial application load experience.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Scaling Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          As applications grow in size and complexity, eager loading becomes less practical and may require a transition to a more hybrid loading approach.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Lazy Loading</strong>:\n      <p>\n        The counterpart to eager loading that loads modules and components on-demand, reducing initial bundle size and improving startup performance.\n      </p>\n    </li>\n    <li>\n      <strong>Standalone Components</strong>:\n      <p>\n        Angular 19's standalone component architecture improves eager loading performance through better tree-shaking and dependency optimization.\n      </p>\n    </li>\n    <li>\n      <strong>Signal-Based Architecture</strong>:\n      <p>\n        The new reactive programming model in Angular 19 enhances performance of eagerly loaded components through more efficient change detection.\n      </p>\n    </li>\n    <li>\n      <strong>Preloading Strategies</strong>:\n      <p>\n        Techniques that bridge eager and lazy loading by loading critical components eagerly and then proactively loading others based on various strategies.\n      </p>\n    </li>\n    <li>\n      <strong>Bundle Optimization</strong>:\n      <p>\n        Build optimizations in Angular 19 that reduce the performance impact of eager loading through improved tree-shaking and code splitting.\n      </p>\n    </li>\n    <li>\n      <strong>Partial Hydration</strong>:\n      <p>\n        New approach in Angular 19 that allows prioritizing which eagerly loaded components get hydrated first, improving perceived performance.\n      </p>\n    </li>\n    <li>\n      <strong>Build Configuration</strong>:\n      <p>\n        Angular 19's enhanced build tools provide better control over how eagerly loaded components are bundled and optimized for production.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-eager-loading',\n  templateUrl: './eager-loading.component.html',\n  styleUrls: ['./eager-loading.component.scss']\n})\nexport class EagerLoadingComponent {\n  selectedTab = 1;\n\n  // Example code snippets\n  code_1 = `\n// NgModule configuration for eager loading components\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { EagerComponent } from './eager/eager.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EagerComponent // Eagerly loaded component\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n`;\n\n  code_2 = `\n// Angular 19 standalone component eager loading\nimport { Component } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { EagerComponent } from './eager.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    EagerComponent // Eagerly imported standalone component\n  ],\n  template: \\`\n    <h1>Main Application</h1>\n    <app-eager></app-eager>\n  \\`\n})\nexport class AppComponent {}\n\nbootstrapApplication(AppComponent);\n`;\n\n  code_3 = `\n// Angular 19 AppConfig for eager loading route components\nimport { ApplicationConfig } from '@angular/core';\nimport { provideRouter, withComponentInputBinding } from '@angular/router';\n\nimport { routes } from './app.routes';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(\n      routes,\n      withComponentInputBinding() // Eager binding of route params to component inputs\n    )\n  ]\n};\n`;\n\n  code_4 = `\n// Angular 19 eager loading with signals for performance optimization\nimport { Component, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-eager-feature',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div>\n      <h2>Eagerly Loaded Feature</h2>\n      <p>Counter value: {{ counter() }}</p>\n      <button (click)=\"increment()\">Increment</button>\n    </div>\n  \\`\n})\nexport class EagerFeatureComponent {\n  // Signal-based state for efficient change detection\n  counter = signal(0);\n\n  increment() {\n    this.counter.update(value => value + 1);\n  }\n}\n`;\n\n  code_5 = `\n// app.routes.ts - Eager vs Lazy loading routes in Angular 19\nimport { Routes } from '@angular/router';\nimport { EagerComponent } from './eager/eager.component';\n\nexport const routes: Routes = [\n  {\n    path: 'eager',\n    component: EagerComponent // Eagerly loaded route\n  },\n  {\n    path: 'lazy',\n    loadComponent: () => import('./lazy/lazy.component').then(m => m.LazyComponent) // Lazy loaded route\n  }\n];\n`;\n\n  code_6 = `\n// Angular 19 eager loading with advanced preloading strategy\nimport { PreloadAllModules, provideRouter, withPreloading } from '@angular/router';\nimport { provideHttpClient } from '@angular/common/http';\n\nexport const appConfig = {\n  providers: [\n    provideHttpClient(),\n    provideRouter(\n      routes,\n      withPreloading(PreloadAllModules), // Preloads all lazy modules after eager modules are loaded\n    )\n  ]\n};\n`;\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    ECMAScript\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">ECMAScript</span>\n      is the standardized scripting language specification that serves as the foundation for JavaScript. Angular 19 fully embraces modern ECMAScript features (ES2022+) to deliver enhanced developer experience, improved performance, and cleaner code. From signals and reactivity powered by ES proxies to private class fields and top-level await, Angular 19 leverages the latest language capabilities for optimal web application development.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>What is ECMAScript?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      ECMAScript is the official name of the JavaScript language standard defined by ECMA International. It establishes the syntax, semantics, and core features that JavaScript implementations should follow.\n    </li>\n    <li>\n      <strong>Versioning</strong>:\n      ECMAScript versions (e.g., ES6/ES2015, ES2022) define new language features and improvements. Angular 19 leverages features up to ES2022 and beyond.\n    </li>\n    <li>\n      <strong>Browser Compatibility</strong>:\n      Modern browsers support the latest ECMAScript features, but Angular's build process ensures backward compatibility through transpilation and polyfills.\n    </li>\n    <li>\n      <strong>TypeScript Integration</strong>:\n      Angular uses TypeScript, which is a superset of ECMAScript, adding static typing and additional features while maintaining compatibility with ECMAScript standards.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Key ECMAScript Features in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Private Class Fields (#)</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 fully embraces ES2022's private class fields syntax (# prefix) for encapsulation, used extensively in the Signal API implementation and standalone components.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>ES Decorators</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular's metadata-based architecture uses TypeScript decorators (based on an earlier ECMAScript proposal), with Angular 19 preparing for a path to the official ECMAScript decorator standard.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Nullish Coalescing (??) and Optional Chaining (?.)</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 templates and component code make extensive use of these operators for safer property access and default values, improving template readability and error prevention.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Top-Level Await</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 supports ES2022's top-level await in modules, enabling better asynchronous code handling without immediately wrapping code in async functions.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal-Based Reactivity</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19's signal architecture leverages modern ECMAScript features like Proxies and fine-grained reactivity patterns for improved performance and developer experience.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Using Modern ECMAScript Features in Angular 19</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Basic ES Features in Components</strong>:\n      Common ES features like arrow functions, template literals, destructuring, and async/await.\n\n      <button (click)=\"code_1_ref.hidden = !code_1_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_1_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Advanced ES2022+ Features</strong>:\n      Using private fields, nullish coalescing, and other modern ECMAScript features with Angular 19.\n\n      <button (click)=\"code_2_ref.hidden = !code_2_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_2_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Configuring TypeScript for Latest ECMAScript</strong>:\n      Setting up tsconfig.json to use the latest ECMAScript features.\n\n      <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_3_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>json</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['json']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Custom Decorators in Angular 19</strong>:\n      Creating and using decorators in Angular components.\n\n      <button (click)=\"code_4_ref.hidden = !code_4_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_4_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>ECMAScript Versions Used in Angular 19</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">ECMAScript Version</th>\n        <th class=\"py-3 px-4 text-left\">Key Features</th>\n        <th class=\"py-3 px-4 text-left\">Angular 19 Usage</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ES2015 (ES6)</td>\n        <td class=\"py-3 px-4\">Classes, modules, arrow functions, template literals</td>\n        <td class=\"py-3 px-4\">Core component architecture, basic syntax</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ES2016 (ES7)</td>\n        <td class=\"py-3 px-4\">Array.prototype.includes, exponentiation operator</td>\n        <td class=\"py-3 px-4\">Helper methods, array operations</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ES2017 (ES8)</td>\n        <td class=\"py-3 px-4\">Async/await, Object.entries, Object.values</td>\n        <td class=\"py-3 px-4\">Async operations, HTTP calls, data handling</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ES2018 (ES9)</td>\n        <td class=\"py-3 px-4\">Rest/spread properties, async iteration, Promise.finally</td>\n        <td class=\"py-3 px-4\">Component data handling, async cleanup</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ES2019 (ES10)</td>\n        <td class=\"py-3 px-4\">Array.prototype.flat, Object.fromEntries</td>\n        <td class=\"py-3 px-4\">Form handling, data transformation</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ES2020 (ES11)</td>\n        <td class=\"py-3 px-4\">Optional chaining, nullish coalescing, BigInt</td>\n        <td class=\"py-3 px-4\">Templates, signal API implementations</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ES2021 (ES12)</td>\n        <td class=\"py-3 px-4\">Logical assignment operators, replaceAll</td>\n        <td class=\"py-3 px-4\">Form controls, string manipulation</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ES2022 (ES13)</td>\n        <td class=\"py-3 px-4\">Private fields (#), top-level await, RegExp match indices</td>\n        <td class=\"py-3 px-4\">Signal architecture, class encapsulation</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Leverage Modern ECMAScript Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Private Fields with # Syntax</strong>:\n          Embrace ES2022's private field syntax for better encapsulation in Angular 19 components and services, improving code organization and reducing the risk of unintended access.\n        </li>\n        <li>\n          <strong>Adopt Optional Chaining and Nullish Coalescing</strong>:\n          Use optional chaining (?.) and nullish coalescing (??) operators in templates and component code for better error handling and cleaner code, especially when dealing with potentially undefined or null values.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Write Modern Asynchronous Code</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Prefer Async/Await Over Promises</strong>:\n          Use the async/await pattern for asynchronous operations in Angular 19 components, services, and guards for more readable and maintainable code.\n        </li>\n        <li>\n          <strong>Integrate with Signal API</strong>:\n          Combine async/await with Angular 19's signal API to create responsive applications with simpler code organization by using effects and computed values for side effects and derived state.\n\n          <button (click)=\"code_5_ref.hidden = !code_5_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code_5_ref hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_5\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Module Usage</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Leverage ES Modules Effectively</strong>:\n          Use native ES modules with named and default exports for better code organization and tree-shakability, improving bundle size and application performance.\n\n          <button (click)=\"code_6_ref.hidden = !code_6_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code_6_ref hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_6\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Implement Dynamic Imports</strong>:\n          Use dynamic imports via import() for code splitting, lazy loading, and performance optimization in larger Angular 19 applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Configure TypeScript Properly</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Target Modern Runtimes</strong>:\n          Configure TypeScript to target ES2022 in tsconfig.json for Angular 19 projects to leverage the latest language features and optimizations while relying on Angular's build tools for backward compatibility.\n\n          <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n        </li>\n        <li>\n          <strong>Enable Strict Type Checking</strong>:\n          Enable strict type checking in TypeScript to catch potential errors early and ensure type safety throughout your Angular 19 application.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize for Modern Browsers</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Differential Loading</strong>:\n          Leverage Angular 19's build system to generate separate bundles for modern and legacy browsers, allowing modern browsers to receive smaller, more optimized code using the latest ECMAScript features.\n        </li>\n        <li>\n          <strong>Consider Browser Support Requirements</strong>:\n          Analyze your target audience and adjust browserlist configuration to optimize the balance between using modern ECMAScript features and maintaining backward compatibility.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Using Modern ECMAScript in Angular 19:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Enhanced Developer Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Modern ECMAScript features like optional chaining, nullish coalescing, and private fields provide a more ergonomic and expressive syntax, making Angular 19 code cleaner and easier to write and understand.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          ES2022+ features enable more efficient code execution in modern browsers. Angular 19's use of these features, especially in the signal architecture, results in faster rendering and better runtime performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Encapsulation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Private class fields (#) provide true encapsulation at the language level, enabling Angular 19 to create more robust component and service implementations with clearly defined public APIs.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simplified Asynchronous Code</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Async/await, combined with top-level await in modules, makes asynchronous code more readable and maintainable, improving Angular 19's handling of HTTP requests, animations, and other async operations.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Reduced Bundle Size</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Using native ECMAScript features reduces the need for polyfills and workarounds, enabling Angular 19 to produce smaller bundle sizes for modern browsers through differential loading.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Browser Compatibility Concerns</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          When targeting older browsers, using the latest ECMAScript features requires transpilation and polyfills, which can increase bundle size and development complexity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Developers familiar with older JavaScript patterns may need time to adapt to modern ECMAScript features and understand how Angular 19 leverages them, especially in complex patterns like signals.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Tooling Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Some development tools, linters, and third-party libraries may not fully support the latest ECMAScript features, requiring configuration adjustments or workarounds in Angular 19 projects.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Decorator Standard Flux</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular relies heavily on decorators, but the ECMAScript decorator proposal has changed multiple times. Angular 19 still uses TypeScript's implementation, which may differ from the eventual ECMAScript standard.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Advanced ECMAScript features like proxies (used in signals) and private fields can sometimes make debugging more complex, as their internal representations in browser devtools may not be straightforward.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>TypeScript in Angular</strong>:\n      <p>\n        Understanding how TypeScript extends ECMAScript with static typing and additional features, and how Angular 19 leverages these capabilities for enhanced development.\n      </p>\n    </li>\n    <li>\n      <strong>Signals and Reactivity</strong>:\n      <p>\n        How Angular 19's signal architecture utilizes modern ECMAScript features like proxies, private fields, and fine-grained reactivity patterns for improved performance.\n      </p>\n    </li>\n    <li>\n      <strong>Angular Compiler (AOT)</strong>:\n      <p>\n        How the Angular compiler processes and optimizes modern ECMAScript code for production, including tree-shaking and dead code elimination.\n      </p>\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>:\n      <p>\n        How Angular 19's zoneless application architecture relies on modern ECMAScript features to replace zone.js dependency for change detection.\n      </p>\n    </li>\n    <li>\n      <strong>Dynamic Imports and Lazy Loading</strong>:\n      <p>\n        Using ECMAScript's dynamic import() feature for implementing lazy loading and code splitting in Angular 19 applications.\n      </p>\n    </li>\n    <li>\n      <strong>Decorators and Metadata</strong>:\n      <p>\n        Understanding Angular's use of decorators based on an early ECMAScript proposal and how they provide metadata for the framework.\n      </p>\n    </li>\n    <li>\n      <strong>Browser Compatibility</strong>:\n      <p>\n        Strategies for handling ECMAScript feature support across different browsers in Angular 19 applications, including differential loading and polyfills.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-ecmascript',\n  templateUrl: './ecmascript.component.html',\n  styleUrls: ['./ecmascript.component.scss']\n})\nexport class EcmascriptComponent {\n  selectedTab = 1;\n\n  // Template reference variables\n  code_1_ref: any;\n  code_2_ref: any;\n  code_3_ref: any;\n  code_4_ref: any;\n  code_5_ref: any;\n  code_6_ref: any;\n\n  // Example code snippets\n  code_1 = `\n// Using ES6+ features in Angular 19\nimport { Component, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-es-features',\n  standalone: true,\n  template: \\`\n    <div>\n      <h2>ES Features in Angular</h2>\n      <p>Count: {{ counter() }}</p>\n      <button (click)=\"increment()\">Increment</button>\n    </div>\n  \\`\n})\nexport class EsFeaturesComponent {\n  // Signal API (leveraging ES proxies and reactivity)\n  counter = signal(0);\n\n  // Arrow function\n  increment = () => {\n    // Optional chaining\n    this.counter?.update(val => val + 1);\n  }\n\n  // Async/await with promises\n  async fetchData() {\n    try {\n      // Template literals\n      const url = \\`https://api.example.com/data\\`;\n      const response = await fetch(url);\n\n      // Nullish coalescing\n      const data = await response.json() ?? { default: 'No data' };\n\n      // Destructuring\n      const { items = [] } = data;\n\n      // Spread operator\n      return [...items];\n    } catch {\n      // Promise rejection handled\n      return [];\n    }\n  }\n}`;\n\n  code_2 = `\n// Angular 19 leveraging ES2022+ features\nimport { Component, computed, signal, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-modern-es',\n  standalone: true,\n  template: \\`\n    <div>\n      <h3>Modern ECMAScript in Angular 19</h3>\n      <div>Status: {{ status() }}</div>\n      <div>Data: {{ #if dataReady() }}{{ formattedData() }}{{ #else }}Loading...{{ #endif }}</div>\n      <button (click)=\"loadData()\">Reload</button>\n    </div>\n  \\`\n})\nexport class ModernEsComponent {\n  // Class fields (public/private)\n  #http = inject(HttpClient);\n\n  // Private fields with # syntax (ES2022)\n  #baseUrl = 'https://api.example.com';\n\n  // Signals\n  data = signal<any>(null);\n  loading = signal(false);\n\n  // Computed values (derived state)\n  dataReady = computed(() => !!this.data());\n  status = computed(() => this.loading() ? 'Loading...' : 'Ready');\n  formattedData = computed(() => {\n    // Optional chaining with nullish coalescing\n    return JSON.stringify(this.data()?.result ?? {}, null, 2);\n  });\n\n  // Top-level await (in module context)\n  async loadData() {\n    this.loading.set(true);\n\n    try {\n      // Using Promise methods\n      const response = await Promise.all([\n        this.#fetchMainData(),\n        this.#fetchSecondaryData()\n      ]);\n\n      // Object rest/spread\n      this.data.set({\n        ...response[0],\n        secondary: response[1]\n      });\n    } finally {\n      this.loading.set(false);\n    }\n  }\n\n  // Private method\n  #fetchMainData() {\n    return this.#http.get(\\`\\${this.#baseUrl}/main\\`).pipe(\n      takeUntilDestroyed()\n    );\n  }\n\n  // Private method\n  #fetchSecondaryData() {\n    return this.#http.get(\\`\\${this.#baseUrl}/secondary\\`).pipe(\n      takeUntilDestroyed()\n    );\n  }\n}`;\n\n  code_3 = `\n// tsconfig.json for enabling latest ECMAScript features in Angular 19\n{\n  \"compileOnSave\": false,\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./dist/out-tsc\",\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"noImplicitOverride\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"sourceMap\": true,\n    \"declaration\": false,\n    \"downlevelIteration\": true,\n    \"experimentalDecorators\": true,\n    \"moduleResolution\": \"node\",\n    \"importHelpers\": true,\n    \"target\": \"ES2022\",          // Using ES2022 as target\n    \"module\": \"ES2022\",          // Module system\n    \"useDefineForClassFields\": false,\n    \"lib\": [\n      \"ES2022\",                  // Include ES2022 library\n      \"dom\"\n    ],\n    \"skipLibCheck\": true\n  },\n  \"angularCompilerOptions\": {\n    \"enableI18nLegacyMessageIdFormat\": false,\n    \"strictInjectionParameters\": true,\n    \"strictInputAccessModifiers\": true,\n    \"strictTemplates\": true\n  }\n}`;\n\n  code_4 = `\n// Using ECMAScript decorators with Angular 19\n// Note: These use TypeScript's decorator syntax which deviates from TC39 decorator proposal\n\n// Custom property decorator\nfunction Min(min: number) {\n  return function(target: any, propertyKey: string) {\n    // Property descriptor manipulation\n    let value = target[propertyKey];\n\n    const getter = function() {\n      return value;\n    };\n\n    const setter = function(newVal: number) {\n      if (newVal < min) {\n        console.warn(\\`Value can't be less than \\${min}\\`);\n        value = min;\n      } else {\n        value = newVal;\n      }\n    };\n\n    Object.defineProperty(target, propertyKey, {\n      get: getter,\n      set: setter,\n      enumerable: true,\n      configurable: true\n    });\n  };\n}\n\n// Custom method decorator\nfunction LogMethod() {\n  return function(\n    target: any,\n    propertyKey: string,\n    descriptor: PropertyDescriptor\n  ) {\n    // Save a reference to the original method\n    const originalMethod = descriptor.value;\n\n    // Replace the original method with a new one\n    descriptor.value = function(...args: any[]) {\n      console.log(\\`Calling \\${propertyKey} with arguments: \\${JSON.stringify(args)}\\`);\n\n      try {\n        // Call the original method\n        const result = originalMethod.apply(this, args);\n        console.log(\\`Method \\${propertyKey} returned: \\${JSON.stringify(result)}\\`);\n        return result;\n      } catch (e) {\n        console.error(\\`Method \\${propertyKey} threw: \\${e}\\`);\n        throw e;\n      }\n    };\n\n    return descriptor;\n  };\n}\n\n@Component({\n  selector: 'app-decorated',\n  template: \\`\n    <div>\n      <h3>Value: {{ value }}</h3>\n      <button (click)=\"increment()\">Increment</button>\n      <button (click)=\"setValue(-10)\">Set Invalid Value</button>\n      <button (click)=\"setValue(50)\">Set Valid Value</button>\n    </div>\n  \\`\n})\nexport class DecoratedComponent {\n  @Min(0) value: number = 10;\n\n  @LogMethod()\n  increment() {\n    this.value++;\n    return this.value;\n  }\n\n  @LogMethod()\n  setValue(val: number) {\n    this.value = val;\n    return this.value;\n  }\n}`;\n\n  code_5 = `\n// Angular 19 using the latest ECMAScript features for asynchronous programming\nimport { Component, signal, effect, computed, inject } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\n@Component({\n  selector: 'app-async-es',\n  standalone: true,\n  template: \\`\n    <div>\n      <h3>Async ES Features</h3>\n\n      @if (isLoading()) {\n        <div>Loading...</div>\n      } @else if (error()) {\n        <div class=\"error\">{{ error() }}</div>\n      } @else if (users().length) {\n        <ul>\n          @for (user of users(); track user.id) {\n            <li>\n              {{ user.name }} ({{ user.email }})\n              <button (click)=\"selectUser(user)\">Select</button>\n            </li>\n          }\n        </ul>\n      } @else {\n        <div>No users found</div>\n      }\n\n      @if (selectedUser()) {\n        <div>\n          <h4>Selected User:</h4>\n          <pre>{{ selectedUserJson() }}</pre>\n        </div>\n      }\n    </div>\n  \\`\n})\nexport class AsyncEsComponent {\n  #http = inject(HttpClient);\n\n  // Signals for state management\n  isLoading = signal(false);\n  error = signal<string | null>(null);\n  users = signal<User[]>([]);\n  selectedUser = signal<User | null>(null);\n\n  // Computed values\n  selectedUserJson = computed(() => {\n    return this.selectedUser() ? JSON.stringify(this.selectedUser(), null, 2) : '';\n  });\n\n  constructor() {\n    // Effects for side effects (like logging)\n    effect(() => {\n      if (this.selectedUser()) {\n        console.log(\\`User selected: \\${this.selectedUser()?.name}\\`);\n      }\n    });\n\n    // Load data on init\n    this.loadUsers();\n  }\n\n  // Async/await with error handling\n  async loadUsers() {\n    this.isLoading.set(true);\n    this.error.set(null);\n\n    try {\n      // Await the Promise from the HTTP call\n      const users = await this.#http.get<User[]>('https://jsonplaceholder.typicode.com/users')\n        .pipe(\n          catchError(err => {\n            // Handle HTTP errors\n            console.error('Error fetching users', err);\n            throw new Error('Failed to load users. Please try again later.');\n          })\n        )\n        .toPromise();\n\n      // Update signal with fetched data\n      this.users.set(users || []);\n    } catch (e) {\n      // Handle any errors in the async operation\n      this.error.set(e instanceof Error ? e.message : 'Unknown error occurred');\n      this.users.set([]);\n    } finally {\n      // Always run this code\n      this.isLoading.set(false);\n    }\n  }\n\n  // Method to select a user\n  selectUser(user: User) {\n    this.selectedUser.set(user);\n  }\n}`;\n\n  code_6 = `\n// Using ES modules in Angular 19\n// file: custom-utilities.ts\nexport function formatDate(date: Date): string {\n  return new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }).format(date);\n}\n\nexport function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n// Named export\nexport class StringUtils {\n  static truncate(str: string, length: number): string {\n    return str.length > length ? str.substring(0, length) + '...' : str;\n  }\n}\n\n// Default export\nexport default function logger(message: string): void {\n  console.log(\\`[LOG]: \\${message}\\`);\n}\n\n// Using the module in a component\nimport logger, { formatDate, capitalize, StringUtils } from './custom-utilities';\n\n@Component({\n  selector: 'app-es-modules',\n  template: \\`\n    <div>\n      <p>Date: {{ formattedDate }}</p>\n      <p>Name: {{ capitalizedName }}</p>\n      <p>Description: {{ truncatedDescription }}</p>\n    </div>\n  \\`\n})\nexport class EsModulesComponent implements OnInit {\n  formattedDate = '';\n  capitalizedName = '';\n  truncatedDescription = '';\n\n  ngOnInit() {\n    // Using the imported functions\n    this.formattedDate = formatDate(new Date());\n    this.capitalizedName = capitalize('angular');\n    this.truncatedDescription = StringUtils.truncate(\n      'This is a very long description that needs to be truncated to fit the UI',\n      30\n    );\n\n    // Using the default export\n    logger('Component initialized');\n  }\n}`;\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Element\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Element</span>\n      in Angular 19 refers to DOM elements that applications interact with through HTML templates. Angular provides enhanced ways to work with DOM elements through template reference variables, ElementRef, and the signals-based reactive system. Modern approaches for element interaction include leveraging the Renderer2 service, improved lifecycle hooks, and integrating with new features like effect() for DOM manipulation.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n<ng-template #notesRef>\n  <p>What are Elements in Angular?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      DOM elements in Angular are HTML elements that form the structure of the user interface. Angular provides various ways to access, manipulate, and interact with these elements programmatically.\n    </li>\n    <li>\n      <strong>Template Reference Variables</strong>:\n      Angular allows creating references to DOM elements using the # syntax in templates, which can then be accessed in the component class.\n    </li>\n    <li>\n      <strong>ElementRef</strong>:\n      A wrapper around a native DOM element that provides access to the element from component code.\n    </li>\n    <li>\n      <strong>Renderer2</strong>:\n      A service that provides an abstraction layer for manipulating DOM elements safely, which is particularly important for platform-independent applications.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Element Improvements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Signal-Based DOM Updates</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces improved integration between the signals system and DOM manipulation, allowing more efficient and reactive DOM updates through the effect() function that automatically tracks dependencies.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Lifecycle Hooks</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>New AfterRender and AfterNextRender hooks provide better control over DOM operations, ensuring they happen at the optimal time in the rendering cycle.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Memory Management</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 offers better garbage collection and memory handling for DOM elements, particularly with the takeUntilDestroyed operator from @angular/core/rxjs-interop for automatic cleanup.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>TypeScript Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Stronger typing for ElementRef with improved generic support, allowing better type safety when working with specific element types.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Zone-less DOM Updates</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19's signal architecture allows DOM manipulations to happen outside of Zone.js, improving performance for element manipulations.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Working with Elements in Angular 19</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Basic Element Reference</strong>:\n      Using ViewChild to get a reference to a DOM element.\n\n      <button (click)=\"code_1_ref.hidden = !code_1_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_1_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>ElementRef with Signals</strong>:\n      Combining ElementRef with Angular 19's signals system.\n\n      <button (click)=\"code_2_ref.hidden = !code_2_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_2_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Optimized Element Access</strong>:\n      Efficient access to DOM elements with rxjs-interop.\n\n      <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_3_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Renderer2 for Safe DOM Manipulation</strong>:\n      Using Renderer2 for cross-platform DOM operations.\n\n      <button (click)=\"code_4_ref.hidden = !code_4_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_4_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Element Access Methods Comparison</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Method</th>\n        <th class=\"py-3 px-4 text-left\">Use Case</th>\n        <th class=\"py-3 px-4 text-left\">Pros</th>\n        <th class=\"py-3 px-4 text-left\">Cons</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Template Reference Variables (#var)</td>\n        <td class=\"py-3 px-4\">Simple element access within templates</td>\n        <td class=\"py-3 px-4\">Direct, clean syntax</td>\n        <td class=\"py-3 px-4\">Limited to template scope</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ViewChild/ViewChildren</td>\n        <td class=\"py-3 px-4\">Component class access to elements</td>\n        <td class=\"py-3 px-4\">Type-safe, integrated with lifecycle</td>\n        <td class=\"py-3 px-4\">Only available after view init</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">ElementRef</td>\n        <td class=\"py-3 px-4\">Direct DOM manipulation</td>\n        <td class=\"py-3 px-4\">Simple, direct access to native element</td>\n        <td class=\"py-3 px-4\">Not platform agnostic</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Renderer2</td>\n        <td class=\"py-3 px-4\">Safe, cross-platform DOM manipulation</td>\n        <td class=\"py-3 px-4\">Platform independent, security</td>\n        <td class=\"py-3 px-4\">More verbose</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Signal-based effects</td>\n        <td class=\"py-3 px-4\">Reactive DOM updates</td>\n        <td class=\"py-3 px-4\">Automatic tracking, fine-grained updates</td>\n        <td class=\"py-3 px-4\">New API, requires understanding signals</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use Renderer2 Instead of Direct DOM Manipulation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Platform Independence</strong>:\n          Always use Renderer2 for DOM manipulations instead of direct ElementRef operations. This ensures your application works correctly across different platforms (browser, server-side rendering, web workers).\n        </li>\n        <li>\n          <strong>Security</strong>:\n          Renderer2 helps prevent XSS vulnerabilities by providing a secure abstraction over DOM operations. Direct manipulation of nativeElement can bypass Angular's security mechanisms.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Signals for DOM Updates</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Reactive DOM Updates</strong>:\n          Use Angular 19's signal system with effects for reactive DOM updates. This approach automatically tracks dependencies and only updates elements when relevant data changes.\n\n          <button (click)=\"code_5_ref.hidden = !code_5_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code_5_ref hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_5\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Zone-less Applications</strong>:\n          In Angular 19's zone-less mode, combine signals and effects for DOM manipulations to ensure changes are properly tracked without Zone.js.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Performance</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Lazy Element Initialization</strong>:\n          Use Intersection Observer API for elements that don't need to be initialized until they're visible, reducing initial rendering time and memory usage.\n\n          <button (click)=\"code_6_ref.hidden = !code_6_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code_6_ref hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_6\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Avoid Excessive DOM Operations</strong>:\n          Batch DOM operations and minimize direct manipulations to prevent layout thrashing. Use debounce/throttle for frequent updates triggered by user interactions.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Clean Up Element References</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Automatic Cleanup</strong>:\n          Use the takeUntilDestroyed operator from @angular/core/rxjs-interop for automatic cleanup of subscriptions related to element events.\n        </li>\n        <li>\n          <strong>Explicit Destruction</strong>:\n          Implement OnDestroy and properly clean up any manual event listeners, observers, or third-party integrations with DOM elements.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Type Safety</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use ElementRef with Type Parameters</strong>:\n          Always specify the correct type when working with ElementRef to get better type safety and IDE support.\n          <pre><code class=\"text-xs\">@ViewChild('myInput') myInput!: ElementRef&lt;HTMLInputElement&gt;;</code></pre>\n        </li>\n        <li>\n          <strong>Create Typed Wrappers</strong>:\n          For complex elements with multiple operations, create typed wrapper services that encapsulate DOM manipulation logic.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Angular 19's Element Handling:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Signal Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19's signal system integrates seamlessly with DOM elements, allowing for reactive updates through effects that automatically track dependencies and update only when needed, improving performance and code clarity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Lifecycle Hooks</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The new AfterRender and AfterNextRender hooks provide precise timing control for DOM operations, ensuring that element manipulations happen at the optimal point in the rendering cycle.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better TypeScript Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Enhanced type safety with generics for ElementRef and improved static analysis capabilities make working with DOM elements more reliable and provide better tooling support.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Automatic Cleanup Utilities</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Tools like takeUntilDestroyed from @angular/core/rxjs-interop simplify memory management when working with element references and event subscriptions, reducing memory leaks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Zone-less Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19's support for zone-less applications allows for more efficient DOM updates without the overhead of Zone.js change detection, particularly beneficial for frequent element manipulations.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>API Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Multiple approaches to element handling (template references, ViewChild, ElementRef, Renderer2, signals) can create confusion for developers about which approach to use in different scenarios.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The new signal-based reactivity system for DOM updates requires learning new patterns and understanding reactive programming concepts, particularly for developers familiar with the older change detection system.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Abstraction Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Using Renderer2 and Angular's DOM abstraction layers adds some verbosity and complexity compared to direct DOM manipulation, though this trade-off is necessary for security and platform independence.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Timing Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Working with DOM elements can still present timing challenges, particularly when integrating with third-party libraries that directly manipulate the DOM outside of Angular's lifecycle.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Server-Side Rendering Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          When using SSR with Angular Universal, DOM element access requires special handling as the DOM doesn't exist on the server, adding complexity to components that heavily rely on direct element manipulation.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>ViewChild and ViewChildren</strong>:\n      <p>\n        Decorators for accessing DOM elements or directives from the component class that provide a structured way to work with elements in the template.\n      </p>\n    </li>\n    <li>\n      <strong>ContentChild and ContentChildren</strong>:\n      <p>\n        Similar to ViewChild/ViewChildren but used for projected content, allowing components to interact with elements passed through content projection (ng-content).\n      </p>\n    </li>\n    <li>\n      <strong>Component Lifecycle Hooks</strong>:\n      <p>\n        Understanding lifecycle hooks like AfterViewInit, AfterViewChecked, AfterRender, and AfterNextRender that are critical for proper timing of DOM element access and manipulation.\n      </p>\n    </li>\n    <li>\n      <strong>Signal Effects</strong>:\n      <p>\n        Angular 19's effect() function for creating reactive computations that automatically track signal dependencies and can be used for DOM updates based on state changes.\n      </p>\n    </li>\n    <li>\n      <strong>Zone-less Applications</strong>:\n      <p>\n        Building Angular applications without Zone.js and how this impacts element manipulation, focusing on explicit change detection and signal-based reactivity.\n      </p>\n    </li>\n    <li>\n      <strong>Angular Custom Elements</strong>:\n      <p>\n        Creating reusable web components from Angular components using the @angular/elements package, which is different from but related to working with DOM elements.\n      </p>\n    </li>\n    <li>\n      <strong>Renderer2 and Rendering Architecture</strong>:\n      <p>\n        Understanding Angular's rendering pipeline and how Renderer2 provides a platform-independent abstraction for DOM operations.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-element',\n  templateUrl: './element.component.html',\n  styleUrls: ['./element.component.scss']\n})\nexport class ElementComponent {\n  selectedTab = 1;\n\n  // Template reference variables\n  code_1_ref: any = { hidden: false };\n  code_2_ref: any = { hidden: false };\n  code_3_ref: any = { hidden: false };\n  code_4_ref: any = { hidden: false };\n  code_5_ref: any = { hidden: false };\n  code_6_ref: any = { hidden: false };\n\n  // Example code snippets\n  code_1 = `\n// Basic element (DOM element) reference in Angular 19\nimport { Component, ElementRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-element-demo',\n  standalone: true,\n  template: \\`\n    <div #myElement class=\"highlight\">\n      This is a DOM element that we can reference directly\n    </div>\n    <button (click)=\"changeStyle()\">Change Style</button>\n  \\`\n})\nexport class ElementDemoComponent {\n  // Using ViewChild to get a reference to the DOM element\n  @ViewChild('myElement') myElement!: ElementRef<HTMLDivElement>;\n\n  changeStyle() {\n    // Directly manipulating the native DOM element\n    const nativeElement = this.myElement.nativeElement;\n\n    nativeElement.style.backgroundColor = '#e0f7fa';\n    nativeElement.style.padding = '10px';\n    nativeElement.style.borderRadius = '4px';\n\n    // In Angular 19, you can use the new style utilities\n    nativeElement.classList.toggle('active');\n  }\n}`;\n\n  code_2 = `\n// ElementRef usage with signals in Angular 19\nimport { Component, ElementRef, ViewChild, signal, effect } from '@angular/core';\n\n@Component({\n  selector: 'app-element-signal',\n  standalone: true,\n  template: \\`\n    <div class=\"container\">\n      <div #targetElement>{{ message() }}</div>\n      <input\n        type=\"text\"\n        [value]=\"message()\"\n        (input)=\"updateMessage($event)\"\n        placeholder=\"Type to update the element content\"\n      />\n      <button (click)=\"toggleHighlight()\">Toggle Highlight</button>\n    </div>\n  \\`\n})\nexport class ElementSignalComponent {\n  // Reference to the DOM element\n  @ViewChild('targetElement') targetElement!: ElementRef<HTMLDivElement>;\n\n  // Signal for the message content\n  message = signal('Hello from Angular 19 Elements!');\n\n  // Signal for highlighting state\n  isHighlighted = signal(false);\n\n  constructor() {\n    // Using effect to react to changes in the highlighting signal\n    effect(() => {\n      if (this.targetElement?.nativeElement) {\n        const el = this.targetElement.nativeElement;\n\n        if (this.isHighlighted()) {\n          el.style.backgroundColor = '#f0f4c3';\n          el.style.padding = '10px';\n          el.style.borderRadius = '4px';\n          el.style.transition = 'all 0.3s ease';\n        } else {\n          el.style.backgroundColor = 'transparent';\n          el.style.padding = '0';\n        }\n      }\n    });\n  }\n\n  // Update the message signal from input\n  updateMessage(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.message.set(input.value);\n  }\n\n  // Toggle the highlight signal\n  toggleHighlight() {\n    this.isHighlighted.update(value => !value);\n  }\n}`;\n\n  code_3 = `\n// ElementRef with template context and optimization in Angular 19\nimport { Component, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-optimized-element',\n  standalone: true,\n  template: \\`\n    <div class=\"search-container\">\n      <input #searchInput\n        type=\"text\"\n        placeholder=\"Search...\"\n        class=\"search-input\"\n      />\n      <div class=\"results\">\n        <div *ngIf=\"searchResults.length; else noResults\">\n          <div *ngFor=\"let result of searchResults\" class=\"result-item\">\n            {{ result }}\n          </div>\n        </div>\n        <ng-template #noResults>\n          <div class=\"no-results\" *ngIf=\"hasSearched\">No results found</div>\n        </ng-template>\n      </div>\n    </div>\n  \\`\n})\nexport class OptimizedElementComponent implements AfterViewInit {\n  @ViewChild('searchInput') searchInput!: ElementRef<HTMLInputElement>;\n\n  searchResults: string[] = [];\n  hasSearched = false;\n\n  // Sample data\n  private data = [\n    'Angular Elements', 'DOM manipulation', 'ElementRef',\n    'ViewChild', 'Direct DOM access', 'Template reference variables'\n  ];\n\n  ngAfterViewInit() {\n    // Using rxjs-interop for automatic cleanup\n    fromEvent(this.searchInput.nativeElement, 'input')\n      .pipe(\n        debounceTime(300),\n        takeUntilDestroyed() // Angular 19's improved cleanup\n      )\n      .subscribe(() => {\n        const query = this.searchInput.nativeElement.value.toLowerCase();\n        this.hasSearched = !!query;\n\n        if (!query) {\n          this.searchResults = [];\n          return;\n        }\n\n        this.searchResults = this.data.filter(item =>\n          item.toLowerCase().includes(query)\n        );\n      });\n  }\n\n  // Focus the search input programmatically\n  focusSearch() {\n    this.searchInput.nativeElement.focus();\n  }\n}`;\n\n  code_4 = `\n// Using ElementRef with Renderer2 (recommended approach)\nimport { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-renderer-element',\n  standalone: true,\n  template: \\`\n    <div #container class=\"container\">\n      <p>This demonstrates safe DOM manipulation</p>\n      <button (click)=\"addElement()\">Add Element</button>\n      <button (click)=\"removeElements()\">Remove Elements</button>\n    </div>\n  \\`\n})\nexport class RendererElementComponent {\n  @ViewChild('container') container!: ElementRef;\n\n  // Angular 19 now strongly recommends using Renderer2\n  // for cross-platform compatibility\n  constructor(private renderer: Renderer2) {}\n\n  addElement() {\n    // Create a new element\n    const newElement = this.renderer.createElement('div');\n\n    // Create and append text node\n    const text = this.renderer.createText('Dynamically added element');\n    this.renderer.appendChild(newElement, text);\n\n    // Add classes\n    this.renderer.addClass(newElement, 'dynamic-element');\n\n    // Set styles\n    this.renderer.setStyle(newElement, 'margin', '10px 0');\n    this.renderer.setStyle(newElement, 'padding', '8px');\n    this.renderer.setStyle(newElement, 'background-color', '#e3f2fd');\n    this.renderer.setStyle(newElement, 'border-radius', '4px');\n\n    // Add to the container\n    this.renderer.appendChild(this.container.nativeElement, newElement);\n  }\n\n  removeElements() {\n    const container = this.container.nativeElement;\n    const elements = container.querySelectorAll('.dynamic-element');\n\n    elements.forEach((element: Element) => {\n      this.renderer.removeChild(container, element);\n    });\n  }\n}`;\n\n  code_5 = `\n// ElementRef with zone-less reactivity in Angular 19\nimport { Component, ElementRef, ViewChild, signal,\n         AfterViewInit, computed, effect } from '@angular/core';\n\n@Component({\n  selector: 'app-zoneless-element',\n  standalone: true,\n  template: \\`\n    <div class=\"progress-container\">\n      <div #progressBar class=\"progress-bar\"></div>\n      <div class=\"controls\">\n        <button (click)=\"decreaseProgress()\">-</button>\n        <span>{{ progressLabel() }}</span>\n        <button (click)=\"increaseProgress()\">+</button>\n      </div>\n    </div>\n  \\`\n})\nexport class ZonelessElementComponent implements AfterViewInit {\n  @ViewChild('progressBar') progressBar!: ElementRef<HTMLDivElement>;\n\n  // Signal-based state\n  progress = signal(0);\n\n  // Computed value from the signal\n  progressLabel = computed(() => \\`\\${this.progress()}%\\`);\n\n  ngAfterViewInit() {\n    // Effect to update the DOM when the signal changes\n    effect(() => {\n      const element = this.progressBar.nativeElement;\n      const currentProgress = this.progress();\n\n      // Update width based on progress\n      element.style.width = \\`\\${currentProgress}%\\`;\n\n      // Change color based on progress value\n      if (currentProgress < 30) {\n        element.style.backgroundColor = '#ffcdd2'; // light red\n      } else if (currentProgress < 70) {\n        element.style.backgroundColor = '#fff9c4'; // light yellow\n      } else {\n        element.style.backgroundColor = '#c8e6c9'; // light green\n      }\n    });\n  }\n\n  increaseProgress() {\n    this.progress.update(p => Math.min(p + 10, 100));\n  }\n\n  decreaseProgress() {\n    this.progress.update(p => Math.max(p - 10, 0));\n  }\n}`;\n\n  code_6 = `\n// ElementRef with intersection observer for rendering optimizations\nimport { Component, ElementRef, ViewChild, signal, effect,\n         AfterViewInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-lazy-element',\n  standalone: true,\n  template: \\`\n    <div class=\"scroll-container\">\n      <div class=\"content\">\n        <div *ngFor=\"let item of placeholderItems; let i = index\">\n          <div class=\"placeholder-item\">Item {{ i + 1 }}</div>\n        </div>\n\n        <div #lazyElement class=\"lazy-element\">\n          <ng-container *ngIf=\"isVisible()\">\n            <h3>Lazy Loaded Element</h3>\n            <p>This complex element only renders when scrolled into view!</p>\n            <div class=\"chart\">\n              <!-- Chart content would go here -->\n              <div *ngFor=\"let value of chartData\"\n                   class=\"chart-bar\"\n                   [style.height.px]=\"value\">\n              </div>\n            </div>\n          </ng-container>\n        </div>\n\n        <div *ngFor=\"let item of placeholderItems; let i = index\">\n          <div class=\"placeholder-item\">Item {{ i + 10 }}</div>\n        </div>\n      </div>\n    </div>\n  \\`\n})\nexport class LazyElementComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('lazyElement') lazyElement!: ElementRef<HTMLDivElement>;\n\n  // Signal for visibility state\n  isVisible = signal(false);\n\n  // Sample data for the chart\n  chartData = [40, 60, 30, 70, 50, 80, 20, 90];\n\n  // Placeholder items to create scrollable content\n  placeholderItems = Array(20).fill(0);\n\n  // Intersection Observer instance\n  private observer: IntersectionObserver | null = null;\n\n  ngAfterViewInit() {\n    // Create observer with options\n    this.observer = new IntersectionObserver(\n      (entries) => {\n        // Update the signal based on visibility\n        this.isVisible.set(entries[0].isIntersecting);\n      },\n      {\n        threshold: 0.1 // Trigger when 10% of the element is visible\n      }\n    );\n\n    // Start observing the element\n    this.observer.observe(this.lazyElement.nativeElement);\n  }\n\n  ngOnDestroy() {\n    // Clean up the observer\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  }\n}`;\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Entry Point\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Entry Point</span>\n      in Angular 19 refers to a specific structure that defines what parts of your code are exported and made available for import by other applications or libraries. Entry points are essential for organizing Angular libraries and determining how code is bundled, tree-shaken, and consumed. In Angular 19, entry points have been enhanced with improved support for standalone components, signals, and modern ECMAScript modules.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n<ng-template #notesRef>\n  <p>What is an Entry Point?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      An entry point is a distinct, independently importable piece of an Angular library that specifies what code is exposed to the outside world.\n    </li>\n    <li>\n      <strong>Primary Entry Point</strong>:\n      The main entry point of a library, typically specified in the package.json file, defining the exports available when importing the library directly.\n    </li>\n    <li>\n      <strong>Secondary Entry Points</strong>:\n      Subpackages within a library that can be imported separately, enabling more granular imports and better tree-shaking.\n    </li>\n    <li>\n      <strong>Public API Surface</strong>:\n      The collection of exported symbols (components, services, directives, etc.) that consumers of your library can access and use.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Entry Point Improvements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Enhanced Standalone Support</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 provides first-class support for libraries composed entirely of standalone components without requiring NgModules, making entry points cleaner and more intuitive.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Package Format</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>The Angular Package Format now includes optimized ES2022 outputs with better tree-shaking and more efficient code loading, particularly important for entry point organization.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Entry points can now include and expose signal-based APIs, ensuring backward compatibility while taking advantage of Angular's reactive programming model.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Multiple Compilation Modes</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 supports partial compilation of libraries, allowing library authors to ship partially compiled code that can be further optimized at the application level.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Automatic Providers</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Entry points now support automatic discovery and registration of providers, simplifying how services are shared and making dependency injection more intuitive.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Entry Point Implementation</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Basic Entry Point Structure</strong>:\n      Package.json format for a primary entry point.\n\n      <button (click)=\"code_1_ref.hidden = !code_1_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_1_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>json</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['json']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Public API Definition</strong>:\n      Creating the public API surface with public-api.ts.\n\n      <button (click)=\"code_2_ref.hidden = !code_2_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_2_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Secondary Entry Points</strong>:\n      Creating multiple entry points in a single library.\n\n      <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_3_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Module-Based Entry Point</strong>:\n      Traditional NgModule-based approach for library components.\n\n      <button (click)=\"code_4_ref.hidden = !code_4_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_4_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Entry Point Types Comparison</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Type</th>\n        <th class=\"py-3 px-4 text-left\">Use Case</th>\n        <th class=\"py-3 px-4 text-left\">Angular 19 Support</th>\n        <th class=\"py-3 px-4 text-left\">Tree-Shaking</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Primary Entry Point</td>\n        <td class=\"py-3 px-4\">Main library import</td>\n        <td class=\"py-3 px-4\">Full support with ES2022</td>\n        <td class=\"py-3 px-4\">Good (entire library)</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Secondary Entry Points</td>\n        <td class=\"py-3 px-4\">Feature-specific imports</td>\n        <td class=\"py-3 px-4\">Enhanced with better path mapping</td>\n        <td class=\"py-3 px-4\">Excellent (per feature)</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Standalone Entry Point</td>\n        <td class=\"py-3 px-4\">NgModule-free libraries</td>\n        <td class=\"py-3 px-4\">New in Angular 19</td>\n        <td class=\"py-3 px-4\">Excellent</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Signal Entry Point</td>\n        <td class=\"py-3 px-4\">Reactive state management</td>\n        <td class=\"py-3 px-4\">New in Angular 19</td>\n        <td class=\"py-3 px-4\">Excellent</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Design a Clean Public API</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Minimize Exposed Surface</strong>:\n          Carefully curate what you export in your entry points. Only expose what consumers need, keeping implementation details private. This creates a more maintainable API and enables better tree-shaking.\n        </li>\n        <li>\n          <strong>Use Barrel Files</strong>:\n          Create index.ts files (barrel files) for organizing exports. This simplifies import statements for consumers while giving you flexibility to reorganize internals without breaking APIs.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Secondary Entry Points</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Feature-Based Organization</strong>:\n          Create secondary entry points based on distinct features. This allows consumers to import only what they need, leading to smaller bundle sizes.\n\n          <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n        </li>\n        <li>\n          <strong>Avoid Circular Dependencies</strong>:\n          Ensure each entry point is self-contained with no circular dependencies between entry points. This keeps the import structure clean and prevents hard-to-debug issues.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Use Standalone Components</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Module-Free Libraries</strong>:\n          In Angular 19, prefer creating libraries with standalone components. This simplifies the entry point structure and improves tree-shaking.\n\n          <button (click)=\"code_5_ref.hidden = !code_5_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n        </li>\n        <li>\n          <strong>Compatibility Layer</strong>:\n          If your library needs to support both standalone and NgModule-based applications, consider providing both options through different entry points or conditional exports.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Integrate with the Angular Package Format</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Follow APF Guidelines</strong>:\n          Structure your package.json to conform to the Angular Package Format. This ensures compatibility with the Angular CLI and optimizes how your library is consumed.\n        </li>\n        <li>\n          <strong>Multiple Output Formats</strong>:\n          Provide multiple bundle formats (UMD, ES2022, etc.) to support different consumption patterns. Angular 19's ng-packagr handles this automatically.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Embrace Signal-Based APIs</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Reactive Public APIs</strong>:\n          For state management exposed through your entry points, use Angular 19's signals to create reactive APIs that integrate well with modern Angular applications.\n\n          <button (click)=\"code_6_ref.hidden = !code_6_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n        </li>\n        <li>\n          <strong>Backwards Compatibility</strong>:\n          Consider providing both signal-based and RxJS Observable-based APIs for backward compatibility during the transition to signals.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Angular 19's Entry Point System:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Improved Tree-Shaking</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19's entry point system enables more effective tree-shaking, allowing unused code to be eliminated from the final bundle. This is particularly important for libraries with many features where users typically only use a subset.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Granular Imports</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Secondary entry points allow users to import only the specific features they need, reducing the amount of code loaded and parsed by the browser, which improves initial load time and runtime performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Standalone Component Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The entry point system now fully supports libraries built with standalone components, eliminating the need for NgModules and simplifying both library creation and consumption.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal Compatibility</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Entry points can now expose signal-based APIs, making it easier to create reactive libraries that integrate naturally with Angular 19's signals architecture.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Modern JavaScript Support</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The updated Angular Package Format in Angular 19 supports ES2022 features directly, allowing library authors to use modern JavaScript features without worrying about backward compatibility issues.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Increased Configuration Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Setting up multiple entry points requires additional configuration in package.json, ng-package.json, and project structure, which can be complex for developers new to library creation.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Versioning Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          When using multiple entry points, maintaining consistent versioning across all entry points can be challenging, especially when different parts of the library evolve at different rates.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Understanding the nuances of entry points, especially with the new standalone component support and signals integration, requires additional learning for library authors.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Build Time Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Libraries with many secondary entry points can experience longer build times, as each entry point requires separate compilation and packaging steps.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Transition Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Converting existing libraries to take advantage of Angular 19's new entry point features (standalone components, signals) can be time-consuming and may require breaking changes to the library's API.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Angular Package Format (APF)</strong>:\n      <p>\n        The specification that defines how Angular libraries should be structured and built, which directly impacts how entry points are configured and consumed.\n      </p>\n    </li>\n    <li>\n      <strong>NgModules</strong>:\n      <p>\n        The traditional way to organize Angular code into cohesive blocks, which can be used alongside entry points to define what a library exposes.\n      </p>\n    </li>\n    <li>\n      <strong>Standalone Components</strong>:\n      <p>\n        Angular 19's preferred approach for creating components that don't require NgModules, which simplifies entry point design and improves tree-shaking.\n      </p>\n    </li>\n    <li>\n      <strong>Tree-Shaking</strong>:\n      <p>\n        The process of eliminating unused code during build time, which is significantly enhanced by properly structured entry points.\n      </p>\n    </li>\n    <li>\n      <strong>Angular Libraries</strong>:\n      <p>\n        Collections of reusable code packaged according to the Angular Package Format, typically organized around entry points for optimal consumption.\n      </p>\n    </li>\n    <li>\n      <strong>Lazy Loading</strong>:\n      <p>\n        A technique to load parts of an application on demand, which can be enhanced by strategic use of entry points to minimize initial bundle sizes.\n      </p>\n    </li>\n    <li>\n      <strong>Signals</strong>:\n      <p>\n        Angular 19's reactivity primitive that can be exposed through entry points to create reactive library APIs that integrate naturally with signal-based applications.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-entry-point',\n  templateUrl: './entry-point.component.html',\n  styleUrls: ['./entry-point.component.scss']\n})\nexport class EntryPointComponent {\n  selectedTab = 1;\n\n  // Template reference variables\n  code_1_ref: any = { hidden: false };\n  code_2_ref: any = { hidden: false };\n  code_3_ref: any = { hidden: false };\n  code_4_ref: any = { hidden: false };\n  code_5_ref: any = { hidden: false };\n  code_6_ref: any = { hidden: false };\n\n  // Example code snippets\n  code_1 = `\n// Basic Entry Point Example (package.json)\n{\n  \"name\": \"my-angular-library\",\n  \"version\": \"1.0.0\",\n  \"main\": \"./bundles/my-lib.umd.js\",\n  \"module\": \"./fesm2022/my-lib.js\",\n  \"es2022\": \"./fesm2022/my-lib.js\",\n  \"esm2022\": \"./esm2022/my-lib.js\",\n  \"typings\": \"./index.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./index.d.ts\",\n      \"esm2022\": \"./esm2022/my-lib.js\",\n      \"esm\": \"./esm2022/my-lib.js\",\n      \"default\": \"./fesm2022/my-lib.js\"\n    }\n  },\n  \"sideEffects\": false\n}`;\n\n  code_2 = `\n// Entry Point Module (public-api.ts)\n/*\n * Public API Surface of my-library\n */\n\nexport * from './lib/component-a/component-a.component';\nexport * from './lib/component-b/component-b.component';\nexport * from './lib/directives/highlight.directive';\nexport * from './lib/pipes/transform.pipe';\nexport * from './lib/services/data.service';\nexport * from './lib/my-library.module';\n\n// Each exported symbol becomes part of your library's public API`;\n\n  code_3 = `\n// Secondary Entry Points Configuration (Angular 19)\n// File structure for a library with multiple entry points\nmy-library/\n├── package.json              // Primary entry point\n├── ng-package.json           // ng-packagr configuration\n├── public-api.ts             // Primary entry point exports\n├── tsconfig.lib.json         // TypeScript config for library\n├── projects/\n│   └── my-library/\n│       ├── feature-a/        // Secondary entry point\n│       │   ├── package.json  // {\"name\": \"my-library/feature-a\"}\n│       │   ├── ng-package.json\n│       │   └── public-api.ts // Feature A exports\n│       └── feature-b/        // Secondary entry point\n│           ├── package.json  // {\"name\": \"my-library/feature-b\"}\n│           ├── ng-package.json\n│           └── public-api.ts // Feature B exports\n\n// This allows importing specific features:\n// import { FeatureAComponent } from 'my-library/feature-a';`;\n\n  code_4 = `\n// Angular 19 Module Entry Point with Standalone Components\n// my-library.module.ts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Import standalone components\nimport { ComponentA } from './components/component-a.component';\nimport { ComponentB } from './components/component-b.component';\nimport { HighlightDirective } from './directives/highlight.directive';\n\n// Export everything that should be accessible\nexport { ComponentA, ComponentB, HighlightDirective };\n\n// Export types that are part of your public API\nexport interface UserConfig {\n  theme: 'light' | 'dark';\n  features: string[];\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // Include standalone components in the module's imports\n    ComponentA,\n    ComponentB,\n    HighlightDirective\n  ],\n  exports: [\n    // Make sure to export the standalone components as well\n    ComponentA,\n    ComponentB,\n    HighlightDirective\n  ]\n})\nexport class MyLibraryModule { }`;\n\n  code_5 = `\n// Angular 19 Standalone Entry Point (no NgModule required)\n// public-api.ts\nexport { ComponentA } from './lib/components/component-a.component';\nexport { ComponentB } from './lib/components/component-b.component';\nexport { HighlightDirective } from './lib/directives/highlight.directive';\nexport { TransformPipe } from './lib/pipes/transform.pipe';\nexport { DataService } from './lib/services/data.service';\n\n// You can also export interfaces, types, and constants\nexport type Theme = 'light' | 'dark' | 'system';\nexport const LIBRARY_VERSION = '1.0.0';\n\n// A standalone component definition\n// component-a.component.ts\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'lib-component-a',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`<div>Component A works!</div>\\`\n})\nexport class ComponentA {}`;\n\n  code_6 = `\n// Angular 19 Entry Point with Signals\n// data.service.ts\nimport { Injectable, signal, computed } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  // Public signals that become part of your API\n  readonly items = signal<string[]>([]);\n  readonly selectedId = signal<string | null>(null);\n\n  // Computed signal based on other signals\n  readonly selectedItem = computed(() => {\n    const id = this.selectedId();\n    const itemList = this.items();\n    return id ? itemList.find(item => item.id === id) : null;\n  });\n\n  addItem(item: string) {\n    this.items.update(items => [...items, item]);\n  }\n\n  selectItem(id: string | null) {\n    this.selectedId.set(id);\n  }\n}\n\n// Export this in public-api.ts to make it available to consumers\n// public-api.ts\nexport * from './lib/services/data.service';`;\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Form Control\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">FormControl</span>\n      in Angular 19 represents a single input field within a form, managing its value, validation state, and user interactions. Angular 19 enhances FormControl with signals integration, improved type safety, and better performance in zone-less applications. The reactive form control system allows for programmatic creation, validation, and synchronization with the UI.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n<ng-template #notesRef>\n  <p>What is a FormControl?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      A FormControl tracks the value and validation state of an individual form input element, supporting both synchronous and asynchronous validators.\n    </li>\n    <li>\n      <strong>Core Building Block</strong>:\n      FormControl is the most basic unit in Angular's reactive forms, which can be used alone or as part of FormGroup and FormArray collections.\n    </li>\n    <li>\n      <strong>Two-Way Binding</strong>:\n      FormControl maintains synchronization between the model in your component class and the input element in your template.\n    </li>\n    <li>\n      <strong>Validation Integration</strong>:\n      FormControl supports built-in and custom validators for ensuring data quality and consistency.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>FormControl Improvements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Signal Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces seamless integration between FormControl and signals, allowing form state to be consumed directly by the signals system.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Strict Typing</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Enhanced TypeScript support with improved generics, nonNullable controls, and better type inference for form values and errors.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimizations</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Zone-less operation for forms, reducing change detection cycles and improving performance in large applications.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Standalone Usage</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Better support for standalone components, eliminating the need for ReactiveFormsModule imports at the NgModule level.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Automatic Cleanup</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Integration with takeUntilDestroyed from &#64;angular/core/rxjs-interop for automatic subscription management without manual unsubscribing.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Working with FormControls in Angular 19</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Basic FormControl with Signals</strong>:\n      Creating and using a basic FormControl with Angular 19 features.\n\n      <button (click)=\"code_1_ref.hidden = !code_1_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_1_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>FormControl with Validators</strong>:\n      Using validators with FormControl in Angular 19.\n\n      <button (click)=\"code_2_ref.hidden = !code_2_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_2_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>FormControl with Signal Integration</strong>:\n      Connecting FormControls with Angular 19's signals system.\n\n      <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_3_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Advanced FormControl with Custom Validators</strong>:\n      Creating custom validators and async validation.\n\n      <button (click)=\"code_4_ref.hidden = !code_4_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_4_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>FormControl Configuration Options Comparison</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Option</th>\n        <th class=\"py-3 px-4 text-left\">Description</th>\n        <th class=\"py-3 px-4 text-left\">Angular 19 Improvements</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">nonNullable</td>\n        <td class=\"py-3 px-4\">Ensures the form value is never null</td>\n        <td class=\"py-3 px-4\">Enhanced type safety with TypeScript</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">validators</td>\n        <td class=\"py-3 px-4\">Synchronous validation functions</td>\n        <td class=\"py-3 px-4\">Better error type inference</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">asyncValidators</td>\n        <td class=\"py-3 px-4\">Asynchronous validation functions</td>\n        <td class=\"py-3 px-4\">Improved performance with signals</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">updateOn</td>\n        <td class=\"py-3 px-4\">Value update strategy (change, blur, submit)</td>\n        <td class=\"py-3 px-4\">Zone-less optimizations</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use Signal Integration for Better Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Connect Forms to Signals</strong>:\n          Bridge FormControl values to Angular 19 signals for fine-grained reactivity without relying on Zone.js change detection.\n\n          <button (click)=\"code_5_ref.hidden = !code_5_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code_5_ref hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_5\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Leverage computed() for Derived State</strong>:\n          Use computed signals to derive new values from form state, such as formatted display values or validation summaries.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Apply Strict Typing</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use nonNullable Option</strong>:\n          Enable the nonNullable option in FormControl to ensure the value is never null, improving type checking and preventing runtime errors.\n        </li>\n        <li>\n          <strong>Specify Generic Types</strong>:\n          Always specify the generic type for FormControl to ensure type safety throughout your application.\n          <pre><code class=\"text-xs\">// Explicit typing of form control\nconst nameControl = new FormControl&lt;string&gt;('', {{ '{' }} nonNullable: true {{ '}' }});</code></pre>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize for Zone-less Performance</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Manage Subscriptions Properly</strong>:\n          Use takeUntilDestroyed() from &#64;angular/core/rxjs-interop for automatic cleanup of form subscriptions.\n        </li>\n        <li>\n          <strong>Use Explicit Change Detection</strong>:\n          In zone-less applications, trigger change detection explicitly after form updates for optimal performance.\n\n          <button (click)=\"code_6_ref.hidden = !code_6_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code_6_ref hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_6\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Structure Validation Logic Effectively</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Separate Validator Functions</strong>:\n          Create reusable validator functions rather than embedding validation logic directly in component classes.\n        </li>\n        <li>\n          <strong>Use Validator Composition</strong>:\n          Compose multiple validators using Validators.compose() for better organization and reusability.\n          <pre><code class=\"text-xs\">// Composing validators\nconst passwordValidators = Validators.compose([\n  Validators.required,\n  Validators.minLength(8),\n  customPasswordValidator\n]);</code></pre>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Consider UX in Form Interactions</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use updateOn Strategically</strong>:\n          Configure updateOn: 'blur' for fields where validation during typing would be distracting, and updateOn: 'change' for immediate feedback.\n        </li>\n        <li>\n          <strong>Apply Visual Feedback</strong>:\n          Show validation messages only after the user has interacted with the control (touched) to avoid premature error displays.\n          <pre><code class=\"text-xs\">// Show errors only when touched\n&lt;div *ngIf=\"emailControl.errors && emailControl.touched\"&gt;\n  &lt;p *ngIf=\"emailControl.errors['email']\"&gt;Please enter a valid email&lt;/p&gt;\n&lt;/div&gt;</code></pre>\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Angular 19's FormControl:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Signal Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          FormControl now works seamlessly with Angular's signals system, enabling more efficient data flow between forms and components with less boilerplate code.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Type Safety</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Enhanced TypeScript integration with better generic support, nonNullable controls, and type inference provides stronger compile-time guarantees and better developer experience.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimizations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Zone-less operation reduces unnecessary change detection cycles, especially beneficial for forms with frequent updates or in large-scale applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Automatic Subscription Management</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Integration with takeUntilDestroyed simplifies memory management by automatically cleaning up form-related subscriptions when components are destroyed.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Standalone Component Support</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Better integration with standalone components eliminates the need for module-level imports, making forms easier to implement in modern Angular applications.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The new signal integration patterns require additional learning, especially for developers familiar with the traditional reactive forms approach.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Migration Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Upgrading existing forms to leverage the new Angular 19 features can require significant refactoring, especially for complex form implementations.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Asynchronous validators and signal integration can sometimes create more complex debugging scenarios that are harder to trace through traditional methods.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Increased Boilerplate for Advanced Cases</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          While simple forms benefit from cleaner code, complex validation scenarios with multiple interdependent fields may still require significant boilerplate.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Library Compatibility Issues</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Some third-party form libraries may not yet be fully compatible with Angular 19's signals and zone-less approaches, requiring custom integration work.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>FormGroup and FormArray</strong>:\n      <p>\n        Collections that work alongside FormControl to manage groups of related form controls or dynamic lists of controls, now enhanced with signal integration.\n      </p>\n    </li>\n    <li>\n      <strong>FormBuilder</strong>:\n      <p>\n        A helper service that simplifies the creation of complex form structures, now with improved typing and signal support in Angular 19.\n      </p>\n    </li>\n    <li>\n      <strong>Validators</strong>:\n      <p>\n        Built-in and custom validation functions that work with FormControl to enforce data quality rules, with better type safety in Angular 19.\n      </p>\n    </li>\n    <li>\n      <strong>Signals</strong>:\n      <p>\n        Angular 19's reactive primitive that can be integrated with FormControl to create more efficient reactive forms with less reliance on Zone.js.\n      </p>\n    </li>\n    <li>\n      <strong>takeUntilDestroyed</strong>:\n      <p>\n        A utility from &#64;angular/core/rxjs-interop that helps manage form subscriptions by automatically unsubscribing when components are destroyed.\n      </p>\n    </li>\n    <li>\n      <strong>Zone-less Applications</strong>:\n      <p>\n        Angular applications that operate without Zone.js, requiring explicit change detection but offering better performance, especially for form-heavy applications.\n      </p>\n    </li>\n    <li>\n      <strong>Reactive Forms vs. Template-driven Forms</strong>:\n      <p>\n        The two approaches to form handling in Angular, with reactive forms (using FormControl) now being more strongly favored in Angular 19 due to better signal integration.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-form-control',\n  templateUrl: './form-control.component.html',\n  styleUrls: ['./form-control.component.scss']\n})\nexport class FormControlComponent {\n  selectedTab = 1;\n\n  // Template reference variables\n  code_1_ref: any = { hidden: false };\n  code_2_ref: any = { hidden: false };\n  code_3_ref: any = { hidden: false };\n  code_4_ref: any = { hidden: false };\n  code_5_ref: any = { hidden: false };\n  code_6_ref: any = { hidden: false };\n\n  // Add missing template references\n  notesRef: any;\n  bestRef: any;\n  prosConsRef: any;\n  topicsRef: any;\n\n  // Example code snippets\n  code_1 = `\n// Basic FormControl with Signals in Angular 19\nimport { Component } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-basic-form-control',\n  standalone: true,\n  imports: [ReactiveFormsModule, JsonPipe],\n  template: \\`\n    <h2>Basic FormControl Example</h2>\n    <input type=\"text\" [formControl]=\"nameControl\">\n\n    <p>Current value: {{ nameControl.value }}</p>\n    <p>Form status: {{ nameControl.status }}</p>\n    <p>Form touched: {{ nameControl.touched }}</p>\n    <p>Form dirty: {{ nameControl.dirty }}</p>\n    <p>Form valid: {{ nameControl.valid }}</p>\n\n    <button (click)=\"updateName()\">Update Name</button>\n  \\`\n})\nexport class BasicFormControlComponent {\n  nameControl = new FormControl('Initial value');\n\n  updateName() {\n    this.nameControl.setValue('Updated value');\n  }\n}`;\n\n  code_2 = `\n// Signal-based FormControl in Angular 19\nimport { Component } from '@angular/core';\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-signal-form-control',\n  standalone: true,\n  imports: [ReactiveFormsModule, JsonPipe],\n  template: \\`\n    <h2>Signal-Based FormControl</h2>\n    <input\n      type=\"email\"\n      [formControl]=\"emailControl\"\n      placeholder=\"Enter email\"\n    >\n\n    <div *ngIf=\"emailControl.errors && emailControl.touched\">\n      <p *ngIf=\"emailControl.errors['required']\" class=\"error\">\n        Email is required\n      </p>\n      <p *ngIf=\"emailControl.errors['email']\" class=\"error\">\n        Please enter a valid email\n      </p>\n    </div>\n\n    <p>Value: {{ emailControl.value }}</p>\n    <p>Valid: {{ emailControl.valid }}</p>\n\n    <pre>Form Value as JSON: {{ emailControl.value | json }}</pre>\n    <pre>Form Errors: {{ emailControl.errors | json }}</pre>\n  \\`\n})\nexport class SignalFormControlComponent {\n  // FormControl with validators\n  emailControl = new FormControl('', {\n    validators: [Validators.required, Validators.email],\n    nonNullable: true // New in Angular - ensures value is never null\n  });\n}`;\n\n  code_3 = `\n// FormControl with Signal Integration\nimport { Component, computed, effect, signal } from '@angular/core';\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'app-signal-integration',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  template: \\`\n    <h2>Form Control with Signal Integration</h2>\n    <input type=\"text\" [formControl]=\"usernameControl\">\n\n    <p>Welcome, {{ displayName() }}!</p>\n    <p>Character count: {{ characterCount() }}</p>\n\n    <div *ngIf=\"formattedErrors().length\">\n      <p class=\"error-title\">Errors:</p>\n      <ul>\n        <li *ngFor=\"let error of formattedErrors()\">{{ error }}</li>\n      </ul>\n    </div>\n  \\`\n})\nexport class SignalIntegrationComponent {\n  // Form control with validators\n  usernameControl = new FormControl('', {\n    validators: [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20),\n      Validators.pattern(/^[a-zA-Z0-9_-]*$/)\n    ],\n    nonNullable: true\n  });\n\n  // Signal to track username\n  username = signal('');\n\n  // Computed signals that derive from the username\n  displayName = computed(() => {\n    const name = this.username();\n    return name ? name : 'Guest';\n  });\n\n  characterCount = computed(() => {\n    return this.username().length;\n  });\n\n  formattedErrors = computed(() => {\n    if (!this.usernameControl.errors || !this.usernameControl.touched) {\n      return [];\n    }\n\n    const errors: string[] = [];\n    const errorObj = this.usernameControl.errors;\n\n    if (errorObj['required']) {\n      errors.push('Username is required');\n    }\n    if (errorObj['minlength']) {\n      errors.push(\\`Username must be at least \\${errorObj['minlength'].requiredLength} characters\\`);\n    }\n    if (errorObj['maxlength']) {\n      errors.push(\\`Username cannot exceed \\${errorObj['maxlength'].requiredLength} characters\\`);\n    }\n    if (errorObj['pattern']) {\n      errors.push('Username can only contain letters, numbers, underscores and hyphens');\n    }\n\n    return errors;\n  });\n\n  constructor() {\n    // Connect FormControl to signal with rxjs-interop\n    this.usernameControl.valueChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(value => {\n        this.username.set(value);\n      });\n\n    // Effect to perform side effects when username changes\n    effect(() => {\n      const name = this.username();\n      console.log(\\`Username changed to: \\${name}\\`);\n\n      // You can perform additional side effects here\n      // like saving to localStorage or analytics\n      if (name.length > 0) {\n        localStorage.setItem('lastUsername', name);\n      }\n    });\n  }\n}`;\n\n  code_4 = `\n// Advanced FormControl with Custom Validators\nimport { Component } from '@angular/core';\nimport { AbstractControl, FormControl, ReactiveFormsModule, ValidationErrors, Validators } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n// Custom validator function\nfunction noSpecialChars(control: AbstractControl): ValidationErrors | null {\n  const forbidden = /[!@#$%^&*(),.?\":{}|<>]/g.test(control.value);\n  return forbidden ? { specialChars: true } : null;\n}\n\n// Async validator factory (simulates server validation)\nfunction uniqueUsername(userService: any) {\n  return (control: AbstractControl): Promise<ValidationErrors | null> => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        // Simulate HTTP call to check username\n        const forbidden = ['admin', 'root', 'superuser'].includes(control.value);\n        resolve(forbidden ? { uniqueUsername: true } : null);\n      }, 1000);\n    });\n  };\n}\n\n@Component({\n  selector: 'app-advanced-form-control',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  template: \\`\n    <h2>Advanced FormControl with Validators</h2>\n    <input\n      type=\"text\"\n      [formControl]=\"usernameControl\"\n      placeholder=\"Enter a username\"\n    >\n\n    <div class=\"status-indicators\">\n      <div class=\"indicator\" [class.active]=\"usernameControl.pending\">Checking...</div>\n      <div class=\"indicator\" [class.active]=\"usernameControl.valid && !usernameControl.pending\">Valid</div>\n      <div class=\"indicator\" [class.active]=\"usernameControl.invalid && !usernameControl.pending\">Invalid</div>\n    </div>\n\n    <div class=\"error-messages\" *ngIf=\"usernameControl.errors && usernameControl.touched\">\n      <p *ngIf=\"usernameControl.errors['required']\">Username is required</p>\n      <p *ngIf=\"usernameControl.errors['minlength']\">\n        Username must be at least {{ usernameControl.errors['minlength'].requiredLength }} characters\n      </p>\n      <p *ngIf=\"usernameControl.errors['specialChars']\">\n        Username cannot contain special characters\n      </p>\n      <p *ngIf=\"usernameControl.errors['uniqueUsername']\">\n        This username is already taken\n      </p>\n    </div>\n  \\`\n})\nexport class AdvancedFormControlComponent {\n  // Inject a mock service for demo purposes\n  userService = { checkUsername: (name: string) => Promise.resolve(true) };\n\n  // FormControl with sync and async validators\n  usernameControl = new FormControl('', {\n    validators: [\n      Validators.required,\n      Validators.minLength(4),\n      noSpecialChars\n    ],\n    asyncValidators: [\n      uniqueUsername(this.userService)\n    ],\n    nonNullable: true,\n    updateOn: 'blur' // Options: 'change' (default) | 'blur' | 'submit'\n  });\n\n  constructor() {\n    // Subscribe to value changes with debounce\n    this.usernameControl.valueChanges\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        takeUntilDestroyed()\n      )\n      .subscribe(value => {\n        console.log(\\`Searching for username: \\${value}\\`);\n        // Additional logic here\n      });\n  }\n\n  // Method to reset the form control\n  resetForm() {\n    this.usernameControl.reset();\n  }\n\n  // Method to update validators dynamically\n  makeRequired(required: boolean) {\n    if (required) {\n      this.usernameControl.addValidators(Validators.required);\n    } else {\n      this.usernameControl.removeValidators(Validators.required);\n    }\n    // Always remember to update validity after changing validators\n    this.usernameControl.updateValueAndValidity();\n  }\n}`;\n\n  code_5 = `\n// FormControl with Signal-based Forms (New in Angular 19)\nimport { Component, signal } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'app-signal-forms',\n  standalone: true,\n  imports: [ReactiveFormsModule, JsonPipe],\n  template: \\`\n    <h2>Signal-Based Form</h2>\n    <form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n      <div>\n        <label for=\"name\">Name:</label>\n        <input id=\"name\" formControlName=\"name\" />\n        <div *ngIf=\"name.errors?.['required'] && name.touched\">Name is required</div>\n      </div>\n\n      <div>\n        <label for=\"email\">Email:</label>\n        <input id=\"email\" formControlName=\"email\" type=\"email\" />\n        <div *ngIf=\"email.errors?.['required'] && email.touched\">Email is required</div>\n        <div *ngIf=\"email.errors?.['email'] && email.touched\">Enter a valid email</div>\n      </div>\n\n      <div>\n        <label for=\"age\">Age:</label>\n        <input id=\"age\" formControlName=\"age\" type=\"number\" />\n        <div *ngIf=\"age.errors?.['min'] && age.touched\">\n          Age must be at least {{age.errors?.['min'].min}}\n        </div>\n      </div>\n\n      <button type=\"submit\" [disabled]=\"!profileForm.valid\">Submit</button>\n    </form>\n\n    <div *ngIf=\"formState() as state\">\n      <h3>Form State (from signals):</h3>\n      <p>Valid: {{ state.valid }}</p>\n      <p>Touched: {{ state.touched }}</p>\n      <p>Current Values: {{ state.values | json }}</p>\n    </div>\n  \\`\n})\nexport class SignalFormsComponent {\n  // Create form with FormBuilder\n  profileForm = this.fb.group({\n    name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    age: [null, [Validators.min(18)]]\n  });\n\n  // Getters for easy access to form controls\n  get name() { return this.profileForm.get('name') as FormControl; }\n  get email() { return this.profileForm.get('email') as FormControl; }\n  get age() { return this.profileForm.get('age') as FormControl; }\n\n  // Signal for tracking form state\n  formState = signal({\n    valid: false,\n    touched: false,\n    values: {} as Record<string, any>\n  });\n\n  constructor(private fb: FormBuilder) {\n    // Connect form state to the signal\n    this.profileForm.valueChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => {\n        this.updateFormState();\n      });\n\n    this.profileForm.statusChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => {\n        this.updateFormState();\n      });\n  }\n\n  private updateFormState() {\n    this.formState.update(state => ({\n      ...state,\n      valid: this.profileForm.valid,\n      touched: Object.values(this.profileForm.controls).some(c => c.touched),\n      values: this.profileForm.value\n    }));\n  }\n\n  onSubmit() {\n    if (this.profileForm.valid) {\n      console.log('Form submitted:', this.profileForm.value);\n      // Process the form\n      this.profileForm.reset();\n    } else {\n      // Mark all fields as touched to trigger validation\n      Object.keys(this.profileForm.controls).forEach(key => {\n        const control = this.profileForm.get(key);\n        control?.markAsTouched();\n      });\n    }\n  }\n}`;\n\n  code_6 = `\n// FormControl with Zone-less Performance (Angular 19)\nimport { Component, signal } from '@angular/core';\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'app-zoneless-form-control',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  template: \\`\n    <h2>Zone-less FormControl Performance</h2>\n    <div>\n      <label for=\"search\">Search:</label>\n      <input\n        id=\"search\"\n        [formControl]=\"searchControl\"\n        placeholder=\"Type to search...\"\n      >\n    </div>\n\n    <div>\n      <h3>Real-time typing status</h3>\n      <p>Characters: {{ charCount() }}</p>\n      <p>Search term: {{ searchTerm() }}</p>\n      <p>Status: {{ status() }}</p>\n    </div>\n\n    <div class=\"results\" *ngIf=\"searchResults().length\">\n      <h3>Results:</h3>\n      <ul>\n        <li *ngFor=\"let result of searchResults()\">{{ result }}</li>\n      </ul>\n    </div>\n  \\`\n})\nexport class ZonelessFormControlComponent {\n  // The FormControl\n  searchControl = new FormControl('', {\n    validators: [Validators.minLength(3)],\n    nonNullable: true,\n  });\n\n  // Signals\n  searchTerm = signal('');\n  charCount = signal(0);\n  status = signal('idle');\n  searchResults = signal<string[]>([]);\n\n  // Mock data\n  private mockData = [\n    'Angular', 'TypeScript', 'JavaScript', 'RxJS',\n    'NgRx', 'Zone.js', 'Signals', 'Components',\n    'Directives', 'Pipes', 'Forms', 'HttpClient'\n  ];\n\n  constructor() {\n    // Connect FormControl to signals using rxjs-interop\n    this.searchControl.valueChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(value => {\n        // Update signals based on form value\n        this.searchTerm.set(value);\n        this.charCount.set(value.length);\n\n        if (value.length < 3) {\n          this.status.set('typing...');\n          this.searchResults.set([]);\n          return;\n        }\n\n        this.status.set('searching...');\n\n        // Simulate search with setTimeout\n        setTimeout(() => {\n          const results = this.mockData.filter(item =>\n            item.toLowerCase().includes(value.toLowerCase())\n          );\n\n          this.searchResults.set(results);\n          this.status.set(results.length ? 'results found' : 'no results');\n        }, 300);\n      });\n  }\n\n  // Method to reset search\n  clearSearch() {\n    this.searchControl.setValue('');\n  }\n}`;\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Form Model\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Form Model</span>\n      in Angular 19 provides a structured approach to managing form state, validation, and data flow. It uses objects like FormGroup, FormControl, and FormArray to create a representation of the form that can be manipulated programmatically and bound to the UI. Angular 19 enhances form models with signals integration, improved type safety, and optimized performance for modern applications.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n<ng-template #notesRef>\n  <p>What is a Form Model?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      A Form Model is a structured representation of a form in Angular, created using FormGroup, FormControl, and FormArray classes.\n    </li>\n    <li>\n      <strong>Reactive Approach</strong>:\n      Form Models are the foundation of Angular's reactive forms approach, allowing you to define form structure and validation in your TypeScript code.\n    </li>\n    <li>\n      <strong>Data Binding</strong>:\n      Form Models maintain synchronization between your component class and the UI, handling data flow in both directions.\n    </li>\n    <li>\n      <strong>Validation Framework</strong>:\n      Form Models integrate with Angular's validation system to track the validity of individual controls and the entire form.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Form Model Improvements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Signal Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 enables seamless integration between form models and signals, providing more efficient reactivity and better control over change detection.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Type-Safe Form Controls</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Enhanced TypeScript support with the nonNullable option and improved generic types for form controls, ensuring type safety across your application.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Zone-less Operation</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Form models can operate efficiently outside of Zone.js, using signals and the takeUntilDestroyed operator for automatic cleanup.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Standalone Component Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Better support for using reactive forms in standalone components with simplified imports and reduced boilerplate.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Advanced Form Builders</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved FormBuilder with better type inference, making it easier to create complex form structures with proper typing.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Working with Form Models in Angular 19</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Basic Form Model with Signals</strong>:\n      Create a simple form with validation and signal integration.\n\n      <button (click)=\"code_1_ref.hidden = !code_1_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_1_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Signal-Based Form Model</strong>:\n      Connecting form controls to signals for reactive state management.\n\n      <button (click)=\"code_2_ref.hidden = !code_2_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_2_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Nested Form Model with FormArray</strong>:\n      Creating complex form structures with nested groups and arrays.\n\n      <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_3_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Dynamic Form Model Generation</strong>:\n      Generating form models at runtime based on configuration data.\n\n      <button (click)=\"code_4_ref.hidden = !code_4_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_4_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Form Model Classes Comparison</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Class</th>\n        <th class=\"py-3 px-4 text-left\">Purpose</th>\n        <th class=\"py-3 px-4 text-left\">Angular 19 Improvements</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">FormControl</td>\n        <td class=\"py-3 px-4\">Manages a single form input</td>\n        <td class=\"py-3 px-4\">Signal integration, nonNullable option</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">FormGroup</td>\n        <td class=\"py-3 px-4\">Manages a collection of controls</td>\n        <td class=\"py-3 px-4\">Improved typing, better performance</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">FormArray</td>\n        <td class=\"py-3 px-4\">Manages dynamic lists of controls</td>\n        <td class=\"py-3 px-4\">Better type inference for arrays</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">FormBuilder</td>\n        <td class=\"py-3 px-4\">Factory service for form creation</td>\n        <td class=\"py-3 px-4\">Enhanced type safety and inference</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Leverage Signal Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Connect Forms to Signals</strong>:\n          Use the takeUntilDestroyed operator from &#64;angular/core/rxjs-interop to connect form control values to signals for better reactivity.\n\n          <button (click)=\"code_5_ref.hidden = !code_5_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code_5_ref hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_5\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n        <li>\n          <strong>Use Computed Signals for Derived State</strong>:\n          Derive computed values from form state using Angular's computed() function to avoid duplicating logic and ensure consistency.\n          <pre><code class=\"text-xs\">// Computed values from form state\nconst isNameValid = computed(() =>\n  !formControls.name.errors && formControls.name.touched\n);</code></pre>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Structure Forms Effectively</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Nested Form Groups</strong>:\n          Break down complex forms into logical nested form groups to improve maintainability and code organization.\n          <pre><code class=\"text-xs\">// Logical grouping with nested forms\nthis.userForm = this.fb.group({{ '{' }}\n  basicInfo: this.fb.group({{ '{' }}\n    name: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]]\n  {{ '}' }}),\n  address: this.fb.group({{ '{' }}\n    street: [''],\n    city: [''],\n    zipCode: ['']\n  {{ '}' }})\n{{ '}' }});</code></pre>\n        </li>\n        <li>\n          <strong>Form Arrays for Dynamic Data</strong>:\n          Use FormArray for parts of forms that need to grow or shrink dynamically, such as adding multiple items to an order.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Zone-less Forms</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Signal-Based UI Updates</strong>:\n          Use signals to drive UI updates from form changes in zone-less applications for better performance.\n        </li>\n        <li>\n          <strong>Optimize Change Detection</strong>:\n          Control when change detection runs by using signals instead of relying on Zone.js, especially for complex forms with frequent updates.\n\n          <button (click)=\"code_6_ref.hidden = !code_6_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code_6_ref hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_6\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Enhance Validation Strategies</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Custom Validators</strong>:\n          Create reusable validator functions that can be shared across different forms in your application.\n          <pre><code class=\"text-xs\">// Custom validator function\nfunction passwordStrength(control: AbstractControl): ValidationErrors | null {{ '{' }}\n  const value = control.value;\n  if (!value) return null;\n\n  const hasUpperCase = /[A-Z]/.test(value);\n  const hasLowerCase = /[a-z]/.test(value);\n  const hasDigit = /\\d/.test(value);\n\n  return (hasUpperCase && hasLowerCase && hasDigit)\n    ? null\n    : {{ '{' }} passwordStrength: true {{ '}' }};\n{{ '}' }}</code></pre>\n        </li>\n        <li>\n          <strong>Cross-Field Validation</strong>:\n          Use form-level validators to validate relationships between multiple fields such as password confirmation.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Prioritize User Experience</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Staged Validation</strong>:\n          Configure when validation messages appear using the updateOn property ('change', 'blur', or 'submit') to avoid overwhelming users.\n        </li>\n        <li>\n          <strong>Progressive Disclosure</strong>:\n          Show or hide parts of a form based on user input, using form values to conditionally render sections of the UI.\n          <pre><code class=\"text-xs\">// Form-driven conditional content\n&lt;div *ngIf=\"userForm.get('newsletter')?.value\"&gt;\n  &lt;label&gt;Email frequency:&lt;/label&gt;\n  &lt;select formControlName=\"emailFrequency\"&gt;\n    &lt;option value=\"daily\"&gt;Daily&lt;/option&gt;\n    &lt;option value=\"weekly\"&gt;Weekly&lt;/option&gt;\n    &lt;option value=\"monthly\"&gt;Monthly&lt;/option&gt;\n  &lt;/select&gt;\n&lt;/div&gt;</code></pre>\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Angular 19's Form Model:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Signal Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Form models now integrate seamlessly with Angular's signals system, enabling more precise control over reactivity and change detection, especially valuable in zone-less applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Type Safety</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Improved TypeScript support with better generic types, nonNullable controls, and stronger type inference prevents many common errors at compile time rather than runtime.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Improvements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Form models can now operate efficiently outside of Zone.js, resulting in better performance and reduced memory usage for form-heavy applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simplified Cleanup</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Integration with takeUntilDestroyed from &#64;angular/core/rxjs-interop eliminates the need for manual subscription management, preventing memory leaks without boilerplate code.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Standalone Component Support</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Form models work naturally with standalone components, reducing the need for module-level imports and making forms easier to implement in modern Angular applications.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Migration Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Upgrading existing forms to take advantage of Angular 19 features like signal integration requires significant refactoring, which can be time-consuming for large applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The signal-based approach to form management introduces new patterns and concepts that developers need to learn, particularly for those familiar with the traditional reactive forms pattern.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Increased Initial Setup</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Setting up signal integration with forms requires more code initially compared to basic reactive forms, which may feel like overhead for simpler forms.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Library Compatibility Issues</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Third-party form libraries may not yet be fully compatible with Angular 19's signal approach, requiring custom integration or workarounds in some cases.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Tracking data flow in signal-integrated forms can be more complex than traditional forms, as it involves understanding both the forms API and signals system.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>FormControl</strong>:\n      <p>\n        The fundamental building block for form inputs in Angular, now enhanced with signal integration and improved type safety.\n      </p>\n    </li>\n    <li>\n      <strong>Signals</strong>:\n      <p>\n        Angular's reactive primitive that can be connected with form models to create more efficient forms with fine-grained reactivity.\n      </p>\n    </li>\n    <li>\n      <strong>Validators</strong>:\n      <p>\n        Functions that enforce data quality rules on form controls, with better TypeScript integration in Angular 19.\n      </p>\n    </li>\n    <li>\n      <strong>FormArray</strong>:\n      <p>\n        A specialized collection in form models for managing dynamic lists of controls, with improved typing in Angular 19.\n      </p>\n    </li>\n    <li>\n      <strong>Custom Form Controls</strong>:\n      <p>\n        Creating reusable form controls that implement ControlValueAccessor, now with better standalone component support.\n      </p>\n    </li>\n    <li>\n      <strong>Zone-less Applications</strong>:\n      <p>\n        Angular applications that operate without Zone.js, using signals for change detection, with form models specifically optimized for this approach in Angular 19.\n      </p>\n    </li>\n    <li>\n      <strong>takeUntilDestroyed</strong>:\n      <p>\n        A utility from &#64;angular/core/rxjs-interop that automatically manages form subscriptions, cleaning them up when components are destroyed.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-form-model',\n  templateUrl: './form-model.component.html',\n  styleUrls: ['./form-model.component.scss']\n})\nexport class FormModelComponent {\n  selectedTab = 1;\n\n  // Template reference variables\n  code_1_ref: any = { hidden: false };\n  code_2_ref: any = { hidden: false };\n  code_3_ref: any = { hidden: false };\n  code_4_ref: any = { hidden: false };\n  code_5_ref: any = { hidden: false };\n  code_6_ref: any = { hidden: false };\n\n  // Template outlet references\n  notesRef: any;\n  bestRef: any;\n  prosConsRef: any;\n  topicsRef: any;\n\n  // Example code snippets\n  code_1 = `\n// Basic Form Model with Signals in Angular 19\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-basic-form-model',\n  standalone: true,\n  imports: [ReactiveFormsModule, JsonPipe],\n  template: \\`\n    <h2>User Registration</h2>\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n      <div>\n        <label for=\"name\">Name:</label>\n        <input id=\"name\" formControlName=\"name\">\n        <div *ngIf=\"userForm.get('name')?.errors?.['required'] && userForm.get('name')?.touched\">\n          Name is required\n        </div>\n      </div>\n\n      <div>\n        <label for=\"email\">Email:</label>\n        <input id=\"email\" type=\"email\" formControlName=\"email\">\n        <div *ngIf=\"userForm.get('email')?.errors?.['required'] && userForm.get('email')?.touched\">\n          Email is required\n        </div>\n        <div *ngIf=\"userForm.get('email')?.errors?.['email'] && userForm.get('email')?.touched\">\n          Please enter a valid email\n        </div>\n      </div>\n\n      <button type=\"submit\" [disabled]=\"!userForm.valid\">Register</button>\n    </form>\n\n    <div>\n      <p>Form status: {{ userForm.status }}</p>\n      <p>Form value: {{ userForm.value | json }}</p>\n    </div>\n  \\`\n})\nexport class BasicFormModelComponent {\n  // Form model definition with validation\n  userForm = new FormGroup({\n    name: new FormControl('', {\n      validators: [Validators.required],\n      nonNullable: true\n    }),\n    email: new FormControl('', {\n      validators: [Validators.required, Validators.email],\n      nonNullable: true\n    })\n  });\n\n  onSubmit() {\n    if (this.userForm.valid) {\n      console.log('Form submitted:', this.userForm.value);\n    } else {\n      this.userForm.markAllAsTouched();\n    }\n  }\n}`;\n\n  code_2 = `\n// Signal-Based Form Model in Angular 19\nimport { Component, signal, computed, effect } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-signal-form-model',\n  standalone: true,\n  imports: [ReactiveFormsModule, JsonPipe],\n  template: \\`\n    <h2>Signal-Based Form</h2>\n    <form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n      <div>\n        <label for=\"name\">Product Name:</label>\n        <input id=\"name\" formControlName=\"name\">\n      </div>\n\n      <div>\n        <label for=\"price\">Price ($):</label>\n        <input id=\"price\" type=\"number\" formControlName=\"price\">\n      </div>\n\n      <div>\n        <label for=\"inStock\">\n          <input id=\"inStock\" type=\"checkbox\" formControlName=\"inStock\">\n          In Stock\n        </label>\n      </div>\n\n      <button type=\"submit\" [disabled]=\"!productForm.valid\">Add Product</button>\n    </form>\n\n    <div class=\"summary\">\n      <h3>Form Summary (from signals)</h3>\n      <p>Product: {{ productName() }}</p>\n      <p>Price: \\${{ formattedPrice() }}</p>\n      <p>Available: {{ availabilityStatus() }}</p>\n      <p>Valid: {{ isValid() }}</p>\n    </div>\n  \\`\n})\nexport class SignalFormModelComponent {\n  // Form model definition\n  productForm = new FormGroup({\n    name: new FormControl('', {\n      validators: [Validators.required],\n      nonNullable: true\n    }),\n    price: new FormControl<number>(0, {\n      validators: [Validators.required, Validators.min(0)],\n      nonNullable: true\n    }),\n    inStock: new FormControl(false, { nonNullable: true })\n  });\n\n  // Signals derived from form state\n  productName = signal('');\n  price = signal(0);\n  inStock = signal(false);\n  isValid = signal(false);\n\n  // Computed signals for derived data\n  formattedPrice = computed(() => {\n    return this.price().toFixed(2);\n  });\n\n  availabilityStatus = computed(() => {\n    return this.inStock() ? 'Yes' : 'No';\n  });\n\n  constructor() {\n    // Connect form controls to signals using rxjs-interop\n    this.productForm.get('name')!.valueChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(value => this.productName.set(value));\n\n    this.productForm.get('price')!.valueChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(value => this.price.set(value));\n\n    this.productForm.get('inStock')!.valueChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(value => this.inStock.set(value));\n\n    this.productForm.statusChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => this.isValid.set(this.productForm.valid));\n\n    // Effect for side effects when form changes\n    effect(() => {\n      const name = this.productName();\n      const price = this.price();\n      console.log(\\`Product updated: \\${name} at \\$\\${price}\\`);\n    });\n  }\n\n  onSubmit() {\n    if (this.productForm.valid) {\n      console.log('Product added:', this.productForm.value);\n      this.productForm.reset({\n        name: '',\n        price: 0,\n        inStock: false\n      });\n    }\n  }\n}`;\n\n  code_3 = `\n// Nested Form Model with FormArray in Angular 19\nimport { Component } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormArray,\n  ReactiveFormsModule,\n  Validators\n} from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-nested-form-model',\n  standalone: true,\n  imports: [ReactiveFormsModule, JsonPipe],\n  template: \\`\n    <h2>Order Form</h2>\n    <form [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\">\n      <!-- Customer Information -->\n      <div formGroupName=\"customer\">\n        <h3>Customer Information</h3>\n        <div>\n          <label for=\"name\">Name:</label>\n          <input id=\"name\" formControlName=\"name\">\n        </div>\n        <div>\n          <label for=\"email\">Email:</label>\n          <input id=\"email\" type=\"email\" formControlName=\"email\">\n        </div>\n      </div>\n\n      <!-- Shipping Address -->\n      <div formGroupName=\"shippingAddress\">\n        <h3>Shipping Address</h3>\n        <div>\n          <label for=\"street\">Street:</label>\n          <input id=\"street\" formControlName=\"street\">\n        </div>\n        <div>\n          <label for=\"city\">City:</label>\n          <input id=\"city\" formControlName=\"city\">\n        </div>\n        <div>\n          <label for=\"zipCode\">Zip Code:</label>\n          <input id=\"zipCode\" formControlName=\"zipCode\">\n        </div>\n      </div>\n\n      <!-- Order Items (FormArray) -->\n      <div>\n        <h3>Order Items</h3>\n        <div formArrayName=\"items\">\n          <div *ngFor=\"let item of items.controls; let i = index\" [formGroupName]=\"i\">\n            <div>\n              <label [for]=\"'product-' + i\">Product:</label>\n              <input [id]=\"'product-' + i\" formControlName=\"product\">\n            </div>\n            <div>\n              <label [for]=\"'quantity-' + i\">Quantity:</label>\n              <input [id]=\"'quantity-' + i\" type=\"number\" formControlName=\"quantity\">\n            </div>\n            <button type=\"button\" (click)=\"removeItem(i)\">Remove</button>\n          </div>\n        </div>\n        <button type=\"button\" (click)=\"addItem()\">Add Item</button>\n      </div>\n\n      <button type=\"submit\" [disabled]=\"!orderForm.valid\">Place Order</button>\n    </form>\n  \\`\n})\nexport class NestedFormModelComponent {\n  orderForm = this.fb.group({\n    customer: this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    }),\n    shippingAddress: this.fb.group({\n      street: ['', Validators.required],\n      city: ['', Validators.required],\n      zipCode: ['', [Validators.required, Validators.pattern(/^\\\\d{5}$/)]]\n    }),\n    items: this.fb.array([this.createItem()])\n  });\n\n  // Getter for easier access to the items FormArray\n  get items(): FormArray {\n    return this.orderForm.get('items') as FormArray;\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  createItem(): FormGroup {\n    return this.fb.group({\n      product: ['', Validators.required],\n      quantity: [1, [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  addItem(): void {\n    this.items.push(this.createItem());\n  }\n\n  removeItem(index: number): void {\n    this.items.removeAt(index);\n  }\n\n  onSubmit() {\n    if (this.orderForm.valid) {\n      console.log('Order submitted:', this.orderForm.value);\n    } else {\n      this.markFormGroupTouched(this.orderForm);\n    }\n  }\n\n  // Helper to mark all controls as touched\n  markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      } else if (control instanceof FormArray) {\n        control.controls.forEach(c => {\n          if (c instanceof FormGroup) {\n            this.markFormGroupTouched(c);\n          } else {\n            c.markAsTouched();\n          }\n        });\n      }\n    });\n  }\n}`;\n\n  code_4 = `\n// Dynamic Form Model Generation in Angular 19\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\n\ninterface FormField {\n  key: string;\n  label: string;\n  type: 'text' | 'email' | 'number' | 'checkbox' | 'select';\n  options?: { value: string; label: string }[];\n  validators: any[];\n  defaultValue?: any;\n}\n\n@Component({\n  selector: 'app-dynamic-form-model',\n  standalone: true,\n  imports: [ReactiveFormsModule, JsonPipe],\n  template: \\`\n    <h2>Dynamic Form Generator</h2>\n    <form [formGroup]=\"dynamicForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"formReady\">\n      <div *ngFor=\"let field of formConfig\">\n        <div [ngSwitch]=\"field.type\">\n          <!-- Text, Email, Number inputs -->\n          <div *ngSwitchCase=\"'text' || 'email' || 'number'\">\n            <label [for]=\"field.key\">{{ field.label }}:</label>\n            <input [id]=\"field.key\"\n                  [type]=\"field.type\"\n                  [formControlName]=\"field.key\">\n          </div>\n\n          <!-- Checkbox -->\n          <div *ngSwitchCase=\"'checkbox'\">\n            <label>\n              <input type=\"checkbox\" [formControlName]=\"field.key\">\n              {{ field.label }}\n            </label>\n          </div>\n\n          <!-- Select dropdown -->\n          <div *ngSwitchCase=\"'select'\">\n            <label [for]=\"field.key\">{{ field.label }}:</label>\n            <select [id]=\"field.key\" [formControlName]=\"field.key\">\n              <option value=\"\">-- Select --</option>\n              <option *ngFor=\"let opt of field.options\" [value]=\"opt.value\">\n                {{ opt.label }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <!-- Error messages -->\n        <div *ngIf=\"dynamicForm.get(field.key)?.errors && dynamicForm.get(field.key)?.touched\" class=\"error-container\">\n          <div *ngIf=\"dynamicForm.get(field.key)?.errors?.['required']\">{{ field.label }} is required</div>\n          <div *ngIf=\"dynamicForm.get(field.key)?.errors?.['email']\">Please enter a valid email</div>\n          <div *ngIf=\"dynamicForm.get(field.key)?.errors?.['min']\">\n            Value must be at least {{ dynamicForm.get(field.key)?.errors?.['min'].min }}\n          </div>\n        </div>\n      </div>\n\n      <button type=\"submit\" [disabled]=\"!dynamicForm.valid\">Submit</button>\n    </form>\n\n    <div *ngIf=\"formReady\">\n      <h3>Form Values</h3>\n      <pre>{{ dynamicForm.value | json }}</pre>\n    </div>\n  \\`\n})\nexport class DynamicFormModelComponent implements OnInit {\n  dynamicForm!: FormGroup;\n  formReady = false;\n\n  // Form configuration (could come from an API)\n  formConfig: FormField[] = [\n    {\n      key: 'name',\n      label: 'Full Name',\n      type: 'text',\n      validators: [Validators.required],\n      defaultValue: ''\n    },\n    {\n      key: 'email',\n      label: 'Email Address',\n      type: 'email',\n      validators: [Validators.required, Validators.email],\n      defaultValue: ''\n    },\n    {\n      key: 'age',\n      label: 'Age',\n      type: 'number',\n      validators: [Validators.required, Validators.min(18)],\n      defaultValue: null\n    },\n    {\n      key: 'subscribeNewsletter',\n      label: 'Subscribe to newsletter',\n      type: 'checkbox',\n      validators: [],\n      defaultValue: false\n    },\n    {\n      key: 'countryCode',\n      label: 'Country',\n      type: 'select',\n      options: [\n        { value: 'us', label: 'United States' },\n        { value: 'ca', label: 'Canada' },\n        { value: 'uk', label: 'United Kingdom' },\n        { value: 'au', label: 'Australia' }\n      ],\n      validators: [Validators.required],\n      defaultValue: ''\n    }\n  ];\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  buildForm() {\n    // Create form group from configuration\n    const formControls: Record<string, any> = {};\n\n    this.formConfig.forEach(field => {\n      formControls[field.key] = [\n        field.defaultValue,\n        field.validators\n      ];\n    });\n\n    this.dynamicForm = this.fb.group(formControls);\n    this.formReady = true;\n  }\n\n  onSubmit() {\n    if (this.dynamicForm.valid) {\n      console.log('Form submitted:', this.dynamicForm.value);\n      // Process form data...\n      this.dynamicForm.reset();\n    } else {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.dynamicForm.controls).forEach(key => {\n        this.dynamicForm.get(key)?.markAsTouched();\n      });\n    }\n  }\n}`;\n\n  code_5 = `\n// Advanced Form Model with Custom Controls in Angular 19\nimport { Component } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n  Validators,\n  FormsModule\n} from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\n\n// Custom form control component\n@Component({\n  selector: 'app-rating-control',\n  standalone: true,\n  imports: [FormsModule],\n  template: \\`\n    <div class=\"rating-control\">\n      <label>{{ label }}</label>\n      <div class=\"stars\">\n        <span\n          *ngFor=\"let star of [1, 2, 3, 4, 5]\"\n          class=\"star\"\n          [class.filled]=\"value >= star\"\n          (click)=\"onStarClick(star)\">\n          ★\n        </span>\n      </div>\n    </div>\n  \\`,\n  styles: [\\`\n    .rating-control { margin: 1rem 0; }\n    .stars { display: flex; }\n    .star {\n      cursor: pointer;\n      font-size: 24px;\n      color: #ccc;\n      margin-right: 5px;\n    }\n    .star.filled { color: gold; }\n  \\`],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RatingControlComponent,\n      multi: true\n    }\n  ]\n})\nexport class RatingControlComponent implements ControlValueAccessor {\n  value = 0;\n  label = 'Rating';\n  disabled = false;\n\n  // Function to call when value changes\n  onChange: any = () => {};\n\n  // Function to call when control is touched\n  onTouched: any = () => {};\n\n  onStarClick(rating: number) {\n    if (!this.disabled) {\n      this.value = rating;\n      this.onChange(this.value);\n      this.onTouched();\n    }\n  }\n\n  // Implement ControlValueAccessor interface\n  writeValue(value: number): void {\n    this.value = value || 0;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n\n// Main form component using custom control\n@Component({\n  selector: 'app-custom-form-model',\n  standalone: true,\n  imports: [ReactiveFormsModule, RatingControlComponent, JsonPipe],\n  template: \\`\n    <h2>Product Review Form</h2>\n    <form [formGroup]=\"reviewForm\" (ngSubmit)=\"onSubmit()\">\n      <div>\n        <label for=\"product\">Product:</label>\n        <input id=\"product\" formControlName=\"product\">\n      </div>\n\n      <!-- Custom rating control -->\n      <app-rating-control formControlName=\"rating\"></app-rating-control>\n\n      <div>\n        <label for=\"comment\">Comment:</label>\n        <textarea id=\"comment\" formControlName=\"comment\" rows=\"4\"></textarea>\n      </div>\n\n      <button type=\"submit\" [disabled]=\"!reviewForm.valid\">Submit Review</button>\n    </form>\n\n    <div *ngIf=\"submitted\">\n      <h3>Submitted Review</h3>\n      <pre>{{ lastSubmittedValue | json }}</pre>\n    </div>\n  \\`\n})\nexport class CustomFormModelComponent {\n  reviewForm: FormGroup;\n  submitted = false;\n  lastSubmittedValue: any = null;\n\n  constructor(private fb: FormBuilder) {\n    this.reviewForm = this.fb.group({\n      product: ['', Validators.required],\n      rating: [0, [Validators.required, Validators.min(1)]],\n      comment: ['', [Validators.required, Validators.minLength(10)]]\n    });\n  }\n\n  onSubmit() {\n    if (this.reviewForm.valid) {\n      console.log('Review submitted:', this.reviewForm.value);\n      this.lastSubmittedValue = this.reviewForm.value;\n      this.submitted = true;\n\n      // Reset form after submission\n      this.reviewForm.reset({\n        product: '',\n        rating: 0,\n        comment: ''\n      });\n    } else {\n      // Mark all fields as touched to trigger validation\n      Object.keys(this.reviewForm.controls).forEach(key => {\n        this.reviewForm.get(key)?.markAsTouched();\n      });\n    }\n  }\n}`;\n\n  code_6 = `\n// Zone-less Form Model with Signals in Angular 19\nimport { Component, signal, computed, effect } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\ninterface SearchFilters {\n  query: string;\n  category: string;\n  minPrice: number;\n  maxPrice: number;\n  inStock: boolean;\n}\n\n@Component({\n  selector: 'app-zoneless-form-model',\n  standalone: true,\n  imports: [ReactiveFormsModule, JsonPipe],\n  template: \\`\n    <h2>Product Search</h2>\n    <form [formGroup]=\"filterForm\">\n      <div>\n        <input\n          placeholder=\"Search products...\"\n          formControlName=\"query\"\n          (input)=\"onSearchInput()\">\n      </div>\n\n      <div>\n        <label for=\"category\">Category:</label>\n        <select id=\"category\" formControlName=\"category\" (change)=\"onSearchInput()\">\n          <option value=\"\">All Categories</option>\n          <option value=\"electronics\">Electronics</option>\n          <option value=\"clothing\">Clothing</option>\n          <option value=\"home\">Home & Kitchen</option>\n        </select>\n      </div>\n\n      <div class=\"price-range\">\n        <label>Price Range:</label>\n        <div class=\"inputs\">\n          <input\n            type=\"number\"\n            placeholder=\"Min\"\n            formControlName=\"minPrice\"\n            (change)=\"onSearchInput()\">\n          <span>to</span>\n          <input\n            type=\"number\"\n            placeholder=\"Max\"\n            formControlName=\"maxPrice\"\n            (change)=\"onSearchInput()\">\n        </div>\n      </div>\n\n      <div>\n        <label>\n          <input type=\"checkbox\" formControlName=\"inStock\" (change)=\"onSearchInput()\">\n          In Stock Only\n        </label>\n      </div>\n    </form>\n\n    <div class=\"search-status\">\n      <div *ngIf=\"searchStatus() === 'typing'\">Typing...</div>\n      <div *ngIf=\"searchStatus() === 'searching'\">Searching...</div>\n      <div *ngIf=\"searchStatus() === 'results'\">\n        Found {{ resultsCount() }} results\n      </div>\n      <div *ngIf=\"searchStatus() === 'no-results'\">\n        No results found\n      </div>\n      <div *ngIf=\"searchStatus() === 'error'\">\n        An error occurred. Please try again.\n      </div>\n    </div>\n\n    <div class=\"search-summary\">\n      <h3>Current Filters</h3>\n      <ul>\n        <li *ngIf=\"currentFilters().query\">\n          Search term: \"{{ currentFilters().query }}\"\n        </li>\n        <li *ngIf=\"currentFilters().category\">\n          Category: {{ currentFilters().category }}\n        </li>\n        <li *ngIf=\"currentFilters().minPrice || currentFilters().maxPrice\">\n          Price:\n          {{ currentFilters().minPrice ? ('\\$' + currentFilters().minPrice) : '\\$0' }}\n          to\n          {{ currentFilters().maxPrice ? ('\\$' + currentFilters().maxPrice) : 'any' }}\n        </li>\n        <li *ngIf=\"currentFilters().inStock\">\n          Showing in-stock items only\n        </li>\n      </ul>\n    </div>\n  \\`\n})\nexport class ZonelessFormModelComponent {\n  // Form model\n  filterForm: FormGroup = this.fb.group({\n    query: ['', { nonNullable: true }],\n    category: ['', { nonNullable: true }],\n    minPrice: [null as number | null],\n    maxPrice: [null as number | null],\n    inStock: [false, { nonNullable: true }]\n  });\n\n  // Signals for reactive UI updates\n  currentFilters = signal<SearchFilters>({\n    query: '',\n    category: '',\n    minPrice: 0,\n    maxPrice: 0,\n    inStock: false\n  });\n\n  searchStatus = signal<'idle' | 'typing' | 'searching' | 'results' | 'no-results' | 'error'>('idle');\n  resultsCount = signal(0);\n\n  // Computed signals\n  hasActiveFilters = computed(() => {\n    const filters = this.currentFilters();\n    return !!(\n      filters.query ||\n      filters.category ||\n      filters.minPrice ||\n      filters.maxPrice ||\n      filters.inStock\n    );\n  });\n\n  constructor(private fb: FormBuilder) {\n    // Connect form values to signals\n    this.filterForm.valueChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(formValue => {\n        // Update the filters signal with current form values\n        this.currentFilters.update(current => ({\n          ...current,\n          ...formValue\n        }));\n      });\n\n    // Effect to log filter changes for debugging\n    effect(() => {\n      console.log('Filters updated:', this.currentFilters());\n    });\n  }\n\n  onSearchInput() {\n    this.searchStatus.set('typing');\n\n    // Simulate search after typing stops\n    setTimeout(() => {\n      this.searchStatus.set('searching');\n\n      // Simulate API call with the current filters\n      this.performSearch(this.currentFilters());\n    }, 300);\n  }\n\n  performSearch(filters: SearchFilters) {\n    // Simulate API search\n    setTimeout(() => {\n      try {\n        // Simulate results based on filters (in a real app, this would be an API call)\n        const count = this.calculateMockResults(filters);\n\n        this.resultsCount.set(count);\n        this.searchStatus.set(count > 0 ? 'results' : 'no-results');\n      } catch (error) {\n        this.searchStatus.set('error');\n      }\n    }, 500);\n  }\n\n  private calculateMockResults(filters: SearchFilters): number {\n    // Mock logic to determine results count based on filters\n    // In a real app, this would be replaced by actual search results\n    let baseCount = 100;\n\n    if (filters.query) {\n      baseCount = Math.floor(baseCount * 0.7);\n    }\n\n    if (filters.category) {\n      baseCount = Math.floor(baseCount * 0.5);\n    }\n\n    if (filters.minPrice) {\n      baseCount = Math.floor(baseCount * 0.9);\n    }\n\n    if (filters.maxPrice) {\n      baseCount = Math.floor(baseCount * 0.8);\n    }\n\n    if (filters.inStock) {\n      baseCount = Math.floor(baseCount * 0.6);\n    }\n\n    return baseCount;\n  }\n\n  // Reset form and signals\n  resetFilters() {\n    this.filterForm.reset({\n      query: '',\n      category: '',\n      minPrice: null,\n      maxPrice: null,\n      inStock: false\n    });\n\n    this.searchStatus.set('idle');\n    this.resultsCount.set(0);\n  }\n}`;\n\n  constructor() {}\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-form-validation',\n  templateUrl: './form-validation.component.html',\n  styleUrls: ['./form-validation.component.scss']\n})\nexport class FormValidationComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  // Template reference variables\n  code_1_ref: any = { hidden: false };\n  code_2_ref: any = { hidden: false };\n  code_3_ref: any = { hidden: false };\n  code_4_ref: any = { hidden: false };\n  code_5_ref: any = { hidden: false };\n  code_6_ref: any = { hidden: false };\n\n  // Template outlet references\n  notesRef: any;\n  bestRef: any;\n  prosConsRef: any;\n  topicsRef: any;\n\n  // Example code snippets\n  code_1 = `\n// Basic Form Validation in Angular 19\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-basic-validation',\n  standalone: true,\n  imports: [ReactiveFormsModule, JsonPipe],\n  template: \\`\n    <h2>User Registration</h2>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <div>\n        <label for=\"email\">Email:</label>\n        <input id=\"email\" type=\"email\" formControlName=\"email\">\n\n        <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"error-messages\">\n          <div *ngIf=\"email.errors?.['required']\">Email is required</div>\n          <div *ngIf=\"email.errors?.['email']\">Please enter a valid email</div>\n        </div>\n      </div>\n\n      <div>\n        <label for=\"password\">Password:</label>\n        <input id=\"password\" type=\"password\" formControlName=\"password\">\n\n        <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"error-messages\">\n          <div *ngIf=\"password.errors?.['required']\">Password is required</div>\n          <div *ngIf=\"password.errors?.['minlength']\">\n            Password must be at least {{password.errors?.['minlength'].requiredLength}} characters\n          </div>\n        </div>\n      </div>\n\n      <button type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n    </form>\n\n    <div *ngIf=\"formSubmitted\">\n      <h3>Form Status</h3>\n      <p>Valid: {{ registerForm.valid }}</p>\n      <p>Values: {{ registerForm.value | json }}</p>\n    </div>\n  \\`\n})\nexport class BasicValidationComponent {\n  registerForm = new FormGroup({\n    email: new FormControl('', {\n      validators: [Validators.required, Validators.email],\n      nonNullable: true\n    }),\n    password: new FormControl('', {\n      validators: [Validators.required, Validators.minLength(8)],\n      nonNullable: true\n    })\n  });\n\n  formSubmitted = false;\n\n  // Convenience getters for easier access to form controls\n  get email() { return this.registerForm.get('email')!; }\n  get password() { return this.registerForm.get('password')!; }\n\n  onSubmit() {\n    this.formSubmitted = true;\n\n    if (this.registerForm.valid) {\n      console.log('Form submitted successfully', this.registerForm.value);\n      // Process form data here\n    } else {\n      // Mark all fields as touched to trigger validation display\n      Object.keys(this.registerForm.controls).forEach(key => {\n        const control = this.registerForm.get(key);\n        control?.markAsTouched();\n      });\n    }\n  }\n}`;\n\n  code_2 = `\n// Signal-Based Form Validation in Angular 19\nimport { Component, computed, signal } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators\n} from '@angular/forms';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'app-signal-validation',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  template: \\`\n    <h2>Signal-Based Validation</h2>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <div>\n        <label for=\"username\">Username:</label>\n        <input id=\"username\" formControlName=\"username\">\n\n        <div *ngIf=\"usernameErrors().length > 0\" class=\"error-container\">\n          <div *ngFor=\"let error of usernameErrors()\" class=\"error-message\">\n            {{ error }}\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <label for=\"age\">Age:</label>\n        <input id=\"age\" type=\"number\" formControlName=\"age\">\n\n        <div *ngIf=\"ageErrors().length > 0\" class=\"error-container\">\n          <div *ngFor=\"let error of ageErrors()\" class=\"error-message\">\n            {{ error }}\n          </div>\n        </div>\n      </div>\n\n      <button type=\"submit\" [disabled]=\"!formIsValid()\">Submit</button>\n    </form>\n\n    <div class=\"form-summary\" *ngIf=\"formTouched()\">\n      <h3>Form Summary:</h3>\n      <p>Form is {{ formIsValid() ? 'valid' : 'invalid' }}</p>\n      <p>Fields with errors: {{ errorCount() }}</p>\n    </div>\n  \\`\n})\nexport class SignalValidationComponent {\n  form: FormGroup;\n\n  // Signals to track validation state\n  formTouched = signal(false);\n  usernameErrors = signal<string[]>([]);\n  ageErrors = signal<string[]>([]);\n\n  // Computed signals\n  formIsValid = computed(() =>\n    this.usernameErrors().length === 0 &&\n    this.ageErrors().length === 0\n  );\n\n  errorCount = computed(() =>\n    this.usernameErrors().length +\n    this.ageErrors().length\n  );\n\n  constructor(private fb: FormBuilder) {\n    this.form = this.fb.group({\n      username: ['', [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.pattern(/^[a-zA-Z0-9_-]*$/)\n      ]],\n      age: [null, [\n        Validators.required,\n        Validators.min(18),\n        Validators.max(120)\n      ]]\n    });\n\n    // Connect form validation to signals\n    this.form.get('username')!.valueChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => this.updateUsernameErrors());\n\n    this.form.get('age')!.valueChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => this.updateAgeErrors());\n\n    // Track overall form touched state\n    this.form.statusChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => {\n        if (this.form.touched) {\n          this.formTouched.set(true);\n        }\n      });\n  }\n\n  updateUsernameErrors() {\n    const control = this.form.get('username')!;\n    if (!control.touched) return;\n\n    const errors: string[] = [];\n    if (control.errors?.['required']) {\n      errors.push('Username is required');\n    }\n    if (control.errors?.['minlength']) {\n      errors.push(\\`Username must be at least \\${control.errors['minlength'].requiredLength} characters\\`);\n    }\n    if (control.errors?.['pattern']) {\n      errors.push('Username can only contain letters, numbers, underscores and hyphens');\n    }\n\n    this.usernameErrors.set(errors);\n  }\n\n  updateAgeErrors() {\n    const control = this.form.get('age')!;\n    if (!control.touched) return;\n\n    const errors: string[] = [];\n    if (control.errors?.['required']) {\n      errors.push('Age is required');\n    }\n    if (control.errors?.['min']) {\n      errors.push(\\`Age must be at least \\${control.errors['min'].min}\\`);\n    }\n    if (control.errors?.['max']) {\n      errors.push(\\`Age cannot exceed \\${control.errors['max'].max}\\`);\n    }\n\n    this.ageErrors.set(errors);\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      // Mark all fields as touched to trigger validation display\n      Object.keys(this.form.controls).forEach(key => {\n        this.form.get(key)?.markAsTouched();\n      });\n\n      // Update error signals\n      this.updateUsernameErrors();\n      this.updateAgeErrors();\n      this.formTouched.set(true);\n\n      return;\n    }\n\n    console.log('Form submitted:', this.form.value);\n    // Process form data here\n  }\n}`;\n\n  code_3 = `\n// Custom Validators with TypeScript in Angular 19\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n// Password strength validator\nexport function passwordStrengthValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const value = control.value;\n\n    if (!value) {\n      return null;\n    }\n\n    const hasUpperCase = /[A-Z]/.test(value);\n    const hasLowerCase = /[a-z]/.test(value);\n    const hasNumber = /[0-9]/.test(value);\n    const hasSpecialChar = /[!@#$%^&*()_+\\\\-=\\\\[\\\\]{};':\"\\\\\\\\|,.<>\\\\/?]/.test(value);\n\n    const passwordValid = hasUpperCase && hasLowerCase && hasNumber && hasSpecialChar;\n\n    return !passwordValid ? {\n      passwordStrength: {\n        hasUpperCase,\n        hasLowerCase,\n        hasNumber,\n        hasSpecialChar\n      }\n    } : null;\n  };\n}\n\n// Cross-field validation: Password matching\nexport function passwordMatchValidator(controlName: string, matchingControlName: string): ValidatorFn {\n  return (formGroup: AbstractControl): ValidationErrors | null => {\n    const control = formGroup.get(controlName);\n    const matchingControl = formGroup.get(matchingControlName);\n\n    if (!control || !matchingControl) {\n      return null;\n    }\n\n    if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\n      return null;\n    }\n\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n      return { mustMatch: true };\n    } else {\n      matchingControl.setErrors(null);\n      return null;\n    }\n  };\n}\n\n// Async validator example: Username availability check\nexport function usernameAvailabilityValidator(userService: any): AsyncValidatorFn {\n  return (control: AbstractControl): Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap(() => {\n        // In a real app, call your user service to check availability\n        return userService.checkUsernameAvailability(control.value).pipe(\n          map(available => available ? null : { usernameTaken: true }),\n          catchError(() => of({ serverError: true }))\n        );\n      })\n    );\n  };\n}\n\n// Using the validators in a component\n@Component({\n  selector: 'app-custom-validation-demo',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  template: \\`\n    <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n      <!-- Username field with async validation -->\n      <div>\n        <input formControlName=\"username\" placeholder=\"Username\">\n        <div *ngIf=\"signupForm.get('username')?.errors?.['usernameTaken']\">\n          This username is already taken\n        </div>\n        <div *ngIf=\"signupForm.get('username')?.pending\">\n          Checking availability...\n        </div>\n      </div>\n\n      <!-- Password with strength validation -->\n      <div>\n        <input type=\"password\" formControlName=\"password\" placeholder=\"Password\">\n        <div *ngIf=\"password.errors?.['passwordStrength']\" class=\"error-list\">\n          <p>Password must contain:</p>\n          <ul>\n            <li [class.valid]=\"!password.errors?.['passwordStrength'] ||\n                               password.errors?.['passwordStrength'].hasUpperCase\">\n              Uppercase letter\n            </li>\n            <li [class.valid]=\"!password.errors?.['passwordStrength'] ||\n                               password.errors?.['passwordStrength'].hasLowerCase\">\n              Lowercase letter\n            </li>\n            <li [class.valid]=\"!password.errors?.['passwordStrength'] ||\n                               password.errors?.['passwordStrength'].hasNumber\">\n              Number\n            </li>\n            <li [class.valid]=\"!password.errors?.['passwordStrength'] ||\n                               password.errors?.['passwordStrength'].hasSpecialChar\">\n              Special character\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <!-- Confirm password with cross-field validation -->\n      <div>\n        <input type=\"password\" formControlName=\"confirmPassword\" placeholder=\"Confirm Password\">\n        <div *ngIf=\"confirmPassword.errors?.['mustMatch']\">\n          Passwords must match\n        </div>\n      </div>\n\n      <button type=\"submit\" [disabled]=\"signupForm.invalid || signupForm.pending\">\n        Sign Up\n      </button>\n    </form>\n  \\`\n})\nexport class CustomValidationDemoComponent {\n  signupForm = this.fb.group({\n    username: ['', {\n      validators: [Validators.required, Validators.minLength(4)],\n      asyncValidators: [usernameAvailabilityValidator(this.userService)],\n      updateOn: 'blur'\n    }],\n    password: ['', [\n      Validators.required,\n      Validators.minLength(8),\n      passwordStrengthValidator()\n    ]],\n    confirmPassword: ['', Validators.required]\n  }, {\n    validators: [passwordMatchValidator('password', 'confirmPassword')]\n  });\n\n  get password() { return this.signupForm.get('password')!; }\n  get confirmPassword() { return this.signupForm.get('confirmPassword')!; }\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService\n  ) {}\n\n  onSubmit() {\n    if (this.signupForm.valid) {\n      console.log('Form submitted:', this.signupForm.value);\n    }\n  }\n}`;\n\n  code_4 = `\n// Real-time Validation with Signals in Angular 19\nimport { Component, computed, effect, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'app-realtime-validation',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  template: \\`\n    <h2>Password Strength Checker</h2>\n    <form [formGroup]=\"passwordForm\">\n      <div class=\"form-field\">\n        <label for=\"password\">Password</label>\n        <input\n          id=\"password\"\n          type=\"password\"\n          formControlName=\"password\"\n          autocomplete=\"new-password\"\n        >\n\n        <div class=\"password-strength\">\n          <div class=\"strength-label\">Strength: {{ strengthLabel() }}</div>\n          <div class=\"strength-meter\">\n            <div\n              class=\"strength-value\"\n              [style.width.%]=\"strengthPercentage()\"\n              [style.background-color]=\"strengthColor()\"\n            ></div>\n          </div>\n        </div>\n\n        <div class=\"requirements\" [class.all-valid]=\"allRequirementsMet()\">\n          <p>Your password must have:</p>\n          <ul>\n            <li [class.valid]=\"hasMinLength()\">\n              <span class=\"check\">✓</span> At least 8 characters\n            </li>\n            <li [class.valid]=\"hasUppercase()\">\n              <span class=\"check\">✓</span> At least one uppercase letter\n            </li>\n            <li [class.valid]=\"hasLowercase()\">\n              <span class=\"check\">✓</span> At least one lowercase letter\n            </li>\n            <li [class.valid]=\"hasDigit()\">\n              <span class=\"check\">✓</span> At least one number\n            </li>\n            <li [class.valid]=\"hasSpecialChar()\">\n              <span class=\"check\">✓</span> At least one special character\n            </li>\n          </ul>\n        </div>\n      </div>\n    </form>\n  \\`\n})\nexport class RealtimeValidationComponent {\n  passwordForm: FormGroup;\n\n  // Password value signal\n  password = signal('');\n\n  // Individual requirement signals\n  hasMinLength = computed(() => this.password().length >= 8);\n  hasUppercase = computed(() => /[A-Z]/.test(this.password()));\n  hasLowercase = computed(() => /[a-z]/.test(this.password()));\n  hasDigit = computed(() => /[0-9]/.test(this.password()));\n  hasSpecialChar = computed(() => /[!@#$%^&*(),.?\":{}|<>]/.test(this.password()));\n\n  // Overall strength computation\n  allRequirementsMet = computed(() =>\n    this.hasMinLength() &&\n    this.hasUppercase() &&\n    this.hasLowercase() &&\n    this.hasDigit() &&\n    this.hasSpecialChar()\n  );\n\n  strengthScore = computed(() => {\n    let score = 0;\n    if (this.hasMinLength()) score++;\n    if (this.hasUppercase()) score++;\n    if (this.hasLowercase()) score++;\n    if (this.hasDigit()) score++;\n    if (this.hasSpecialChar()) score++;\n    return score;\n  });\n\n  strengthPercentage = computed(() => this.strengthScore() * 20); // 5 criteria = 100% max\n\n  strengthLabel = computed(() => {\n    const score = this.strengthScore();\n    if (score <= 1) return 'Very Weak';\n    if (score === 2) return 'Weak';\n    if (score === 3) return 'Moderate';\n    if (score === 4) return 'Strong';\n    return 'Very Strong';\n  });\n\n  strengthColor = computed(() => {\n    const score = this.strengthScore();\n    if (score <= 1) return '#ff4d4d'; // red\n    if (score === 2) return '#ffa64d'; // orange\n    if (score === 3) return '#ffff4d'; // yellow\n    if (score === 4) return '#4dff4d'; // light green\n    return '#00cc00'; // green\n  });\n\n  constructor(private fb: FormBuilder) {\n    this.passwordForm = this.fb.group({\n      password: ['', [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)\n      ]]\n    });\n\n    // Connect form control to signal\n    this.passwordForm.get('password')!.valueChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(value => {\n        this.password.set(value || '');\n      });\n\n    // Effect to log strength changes (for demo purposes)\n    effect(() => {\n      console.log(\\`Password strength: \\${this.strengthLabel()} (\\${this.strengthScore()}/5)\\`);\n    });\n  }\n}`;\n\n  code_5 = `\n// Cross-Field Validation in Angular 19\nimport { Component } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  ValidationErrors,\n  Validators\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-cross-field-validation',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  template: \\`\n    <h2>Address Form</h2>\n    <form [formGroup]=\"addressForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"country\">Country</label>\n          <select id=\"country\" formControlName=\"country\">\n            <option value=\"\">Select a country</option>\n            <option value=\"us\">United States</option>\n            <option value=\"ca\">Canada</option>\n            <option value=\"uk\">United Kingdom</option>\n            <option value=\"au\">Australia</option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group\">\n          <label for=\"zipCode\">Zip/Postal Code</label>\n          <input id=\"zipCode\" formControlName=\"zipCode\">\n\n          <div *ngIf=\"zipCode.errors && zipCode.touched\" class=\"error-messages\">\n            <div *ngIf=\"zipCode.errors?.['required']\">\n              Zip/Postal code is required\n            </div>\n            <div *ngIf=\"zipCode.errors?.['pattern']\">\n              Invalid format for selected country\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"state\">State/Province</label>\n          <input id=\"state\" formControlName=\"state\">\n\n          <div *ngIf=\"state.errors && state.touched\" class=\"error-messages\">\n            <div *ngIf=\"state.errors?.['required']\">\n              State/Province is required\n            </div>\n            <div *ngIf=\"state.errors?.['requiredForCountry']\">\n              State/Province is required for {{ state.errors?.['requiredForCountry'] }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"addressForm.errors?.['invalidAddress']\" class=\"group-error\">\n        {{ addressForm.errors['invalidAddress'] }}\n      </div>\n\n      <button type=\"submit\" [disabled]=\"addressForm.invalid\">Submit</button>\n    </form>\n  \\`\n})\nexport class CrossFieldValidationComponent {\n  addressForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.addressForm = this.fb.group({\n      country: ['', Validators.required],\n      zipCode: ['', Validators.required],\n      state: ['']\n    }, {\n      validators: [this.addressValidator()],\n      updateOn: 'blur'\n    });\n\n    // Update validation rules when country changes\n    this.addressForm.get('country')!.valueChanges\n      .subscribe(country => this.updateValidationRules(country));\n  }\n\n  get zipCode() { return this.addressForm.get('zipCode')!; }\n  get state() { return this.addressForm.get('state')!; }\n\n  // Update validation rules based on selected country\n  updateValidationRules(country: string) {\n    // Reset previous validators\n    this.zipCode.setValidators([Validators.required]);\n    this.state.clearValidators();\n\n    if (country === 'us') {\n      // US zip code: 5 digits or 5+4 format\n      this.zipCode.addValidators(Validators.pattern(/^\\\\d{5}(-\\\\d{4})?$/));\n      this.state.setValidators([\n        Validators.required,\n        this.stateRequiredForCountryValidator('United States')\n      ]);\n    } else if (country === 'ca') {\n      // Canadian postal code: A1A 1A1 format\n      this.zipCode.addValidators(Validators.pattern(/^[A-Za-z]\\\\d[A-Za-z][ -]?\\\\d[A-Za-z]\\\\d$/));\n      this.state.setValidators([\n        Validators.required,\n        this.stateRequiredForCountryValidator('Canada')\n      ]);\n    } else if (country === 'uk') {\n      // UK postcode format\n      this.zipCode.addValidators(Validators.pattern(/^[A-Z]{1,2}[0-9][A-Z0-9]? ?[0-9][A-Z]{2}$/i));\n      // State optional for UK\n    } else if (country === 'au') {\n      // Australian postal code: 4 digits\n      this.zipCode.addValidators(Validators.pattern(/^\\\\d{4}$/));\n      this.state.setValidators([\n        Validators.required,\n        this.stateRequiredForCountryValidator('Australia')\n      ]);\n    }\n\n    // Update validity after changing validators\n    this.zipCode.updateValueAndValidity();\n    this.state.updateValueAndValidity();\n  }\n\n  // Custom validator for state requirement based on country\n  stateRequiredForCountryValidator(countryName: string) {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (!control.value && this.addressForm?.get('country')?.value) {\n        return { requiredForCountry: countryName };\n      }\n      return null;\n    };\n  }\n\n  // Cross-field validator for the entire form\n  addressValidator() {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      const countryControl = formGroup.get('country');\n      const zipCodeControl = formGroup.get('zipCode');\n      const stateControl = formGroup.get('state');\n\n      if (!countryControl || !zipCodeControl || !stateControl) {\n        return null;\n      }\n\n      const country = countryControl.value;\n      const zipCode = zipCodeControl.value;\n      const state = stateControl.value;\n\n      // Additional cross-field validation logic\n      if (country === 'us' && zipCode && state) {\n        // Example: certain zip codes must match specific states\n        // This is just a simplified example - real logic would be more complex\n        const zipPrefix = zipCode.substring(0, 1);\n        if (zipPrefix === '9' && state !== 'CA' && state !== 'WA' && state !== 'OR') {\n          return { invalidAddress: 'Zip code starting with 9 must be in CA, WA, or OR' };\n        }\n      }\n\n      return null;\n    };\n  }\n\n  onSubmit() {\n    if (this.addressForm.valid) {\n      console.log('Address submitted:', this.addressForm.value);\n    } else {\n      this.markFormGroupTouched(this.addressForm);\n    }\n  }\n\n  // Helper method to mark all controls as touched\n  markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n}`;\n\n  code_6 = `\n// Async Validation with Error Handling in Angular 19\nimport { Component } from '@angular/core';\nimport {\n  AbstractControl,\n  AsyncValidatorFn,\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  ValidationErrors,\n  Validators\n} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, debounceTime, distinctUntilChanged, map, of, switchMap } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\n// Service for async validation\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n  constructor(private http: HttpClient) {}\n\n  checkUsernameAvailability(username: string): Observable<boolean> {\n    // In a real app, this would call your API\n    return this.http.get<{available: boolean}>(\\`/api/check-username?username=\\${username}\\`)\n      .pipe(\n        map(response => response.available),\n        catchError(() => {\n          // Return false if server error, so validation fails safely\n          return of(false);\n        })\n      );\n  }\n\n  validateEmailDomain(email: string): Observable<boolean> {\n    // Extract domain from email\n    const domain = email.split('@')[1];\n\n    return this.http.get<{valid: boolean}>(\\`/api/validate-email-domain?domain=\\${domain}\\`)\n      .pipe(\n        map(response => response.valid),\n        catchError(() => of(false))\n      );\n  }\n}\n\n// Custom async validators\nexport function usernameAvailabilityValidator(\n  validationService: ValidationService\n): AsyncValidatorFn {\n  return (control: AbstractControl): Observable<ValidationErrors | null> => {\n    const value = control.value?.trim();\n\n    if (!value) {\n      return of(null); // Don't validate empty values\n    }\n\n    return of(value).pipe(\n      debounceTime(500), // Wait for typing to finish\n      distinctUntilChanged(),\n      switchMap(username =>\n        validationService.checkUsernameAvailability(username).pipe(\n          map(available => available ? null : { usernameTaken: true }),\n          catchError(() => of({ serverError: true }))\n        )\n      )\n    );\n  };\n}\n\nexport function emailDomainValidator(\n  validationService: ValidationService\n): AsyncValidatorFn {\n  return (control: AbstractControl): Observable<ValidationErrors | null> => {\n    const value = control.value?.trim();\n\n    if (!value || !value.includes('@')) {\n      return of(null); // Don't validate invalid emails\n    }\n\n    return of(value).pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(email =>\n        validationService.validateEmailDomain(email).pipe(\n          map(valid => valid ? null : { invalidDomain: true }),\n          catchError(() => of({ serverError: true }))\n        )\n      )\n    );\n  };\n}\n\n@Component({\n  selector: 'app-async-validation',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  template: \\`\n    <h2>Registration with Async Validation</h2>\n    <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          id=\"username\"\n          formControlName=\"username\"\n          [class.loading]=\"username.pending\"\n        >\n\n        <div class=\"validation-status\">\n          <div *ngIf=\"username.pending\" class=\"pending\">Checking availability...</div>\n          <div *ngIf=\"username.touched && !username.pending\">\n            <div *ngIf=\"username.valid\" class=\"valid\">Username is available</div>\n            <div *ngIf=\"username.errors?.['required']\" class=\"error\">Username is required</div>\n            <div *ngIf=\"username.errors?.['minlength']\" class=\"error\">\n              Username must be at least {{ '{{' }} username.errors?.['minlength'].requiredLength {{ '}}' }} characters\n            </div>\n            <div *ngIf=\"username.errors?.['usernameTaken']\" class=\"error\">\n              This username is already taken\n            </div>\n            <div *ngIf=\"username.errors?.['serverError']\" class=\"error\">\n              Could not verify username availability. Please try again.\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          formControlName=\"email\"\n          [class.loading]=\"email.pending\"\n        >\n\n        <div class=\"validation-status\">\n          <div *ngIf=\"email.pending\" class=\"pending\">Validating email...</div>\n          <div *ngIf=\"email.touched && !email.pending\">\n            <div *ngIf=\"email.valid\" class=\"valid\">Email is valid</div>\n            <div *ngIf=\"email.errors?.['required']\" class=\"error\">Email is required</div>\n            <div *ngIf=\"email.errors?.['email']\" class=\"error\">Please enter a valid email</div>\n            <div *ngIf=\"email.errors?.['invalidDomain']\" class=\"error\">\n              This email domain is not accepted\n            </div>\n            <div *ngIf=\"email.errors?.['serverError']\" class=\"error\">\n              Could not verify email. Please try again.\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <button\n        type=\"submit\"\n        [disabled]=\"registrationForm.invalid || registrationForm.pending\"\n      >\n        Register\n      </button>\n    </form>\n\n    <div *ngIf=\"submitAttempted\" class=\"submission-status\">\n      <div *ngIf=\"submitSuccessful\" class=\"success\">\n        Registration successful!\n      </div>\n      <div *ngIf=\"!submitSuccessful\" class=\"error\">\n        Please correct the errors before submitting.\n      </div>\n    </div>\n  \\`\n})\nexport class AsyncValidationComponent {\n  registrationForm: FormGroup;\n  submitAttempted = false;\n  submitSuccessful = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private validationService: ValidationService\n  ) {\n    this.registrationForm = this.fb.group({\n      username: ['', {\n        validators: [\n          Validators.required,\n          Validators.minLength(4)\n        ],\n        asyncValidators: [\n          usernameAvailabilityValidator(this.validationService)\n        ],\n        updateOn: 'blur'\n      }],\n      email: ['', {\n        validators: [\n          Validators.required,\n          Validators.email\n        ],\n        asyncValidators: [\n          emailDomainValidator(this.validationService)\n        ],\n        updateOn: 'blur'\n      }]\n    });\n\n    // Track validation state\n    this.registrationForm.statusChanges\n      .pipe(takeUntilDestroyed())\n      .subscribe(status => {\n        console.log('Form status:', status);\n      });\n  }\n\n  get username() { return this.registrationForm.get('username')!; }\n  get email() { return this.registrationForm.get('email')!; }\n\n  onSubmit() {\n    this.submitAttempted = true;\n\n    if (this.registrationForm.valid) {\n      console.log('Form submitted successfully:', this.registrationForm.value);\n      this.submitSuccessful = true;\n\n      // In a real app, you would call your API service here\n    } else {\n      this.submitSuccessful = false;\n      this.markFormGroupTouched(this.registrationForm);\n    }\n  }\n\n  markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n}`;\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/form-validation/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/form-validation/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/form-validation/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/form-validation/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/form-validation/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n    this.http.get('assets/codes/form-validation/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Form Validation\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Form Validation</span>\n      in Angular 19 ensures data quality and consistency by verifying that user input meets specific criteria before processing. Angular 19 enhances form validation with signal integration, better type safety, and improved error handling, making validation more reactive, intuitive, and maintainable.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n<ng-template #notesRef>\n  <p>What is Form Validation?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      Form validation is the process of checking user input against a set of rules to ensure data quality and consistency before processing.\n    </li>\n    <li>\n      <strong>Purpose</strong>:\n      Validation improves data integrity, enhances user experience by providing immediate feedback, and reduces server-side processing of invalid data.\n    </li>\n    <li>\n      <strong>Types of Validation</strong>:\n      Angular supports built-in validators, custom validators, synchronous validation (immediate), and asynchronous validation (server-dependent).\n    </li>\n    <li>\n      <strong>Validation Triggers</strong>:\n      Validation can be triggered on form submission, when a field loses focus (blur), or in real-time as the user types (change).\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Form Validation Enhancements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Signal Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces seamless integration between form validation states and signals, enabling reactive validation feedback with less boilerplate code.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Type Safety</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Better TypeScript integration for validation errors and states, making form error handling more predictable and type-safe.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Async Validation</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved asynchronous validation with better cancellation and debouncing support through integration with rxjs-interop.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Real-time Validation Feedback</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Signal-based validation states allow for more immediate and granular visual feedback as users interact with forms.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Standalone Component Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Streamlined validation in standalone components with reduced need for module imports and dependency management.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Working with Form Validation in Angular 19</p>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Basic Form Validation</strong>:\n      Implementing validation with built-in validators.\n\n      <button (click)=\"code_1_ref.hidden = !code_1_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_1_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Signal-Based Validation</strong>:\n      Using signals to track validation state for reactive user feedback.\n\n      <button (click)=\"code_2_ref.hidden = !code_2_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_2_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Custom Validators</strong>:\n      Creating custom validation logic for specific requirements.\n\n      <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_3_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n    <li>\n      <strong>Real-time Validation</strong>:\n      Implementing dynamic validation feedback as users type.\n\n      <button (click)=\"code_4_ref.hidden = !code_4_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code_4_ref hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Built-in Validators Comparison</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Validator</th>\n        <th class=\"py-3 px-4 text-left\">Purpose</th>\n        <th class=\"py-3 px-4 text-left\">Angular 19 Improvements</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">required</td>\n        <td class=\"py-3 px-4\">Ensures field is not empty</td>\n        <td class=\"py-3 px-4\">Better typed error objects</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">minLength/maxLength</td>\n        <td class=\"py-3 px-4\">Enforces text length constraints</td>\n        <td class=\"py-3 px-4\">Enhanced signal integration</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">pattern</td>\n        <td class=\"py-3 px-4\">Validates against regex patterns</td>\n        <td class=\"py-3 px-4\">Improved error messages</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">email</td>\n        <td class=\"py-3 px-4\">Verifies email format</td>\n        <td class=\"py-3 px-4\">More accurate validation</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Connect Validation to Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Signal Integration</strong>:\n          Connect form validation states to signals for more reactive UI updates and better performance in zone-less applications.\n        </li>\n        <li>\n          <strong>Create Computed Validation States</strong>:\n          Use computed signals to derive complex validation states from multiple controls.\n\n          <button (click)=\"code_5_ref.hidden = !code_5_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code_5_ref hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_5\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Design Intuitive Validation UX</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Validate at the Right Time</strong>:\n          Configure validation timing with updateOn to avoid overwhelming users with premature error messages.\n        </li>\n        <li>\n          <strong>Provide Clear Error Messages</strong>:\n          Write specific, actionable error messages that guide users to correct their input.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Async Validation</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Debounce Input</strong>:\n          Prevent excessive server requests by debouncing async validations, especially for real-time validation.\n        </li>\n        <li>\n          <strong>Show Loading States</strong>:\n          Indicate when async validation is in progress using the pending state of form controls.\n\n          <button (click)=\"code_6_ref.hidden = !code_6_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n          <span #code_6_ref hidden copyToClipboard>\n            <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n              <span>typescript</span>\n              <span class=\"copy-button-wrapper bg-gray-700\"></span>\n            </div>\n\n            <pre>\n              <code\n                [highlight]=\"code_6\"\n                [languages]=\"['typescript']\">\n              </code>\n            </pre>\n          </span>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Create Reusable Validation Patterns</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Extract Common Validators</strong>:\n          Package frequently used validation logic into reusable functions that can be shared across forms.\n        </li>\n        <li>\n          <strong>Create Validation Libraries</strong>:\n          Organize common validators into feature libraries that can be easily imported across your application.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Handle Validation Edge Cases</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Manage Dependent Fields</strong>:\n          Use form-level validators for validating relationships between fields, such as password confirmation.\n        </li>\n        <li>\n          <strong>Graceful Error Recovery</strong>:\n          Implement proper error handling for async validation failures to ensure the form remains usable even when server-side validation is unavailable.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros of Angular 19's Form Validation:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Signal Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Form validation now integrates seamlessly with Angular's signals system, allowing for more precise and efficient reactive updates to validation states and error messages.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved TypeScript Support</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Enhanced error typing provides better compile-time checks and IDE autocompletion for validation errors, reducing runtime issues and improving developer experience.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Optimized Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Validation operations in Angular 19 can operate efficiently outside Zone.js, leading to better performance in large forms with complex validation rules.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Async Validation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Improved handling of asynchronous validators with automatic subscription management through takeUntilDestroyed and better integration with RxJS operators.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>More Intuitive API</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Cleaner, more consistent validation API that makes it easier to implement, understand, and maintain form validation across applications.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons and Challenges:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Migration Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Upgrading existing form validation to leverage Angular 19 features like signal integration requires significant refactoring, especially for large, complex forms.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Developers familiar with traditional reactive forms validation may need time to adapt to the signal-based validation approach and understand the new validation patterns.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Increased Initial Setup</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Signal-based validation requires more initial setup code compared to traditional validation approaches, which may feel like overhead for simple forms.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Cross-Field Validation Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Validating relationships between multiple form fields remains complex, often requiring custom form-level validators and careful orchestration of validation timing.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Testing Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Testing asynchronous validators and signal-based validation logic can be more challenging, requiring careful mocking of services and attention to testing asynchronous behavior.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Topics:</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Reactive Forms</strong>:\n      <p>\n        The framework for building model-driven forms in Angular, providing the foundation for form validation through FormControl, FormGroup, and FormArray.\n      </p>\n    </li>\n    <li>\n      <strong>Signals</strong>:\n      <p>\n        Angular's reactive primitive that integrates with form validation to create more efficient validation feedback mechanisms and derived validation states.\n      </p>\n    </li>\n    <li>\n      <strong>FormControl</strong>:\n      <p>\n        The base class for form fields that manages the value and validation state of an individual control, with enhanced signal support in Angular 19.\n      </p>\n    </li>\n    <li>\n      <strong>Custom Validators</strong>:\n      <p>\n        Functions that implement specialized validation logic beyond Angular's built-in validators, allowing for domain-specific validation rules.\n      </p>\n    </li>\n    <li>\n      <strong>Async Validators</strong>:\n      <p>\n        Validators that perform server-side or other asynchronous validation operations, now with improved RxJS integration and cancelation support.\n      </p>\n    </li>\n    <li>\n      <strong>Error States</strong>:\n      <p>\n        The tracking and presentation of validation errors, with enhanced type safety and reactive updates through signal integration in Angular 19.\n      </p>\n    </li>\n    <li>\n      <strong>takeUntilDestroyed</strong>:\n      <p>\n        A utility from &#64;angular/core/rxjs-interop that manages validation-related subscriptions, automatically cleaning them up when components are destroyed.\n      </p>\n    </li>\n  </ol>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-hydration',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './hydration.component.html',\n  styleUrls: ['./hydration.component.scss']\n})\nexport class HydrationComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Template references\n  @ViewChild('notesRef') notesRef!: TemplateRef<any>;\n  @ViewChild('bestRef') bestRef!: TemplateRef<any>;\n  @ViewChild('prosConsRef') prosConsRef!: TemplateRef<any>;\n  @ViewChild('topicsRef') topicsRef!: TemplateRef<any>;\n\n  // Code examples for hydration\n  basicHydrationCode: string = `// app.config.ts\nimport { ApplicationConfig } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { provideClientHydration } from '@angular/platform-browser';\n\nimport { routes } from './app.routes';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration() // Enable application-wide hydration\n  ]\n};`;\n\n  customHydrationStrategyCode: string = `// custom-hydration-strategy.ts\nimport { HydrationFeature, HydrationStrategy } from '@angular/core';\n\nexport class PrioritizedHydrationStrategy implements HydrationStrategy {\n  // Determine if a component should be hydrated\n  shouldHydrate(componentId: string, descriptor: any): boolean {\n    // Check component priority markers from the descriptor\n    if (descriptor?.priority === 'critical') {\n      return true; // Always hydrate critical components\n    }\n\n    // Delay non-critical components\n    if (descriptor?.priority === 'low') {\n      return false; // Don't hydrate initially\n    }\n\n    return true; // Default to hydrate\n  }\n\n  // Called when the strategy decides not to hydrate a component initially\n  scheduleHydration(componentId: string, descriptor: any): void {\n    if (descriptor?.priority === 'low') {\n      // Schedule low-priority hydration after a delay or on user interaction\n      setTimeout(() => {\n        // Trigger hydration for this component\n        this.hydrateComponent(componentId);\n      }, 3000); // Delay by 3 seconds\n    }\n  }\n\n  // Abstract method - would be implemented by Angular\n  private hydrateComponent(id: string): void {\n    // Angular's internal method to trigger hydration for a specific component\n  }\n}\n\n// In your app.config.ts\nimport { provideHydrationFeatures } from '@angular/core';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    // ... other providers\n    provideClientHydration(\n      provideHydrationFeatures([\n        { strategy: PrioritizedHydrationStrategy }\n      ])\n    )\n  ]\n};`;\n\n  componentLevelHydrationCode: string = `// In Angular 19, you can control hydration at the component level\nimport { Component, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-static-content',\n  standalone: true,\n  template: \\`\n    <div class=\"content\">\n      <h2>{{ title }}</h2>\n      <p>{{ description }}</p>\n    </div>\n  \\`,\n  // This component doesn't need interactivity, so disable hydration\n  hydration: { mode: 'none' }\n})\nexport class StaticContentComponent {\n  title = 'About Our Company';\n  description = 'We provide solutions for modern web applications.';\n}\n\n@Component({\n  selector: 'app-interactive-widget',\n  standalone: true,\n  template: \\`\n    <div class=\"widget\">\n      <button (click)=\"increment()\">Clicks: {{ count() }}</button>\n    </div>\n  \\`,\n  // This component needs immediate interactivity\n  hydration: { mode: 'full' }\n})\nexport class InteractiveWidgetComponent {\n  count = signal(0);\n\n  increment() {\n    this.count.update(v => v + 1);\n  }\n}\n\n@Component({\n  selector: 'app-lazy-content',\n  standalone: true,\n  template: \\`\n    <div class=\"lazy-section\">\n      <div *ngFor=\"let item of items\">\n        <h3>{{ item.title }}</h3>\n        <button (click)=\"selectItem(item)\">Select</button>\n      </div>\n    </div>\n  \\`,\n  // This component will be hydrated when it becomes visible\n  hydration: { mode: 'lazy' }\n})\nexport class LazyContentComponent {\n  items = [...]; // Some data\n\n  selectItem(item: any) {\n    console.log('Selected:', item);\n  }\n}`;\n\n  v19HydrationEnhancementsCode: string = `// Angular 19 Hydration Enhancements\nimport { Component, signal } from '@angular/core';\n\n// 1. Fine-grained hydration strategies\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  template: \\`\n    <!-- Critical UI that needs immediate hydration -->\n    <app-header hydration=\"immediate\"></app-header>\n\n    <!-- Content can be hydrated when visible -->\n    <app-content hydration=\"visible\"></app-content>\n\n    <!-- Static content never needs hydration -->\n    <app-footer hydration=\"none\"></app-footer>\n  \\`\n})\nexport class DashboardComponent {}\n\n// 2. Signal-based selective hydration\n@Component({\n  selector: 'app-signal-aware',\n  standalone: true,\n  template: \\`\n    <!-- Only this part gets hydrated since it uses signals -->\n    <div>Count: {{ count() }}</div>\n\n    <!-- This content doesn't depend on signals and won't be hydrated -->\n    <div>Static content</div>\n  \\`,\n  // New in Angular 19: Smart signal-aware hydration\n  hydration: {\n    mode: 'smart',\n    signalAware: true\n  }\n})\nexport class SignalAwareComponent {\n  count = signal(0);\n}\n\n// 3. Hydration debugging enhancements\n// In your main.ts\nimport { enableDebugTools } from '@angular/platform-browser';\n\nif (environment.development) {\n  enableDebugTools(appRef.components[0], {\n    hydration: true // Enable hydration debugging\n  });\n}\n\n// 4. Automatic hydration optimization with tree-shaking\n@Component({\n  // Angular 19 automatically optimizes the hydration process\n  // by including only the necessary code for hydration\n  hydration: {\n    optimizeBundles: true\n  }\n})\nexport class OptimizedComponent {}`;\n\n  hydrationPerformanceCode: string = `// 1. Measuring hydration performance\nimport { Component, OnInit } from '@angular/core';\nimport { HydrationMetrics } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: \\`<div>App Root</div>\\`\n})\nexport class AppComponent implements OnInit {\n  constructor(private metrics: HydrationMetrics) {}\n\n  ngOnInit() {\n    // Log hydration performance metrics\n    this.metrics.getHydrationStats().then(stats => {\n      console.log('Time to hydrate:', stats.totalTime);\n      console.log('Components hydrated:', stats.componentCount);\n      console.log('DOM nodes reused:', stats.nodesReused);\n      console.log('DOM nodes recreated:', stats.nodesCreated);\n    });\n  }\n}\n\n// 2. Optimizing hydration performance\n@Component({\n  selector: 'app-optimized',\n  template: \\`<div>Optimized Component</div>\\`,\n  // New in Angular 19: Hydration optimization settings\n  hydration: {\n    // Skip hydration for parts that match server-rendered content\n    skipUnchanged: true,\n    // Only preserve DOM nodes that have event listeners\n    preserveInteractive: true,\n    // Set hydration priority (higher numbers are hydrated first)\n    priority: 10\n  }\n})\nexport class OptimizedComponent {}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Nothing to do here\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Hydration\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Hydration</span>\n      in Angular 19 is the process of attaching event listeners and initializing JavaScript functionality to server-rendered HTML. This technique allows users to see content quickly while making the page interactive as Angular processes the application. Angular 19 features significant enhancements to hydration with fine-grained control, performance improvements, and integration with signals.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What is Hydration?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Server-to-Client Transition</strong>:\n      Hydration connects server-rendered HTML with client-side JavaScript, making static content interactive.\n    </li>\n    <li>\n      <strong>Improved Initial Load Experience</strong>:\n      Users see content immediately while interactivity is progressively added.\n    </li>\n    <li>\n      <strong>DOM Reuse</strong>:\n      Angular reuses existing DOM nodes rather than recreating them, reducing layout shifts and improving performance.\n    </li>\n    <li>\n      <strong>State Preservation</strong>:\n      Application state from server rendering is preserved during client-side hydration.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Hydration Enhancements</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Selective Hydration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Fine-grained control over which components are hydrated and when.</li>\n        <li>Ability to set hydration modes ('full', 'lazy', 'none') at the component level.</li>\n        <li>Priority-based hydration for critical UI elements.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal-Aware Hydration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Intelligent hydration based on signal usage in components.</li>\n        <li>Only parts of components that use signals are hydrated, reducing processing overhead.</li>\n        <li>Better integration with Angular's reactivity system.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimizations</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>More efficient DOM node matching algorithms for faster hydration.</li>\n        <li>Reduced memory footprint during the hydration process.</li>\n        <li>Improved metrics and debugging tools for hydration performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Advanced Hydration Strategies</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Custom hydration strategy API for tailored hydration behavior.</li>\n        <li>Event-based and visibility-based hydration triggers.</li>\n        <li>Progressive hydration patterns for complex applications.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Experience</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Enhanced debugging tools for hydration in Angular DevTools.</li>\n        <li>Clear error messages for hydration mismatches.</li>\n        <li>Simplified configuration with sensible defaults.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Basic Hydration Setup</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"basicHydrationCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Custom Hydration Strategy</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"customHydrationStrategyCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Component-Level Hydration Control</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"componentLevelHydrationCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Hydration Enhancements</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19HydrationEnhancementsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Hydration Performance Optimization</p>\n  <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code5 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"hydrationPerformanceCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Hydration Performance Comparison</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Technique</th>\n        <th class=\"py-3 px-4 text-left\">Time to Interactive</th>\n        <th class=\"py-3 px-4 text-left\">Bundle Size Impact</th>\n        <th class=\"py-3 px-4 text-left\">Memory Usage</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">No Hydration (CSR only)</td>\n        <td class=\"py-3 px-4\">Slow (blank until JS loads)</td>\n        <td class=\"py-3 px-4\">No additional impact</td>\n        <td class=\"py-3 px-4\">High (rebuilds entire DOM)</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Full Hydration</td>\n        <td class=\"py-3 px-4\">Medium (visible but delayed interactivity)</td>\n        <td class=\"py-3 px-4\">Medium increase</td>\n        <td class=\"py-3 px-4\">Medium (reuses DOM but processes all components)</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Partial Hydration</td>\n        <td class=\"py-3 px-4\">Fast (critical UI interactive quickly)</td>\n        <td class=\"py-3 px-4\">Small increase</td>\n        <td class=\"py-3 px-4\">Low (processes only what's needed)</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Signal-Aware Hydration (Angular 19)</td>\n        <td class=\"py-3 px-4\">Very Fast (optimized for interactive elements)</td>\n        <td class=\"py-3 px-4\">Minimal increase</td>\n        <td class=\"py-3 px-4\">Very Low (targeted hydration based on signals)</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Implement Selective Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Analyze Component Interactivity Needs</strong>:\n          Categorize components as static (no hydration), interactive (full hydration), or conditionally interactive (lazy hydration).\n        </li>\n        <li>\n          <strong>Prioritize Above-the-Fold Components</strong>:\n          Set higher hydration priority for components visible in the initial viewport.\n        </li>\n        <li>\n          <strong>Use Appropriate Hydration Modes</strong>:\n          Apply the right hydration mode (full, lazy, none) based on component needs using the hydration option in @Component.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize State Transfer</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Minimize Serialized State</strong>:\n          Only transfer essential state needed for hydration to reduce payload size.\n        </li>\n        <li>\n          <strong>Use TransferState API</strong>:\n          Leverage Angular's TransferState to efficiently pass data from server to client.\n        </li>\n        <li>\n          <strong>Structure Data for Efficient Hydration</strong>:\n          Organize application state in a way that allows for partial hydration of only needed segments.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Signal-Aware Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Signals for Interactive State</strong>:\n          Prefer signals for state that requires immediate hydration.\n        </li>\n        <li>\n          <strong>Isolate Signal Dependencies</strong>:\n          Structure components to isolate signal-dependent parts for more efficient hydration.\n        </li>\n        <li>\n          <strong>Combine with Reactive Patterns</strong>:\n          Integrate signal-based reactivity with hydration for optimal performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Monitor and Debug Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Angular DevTools</strong>:\n          Enable hydration debugging in Angular DevTools to visualize hydration status and performance.\n        </li>\n        <li>\n          <strong>Track Hydration Metrics</strong>:\n          Implement metrics collection to measure hydration times and component counts.\n        </li>\n        <li>\n          <strong>Test on Actual Devices</strong>:\n          Verify hydration performance on representative devices, especially lower-powered mobile devices.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Progressive Enhancement</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Design for Non-Hydrated State</strong>:\n          Ensure content is usable even before hydration completes.\n        </li>\n        <li>\n          <strong>Add Visual Indicators</strong>:\n          Provide subtle indicators for elements that will become interactive after hydration.\n        </li>\n        <li>\n          <strong>Handle Hydration Failures Gracefully</strong>:\n          Implement fallback strategies for cases where hydration fails or is delayed.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Improved User Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Faster Initial Content Display</span>:\n          Users see content immediately while interactivity is progressively added.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Content Shifting</span>:\n          By reusing server-rendered DOM, hydration minimizes layout shifts during loading.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Smoother Transition to Interactivity</span>:\n          Angular 19 enables seamless transition from static content to interactive application.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Optimized Bundle Loading</span>:\n          Selective hydration allows smaller initial JavaScript bundles focused on critical functionality.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced CPU Usage</span>:\n          Signal-aware hydration minimizes unnecessary component processing, reducing CPU load.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Lower Memory Consumption</span>:\n          Reusing DOM nodes and selective hydration reduces memory usage compared to full client-side rendering.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better SEO</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Search Engine Visibility</span>:\n          Server-rendered content is more reliably indexed by search engines.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Improved Social Media Sharing</span>:\n          Ensures properly rendered content for social media platform crawlers.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Accessible to More Crawlers</span>:\n          Content is available to crawlers that may not execute JavaScript.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Control</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Fine-Grained Hydration Control</span>:\n          Angular 19 offers unprecedented control over what gets hydrated and when.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Customizable Strategies</span>:\n          The ability to implement custom hydration strategies tailored to application needs.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better Debugging Tools</span>:\n          Angular DevTools integration provides visibility into the hydration process.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Increased Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">More Complex Architecture</span>:\n          Requires server-side rendering setup in addition to client-side application.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Hydration Strategy Design</span>:\n          Developers need to carefully plan which components to hydrate and when.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Learning Curve</span>:\n          New concepts and APIs to learn for effective implementation.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Hydration Mismatches</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Server/Client Consistency</span>:\n          Code must ensure server and client rendering produce identical output to avoid hydration errors.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Dynamic Content Challenges</span>:\n          Content that depends on client-specific factors can cause hydration mismatches.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Error Handling Complexity</span>:\n          Debugging hydration errors can be more challenging than standard rendering issues.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Development and Testing Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Dual-Environment Testing</span>:\n          Applications must be tested in both server and client environments.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Development Setup Complexity</span>:\n          Local development environment must support server-side rendering.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">More Edge Cases</span>:\n          More scenarios to test, including various hydration paths and progressive enhancement.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Resource Requirements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Server Resources</span>:\n          Server-side rendering requires more server CPU and memory than serving static files.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Initial Setup Investment</span>:\n          More upfront development time to configure SSR and hydration correctly.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Deployment Complexity</span>:\n          Deployment pipelines need to account for both server and client builds.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Server-Side Rendering (SSR)</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          The process of rendering application HTML on the server before sending it to the client.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Hydration builds upon server-rendered content, making it interactive after it's displayed to the user.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Selectively hydrating only parts of an application that need interactivity, rather than the entire application.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          An optimization technique that applies hydration strategically to improve performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Islands Architecture</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          A design pattern where interactive \"islands\" exist within largely static content.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Selective hydration enables islands architecture by allowing specific components to be hydrated independently.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Progressive Enhancement</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Building applications that work without JavaScript, then enhancing with JavaScript when available.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Hydration is a form of progressive enhancement, starting with static content and adding interactivity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal-Based Components</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Components built using Angular's signals reactivity system.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Signal-aware hydration optimizes the hydration process for components using signals.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Deferrable Views</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's feature for lazy-loading content based on various triggers.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Can be combined with hydration strategies for optimal loading and interactivity patterns.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Metrics</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Measurements like Time to First Contentful Paint (FCP) and Time to Interactive (TTI).\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Hydration strategies significantly impact these metrics, especially TTI.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-immutability',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './immutability.component.html',\n  styleUrls: ['./immutability.component.scss']\n})\nexport class ImmutabilityComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Template reference variables\n  code_1_ref: any = { hidden: true };\n  code_2_ref: any = { hidden: true };\n  code_3_ref: any = { hidden: true };\n  code_4_ref: any = { hidden: true };\n  code_5_ref: any = { hidden: true };\n  code_6_ref: any = { hidden: true };\n\n  // Template outlet references\n  notesRef: any;\n  bestRef: any;\n  prosConsRef: any;\n  topicsRef: any;\n\n  // Example code snippets\n  code_1 = `// Immutable operations with arrays in Angular 19\n// ❌ Mutable approach (avoid)\nupdateTodos(newTodo: Todo) {\n  // Directly modifying the array\n  this.todos.push(newTodo);\n\n  // This won't trigger OnPush change detection\n  // or properly update signal-based templates\n}\n\n// ✅ Immutable approach (recommended)\nupdateTodos(newTodo: Todo) {\n  // Create a new array with all existing items plus the new one\n  this.todos = [...this.todos, newTodo];\n\n  // Or using signal APIs in Angular 19\n  this.todos.update(todos => [...todos, newTodo]);\n\n  // This will trigger change detection in OnPush components\n  // and properly update signal-based templates\n}`;\n\n  code_2 = `// Immutable operations with objects in Angular 19\n// ❌ Mutable approach (avoid)\nupdateUser(name: string) {\n  // Directly modifying object properties\n  this.user.name = name;\n  this.user.updatedAt = new Date();\n\n  // This won't trigger OnPush change detection\n  // or properly update signal-based templates\n}\n\n// ✅ Immutable approach (recommended)\nupdateUser(name: string) {\n  // Create a new object with updated properties\n  this.user = {\n    ...this.user,\n    name: name,\n    updatedAt: new Date()\n  };\n\n  // Or using signal APIs in Angular 19\n  this.user.update(user => ({\n    ...user,\n    name: name,\n    updatedAt: new Date()\n  }));\n\n  // This will trigger change detection in OnPush components\n  // and properly update signal-based templates\n}`;\n\n  code_3 = `// Using immutable data structures with TypeScript\n// Define readonly types\ntype ReadonlyTodo = Readonly<{\n  id: number;\n  title: string;\n  completed: boolean;\n}>;\n\n// Use readonly arrays\nconst todos: ReadonlyArray<ReadonlyTodo> = [\n  { id: 1, title: 'Learn Angular 19', completed: false },\n  { id: 2, title: 'Build an app', completed: false }\n];\n\n// This won't compile - trying to modify a readonly array\n// todos.push({ id: 3, title: 'Deploy app', completed: false });\n\n// Instead, create a new array\nconst newTodos = [\n  ...todos,\n  { id: 3, title: 'Deploy app', completed: false }\n];\n\n// Using readonly modifiers\nfunction processData(data: readonly string[]) {\n  // Can't modify the array inside this function\n  // data.push('new item'); // Error\n\n  // Must return a new array instead\n  return [...data, 'new item'];\n}`;\n\n  code_4 = `// Immutable updates with Angular 19 signals\nimport { Component, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-task-list',\n  template: \\`\n    <div>\n      <h2>Task List</h2>\n      <ul>\n        <li *ngFor=\"let task of tasks()\">\n          {{ task.title }}\n          <button (click)=\"toggleComplete(task.id)\">\n            {{ task.completed ? 'Mark Incomplete' : 'Mark Complete' }}\n          </button>\n          <button (click)=\"deleteTask(task.id)\">Delete</button>\n        </li>\n      </ul>\n      <input #newTask placeholder=\"Add new task\">\n      <button (click)=\"addTask(newTask.value); newTask.value = ''\">Add</button>\n    </div>\n  \\`\n})\nexport class TaskListComponent {\n  // Signal with initial state\n  tasks = signal([\n    { id: 1, title: 'Learn Angular 19', completed: false },\n    { id: 2, title: 'Build an app', completed: false }\n  ]);\n\n  nextId = signal(3);\n\n  // Immutable add operation\n  addTask(title: string) {\n    if (!title.trim()) return;\n\n    this.tasks.update(tasks => [\n      ...tasks,\n      { id: this.nextId(), title, completed: false }\n    ]);\n\n    this.nextId.update(id => id + 1);\n  }\n\n  // Immutable toggle operation\n  toggleComplete(id: number) {\n    this.tasks.update(tasks =>\n      tasks.map(task =>\n        task.id === id\n          ? { ...task, completed: !task.completed }\n          : task\n      )\n    );\n  }\n\n  // Immutable delete operation\n  deleteTask(id: number) {\n    this.tasks.update(tasks =>\n      tasks.filter(task => task.id !== id)\n    );\n  }\n}`;\n\n  code_5 = `// Implementing immutability with Redux-inspired patterns in Angular 19\nimport { Component, signal } from '@angular/core';\n\n// Define app state interface\ninterface AppState {\n  todos: Todo[];\n  filter: 'all' | 'active' | 'completed';\n  loading: boolean;\n}\n\ninterface Todo {\n  id: number;\n  text: string;\n  completed: boolean;\n}\n\n// Action types\ntype Action =\n  | { type: 'ADD_TODO', payload: string }\n  | { type: 'TOGGLE_TODO', payload: number }\n  | { type: 'DELETE_TODO', payload: number }\n  | { type: 'SET_FILTER', payload: 'all' | 'active' | 'completed' }\n  | { type: 'SET_LOADING', payload: boolean };\n\n@Component({\n  selector: 'app-todo-redux',\n  template: \\`<!-- Template omitted for brevity -->\\`\n})\nexport class TodoReduxComponent {\n  // Initial state\n  private state = signal<AppState>({\n    todos: [],\n    filter: 'all',\n    loading: false\n  });\n\n  // Derived state using computed\n  todos = computed(() => {\n    const state = this.state();\n    const filter = state.filter;\n\n    return state.todos.filter(todo => {\n      if (filter === 'all') return true;\n      if (filter === 'active') return !todo.completed;\n      if (filter === 'completed') return todo.completed;\n      return true;\n    });\n  });\n\n  loading = computed(() => this.state().loading);\n  filter = computed(() => this.state().filter);\n\n  // Pure reducer function\n  private reducer(state: AppState, action: Action): AppState {\n    switch (action.type) {\n      case 'ADD_TODO':\n        return {\n          ...state,\n          todos: [\n            ...state.todos,\n            {\n              id: Date.now(),\n              text: action.payload,\n              completed: false\n            }\n          ]\n        };\n\n      case 'TOGGLE_TODO':\n        return {\n          ...state,\n          todos: state.todos.map(todo =>\n            todo.id === action.payload\n              ? { ...todo, completed: !todo.completed }\n              : todo\n          )\n        };\n\n      case 'DELETE_TODO':\n        return {\n          ...state,\n          todos: state.todos.filter(todo => todo.id !== action.payload)\n        };\n\n      case 'SET_FILTER':\n        return {\n          ...state,\n          filter: action.payload\n        };\n\n      case 'SET_LOADING':\n        return {\n          ...state,\n          loading: action.payload\n        };\n\n      default:\n        return state;\n    }\n  }\n\n  // Dispatch method\n  dispatch(action: Action) {\n    this.state.update(state => this.reducer(state, action));\n  }\n\n  // Action creators\n  addTodo(text: string) {\n    this.dispatch({ type: 'ADD_TODO', payload: text });\n  }\n\n  toggleTodo(id: number) {\n    this.dispatch({ type: 'TOGGLE_TODO', payload: id });\n  }\n\n  deleteTodo(id: number) {\n    this.dispatch({ type: 'DELETE_TODO', payload: id });\n  }\n\n  setFilter(filter: 'all' | 'active' | 'completed') {\n    this.dispatch({ type: 'SET_FILTER', payload: filter });\n  }\n}`;\n\n  code_6 = `// Immutability with built-in control flow in Angular 19\nimport { Component, signal } from '@angular/core';\n\ninterface Task {\n  id: number;\n  title: string;\n  priority: 'low' | 'medium' | 'high';\n  completed: boolean;\n}\n\n@Component({\n  selector: 'app-task-manager',\n  template: \\`\n    <div class=\"task-list\">\n      <h2>Task Manager</h2>\n\n      <div class=\"filters\">\n        <select #priorityFilter (change)=\"setFilter(priorityFilter.value)\">\n          <option value=\"all\">All Priorities</option>\n          <option value=\"high\">High Priority</option>\n          <option value=\"medium\">Medium Priority</option>\n          <option value=\"low\">Low Priority</option>\n        </select>\n\n        <button (click)=\"toggleShowCompleted()\">\n          {{ showCompleted() ? 'Hide' : 'Show' }} Completed\n        </button>\n      </div>\n\n      <!-- Using Angular 19's built-in control flow -->\n      @if (loading()) {\n        <div class=\"loading\">Loading tasks...</div>\n      } @else {\n        <ul class=\"tasks\">\n          @for (task of filteredTasks(); track task.id) {\n            <li [class.completed]=\"task.completed\">\n              <span class=\"priority\" [class]=\"task.priority\">\n                {{ task.priority }}\n              </span>\n\n              <span class=\"title\">{{ task.title }}</span>\n\n              <div class=\"actions\">\n                <button (click)=\"toggleTask(task.id)\">\n                  {{ task.completed ? '✓' : '○' }}\n                </button>\n\n                @if (!task.completed) {\n                  <button (click)=\"changePriority(task.id)\">\n                    Priority ↑\n                  </button>\n                }\n\n                <button (click)=\"removeTask(task.id)\">🗑️</button>\n              </div>\n            </li>\n          } @empty {\n            <li class=\"empty\">No tasks match the current filter</li>\n          }\n        </ul>\n      }\n\n      <div class=\"new-task\">\n        <input #newTask placeholder=\"Add new task\">\n        <select #priority>\n          <option value=\"low\">Low</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"high\">High</option>\n        </select>\n        <button (click)=\"addTask(newTask.value, priority.value)\">Add</button>\n      </div>\n    </div>\n  \\`\n})\nexport class TaskManagerComponent {\n  // State signals\n  private tasks = signal<Task[]>([]);\n  private filter = signal<string>('all');\n  showCompleted = signal<boolean>(true);\n  loading = signal<boolean>(false);\n\n  // Computed signal for filtered tasks\n  filteredTasks = computed(() => {\n    return this.tasks()\n      .filter(task => {\n        // Filter by priority\n        if (this.filter() !== 'all' && task.priority !== this.filter()) {\n          return false;\n        }\n\n        // Filter by completion status\n        if (!this.showCompleted() && task.completed) {\n          return false;\n        }\n\n        return true;\n      })\n      .sort((a, b) => {\n        // Sort by priority\n        const priorityOrder = { high: 0, medium: 1, low: 2 };\n        return priorityOrder[a.priority] - priorityOrder[b.priority];\n      });\n  });\n\n  // Immutable task operations\n  addTask(title: string, priority: string) {\n    if (!title.trim()) return;\n\n    this.tasks.update(tasks => [\n      ...tasks,\n      {\n        id: Date.now(),\n        title: title.trim(),\n        priority: priority as 'low' | 'medium' | 'high',\n        completed: false\n      }\n    ]);\n  }\n\n  removeTask(id: number) {\n    this.tasks.update(tasks => tasks.filter(task => task.id !== id));\n  }\n\n  toggleTask(id: number) {\n    this.tasks.update(tasks =>\n      tasks.map(task =>\n        task.id === id ? { ...task, completed: !task.completed } : task\n      )\n    );\n  }\n\n  changePriority(id: number) {\n    const priorityOrder = ['low', 'medium', 'high'] as const;\n\n    this.tasks.update(tasks =>\n      tasks.map(task => {\n        if (task.id !== id) return task;\n\n        const currentIndex = priorityOrder.indexOf(task.priority);\n        const nextIndex = (currentIndex + 1) % priorityOrder.length;\n        const newPriority = priorityOrder[nextIndex];\n\n        return { ...task, priority: newPriority };\n      })\n    );\n  }\n\n  // Filter operations\n  setFilter(filter: string) {\n    this.filter.set(filter as any);\n  }\n\n  toggleShowCompleted() {\n    this.showCompleted.update(value => !value);\n  }\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Initialize code snippets if needed\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Immutability\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Immutability</span>\n      in Angular 19 refers to the practice of not modifying data directly but instead creating new copies with changes applied. This approach is central to Angular's change detection, state management patterns, and the new signals API, enabling more predictable application behavior, improved performance, and better debugging capabilities.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>Core Concepts of Immutability in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      Immutability is the practice of not modifying data once it's created, instead generating new data structures when changes are needed.\n    </li>\n    <li>\n      <strong>Signal-based State Management</strong>:\n      Angular 19 signals provide built-in support for immutable state updates using the update() method with a pure function that takes current state and returns new state.\n    </li>\n    <li>\n      <strong>Change Detection</strong>:\n      Immutability simplifies change detection by allowing reference equality checks instead of deep comparisons, improving performance especially in OnPush components.\n    </li>\n    <li>\n      <strong>TypeScript Integration</strong>:\n      Modern TypeScript features like readonly modifiers and immutable types help enforce immutability at compile time.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Immutable Operations with Arrays</p>\n\n  <button (click)=\"code_1_ref.hidden = !code_1_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_1_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_1\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Immutable Operations with Objects</p>\n\n  <button (click)=\"code_2_ref.hidden = !code_2_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_2_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_2\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>TypeScript and Immutability</p>\n\n  <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_3_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_3\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Signals and Immutability</p>\n\n  <button (click)=\"code_4_ref.hidden = !code_4_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_4_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_4\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Redux-inspired Patterns with Angular 19</p>\n\n  <button (click)=\"code_5_ref.hidden = !code_5_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_5_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_5\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Control Flow and Immutability in Angular 19</p>\n\n  <button (click)=\"code_6_ref.hidden = !code_6_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_6_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_6\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use Immutable Update Patterns</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Array Operations</strong>:\n          Use spread syntax or array methods that return new arrays (map, filter, concat) instead of modifying existing arrays with push, pop, splice.\n        </li>\n        <li>\n          <strong>Object Operations</strong>:\n          Use the spread operator or Object.assign() to create new objects rather than directly modifying properties.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Angular 19 Signal APIs</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use update() Method</strong>:\n          The update() method on signals enforces immutability by providing the current value and expecting a new value to be returned.\n        </li>\n        <li>\n          <strong>Computed Signals</strong>:\n          Derive state using computed signals for read-only values that automatically update when dependencies change.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">TypeScript Immutability</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use readonly Types</strong>:\n          Leverage TypeScript's readonly modifiers, Readonly&lt;T&gt; utility type, and ReadonlyArray&lt;T&gt; to enforce immutability at compile time.\n        </li>\n        <li>\n          <strong>Enable strictImmutableTypes</strong>:\n          Consider enabling strict immutable typing in your TypeScript configuration for more rigorous compile-time checks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Immutable Libraries</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Consider Immutable.js or Immer</strong>:\n          For complex state structures, consider using libraries like Immutable.js or Immer to simplify immutable updates.\n        </li>\n        <li>\n          <strong>Angular-Compatible Solutions</strong>:\n          Choose immutability libraries that integrate well with Angular's change detection and signals.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">State Management</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Component State</strong>:\n          Use signals for local component state and enforce immutability in all updates.\n        </li>\n        <li>\n          <strong>Application State</strong>:\n          For larger applications, implement a Redux-inspired pattern with action creators and reducers to manage immutable state updates.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Predictable State</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Immutability creates a clear, one-way data flow that makes application state more predictable and easier to reason about.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simplified Change Detection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Immutability allows for reference equality checks instead of deep object comparisons, which can significantly improve performance with OnPush change detection.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Debugging</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Immutable patterns create a history of state changes that makes debugging easier, especially when combined with tools like Redux DevTools.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal Optimization</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19's signal-based reactivity system is optimized for immutable updates, providing better performance and more predictable rendering.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Thread Safety</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Immutable data structures are inherently thread-safe, eliminating an entire class of concurrency bugs in applications that use Web Workers.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Switching to immutable update patterns requires developers to learn new approaches and can be challenging for teams used to mutable programming models.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Verbose Code</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Immutable updates can require more code, especially for deep nested updates, potentially making code more verbose (though libraries can help).\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Creating new objects for every update has a memory cost and can impact performance for very large data structures or high-frequency updates.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Some third-party libraries and APIs expect mutable objects, which can lead to integration challenges when implementing immutability throughout your app.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mt-4\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left w-1/2\">Pros</th>\n        <th class=\"py-3 px-4 text-left w-1/2\">Cons</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Predictable state management</td>\n        <td class=\"py-3 px-4\">Learning curve for teams</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Optimized for OnPush change detection</td>\n        <td class=\"py-3 px-4\">More verbose update code</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Better debugging and state tracking</td>\n        <td class=\"py-3 px-4\">Memory overhead for large structures</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Seamless integration with Angular signals</td>\n        <td class=\"py-3 px-4\">Integration challenges with some APIs</td>\n      </tr>\n      <tr class=\"bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Thread safety for concurrent operations</td>\n        <td class=\"py-3 px-4\">Performance cost for high-frequency updates</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Features and Concepts</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Signals API</strong>:\n\n      <p>\n        Angular 19's signals provide a reactive state management solution built with immutability in mind. The update() method facilitates immutable state changes, while computed() creates derived immutable state.\n      </p>\n    </li>\n    <li>\n      <strong>OnPush Change Detection</strong>:\n\n      <p>\n        Immutability works hand-in-hand with OnPush change detection, allowing Angular to efficiently detect changes through reference equality checks rather than deep object comparison.\n      </p>\n    </li>\n    <li>\n      <strong>Control Flow</strong>:\n\n      <p>\n        Angular 19's built-in control flow (@if, @for, @switch) is optimized to work with immutable data and signals, providing efficient rendering when state changes.\n      </p>\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>:\n\n      <p>\n        Immutable update patterns are essential in zoneless Angular applications, where change detection isn't triggered automatically but relies on explicit signal updates.\n      </p>\n    </li>\n    <li>\n      <strong>Redux State Management</strong>:\n\n      <p>\n        Redux-inspired state management patterns in Angular rely heavily on immutability, using pure reducer functions that produce new state rather than modifying existing state.\n      </p>\n    </li>\n    <li>\n      <strong>RxJS Operators</strong>:\n\n      <p>\n        Many RxJS operators used in Angular applications follow immutable principles, creating new streams rather than modifying existing ones.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>External Resources</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <a href=\"https://angular.io/guide/signals\" class=\"text-sky-400 hover:text-rose-400\">\n        Angular Signals Guide\n      </a> - Official Angular documentation on signals and immutable state updates\n    </li>\n    <li>\n      <a href=\"https://angular.io/guide/change-detection\" class=\"text-sky-400 hover:text-rose-400\">\n        Change Detection Guide\n      </a> - How immutability impacts Angular's change detection\n    </li>\n    <li>\n      <a href=\"https://immutable-js.com/\" class=\"text-sky-400 hover:text-rose-400\">\n        Immutable.js\n      </a> - Library for immutable data structures\n    </li>\n    <li>\n      <a href=\"https://immerjs.github.io/immer/\" class=\"text-sky-400 hover:text-rose-400\">\n        Immer\n      </a> - Library for working with immutable state with a mutable API\n    </li>\n    <li>\n      <a href=\"https://www.typescriptlang.org/docs/handbook/utility-types.html#readonlytype\" class=\"text-sky-400 hover:text-rose-400\">\n        TypeScript Readonly Types\n      </a> - TypeScript documentation on readonly utility types\n    </li>\n  </ul>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-injectable',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './injectable.component.html',\n  styleUrls: ['./injectable.component.scss']\n})\nexport class InjectableComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Template reference variables\n  code_1_ref: any = { hidden: true };\n  code_2_ref: any = { hidden: true };\n  code_3_ref: any = { hidden: true };\n  code_4_ref: any = { hidden: true };\n  code_5_ref: any = { hidden: true };\n  code_6_ref: any = { hidden: true };\n\n  // Template outlet references\n  notesRef: any;\n  bestRef: any;\n  prosConsRef: any;\n  topicsRef: any;\n\n  // Example code snippets\n  code_1 = `// Basic Injectable Service in Angular 19\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private data: string[] = ['Angular', 'TypeScript', 'JavaScript'];\n\n  getData(): string[] {\n    return this.data;\n  }\n\n  addData(item: string): void {\n    this.data.push(item);\n  }\n}`;\n\n  code_2 = `// Different providedIn options in Angular 19\nimport { Injectable } from '@angular/core';\nimport { FeatureModule } from './feature.module';\n\n// Application-wide singleton (preferred for most services)\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n  // Service implementation\n}\n\n// Available only within a specific module\n@Injectable({\n  providedIn: FeatureModule\n})\nexport class FeatureService {\n  // Service implementation\n}\n\n// Available across multiple Angular applications\n// (shared between separately compiled applications)\n@Injectable({\n  providedIn: 'platform'\n})\nexport class PlatformService {\n  // Service implementation\n}\n\n// Any module that includes this service will get its own instance\n@Injectable({\n  providedIn: 'any'\n})\nexport class MultiInstanceService {\n  // Service implementation\n}`;\n\n  code_3 = `// Signal-based Service in Angular 19\nimport { Injectable, signal, computed } from '@angular/core';\n\ninterface User {\n  id: number;\n  name: string;\n  isActive: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  // State management with signals\n  private users = signal<User[]>([\n    { id: 1, name: 'Alice', isActive: true },\n    { id: 2, name: 'Bob', isActive: false },\n    { id: 3, name: 'Charlie', isActive: true }\n  ]);\n\n  // Derived state with computed signals\n  activeUsers = computed(() =>\n    this.users().filter(user => user.isActive)\n  );\n\n  activeUserCount = computed(() =>\n    this.activeUsers().length\n  );\n\n  // Methods to update state\n  addUser(user: User) {\n    this.users.update(users => [...users, user]);\n  }\n\n  removeUser(id: number) {\n    this.users.update(users =>\n      users.filter(user => user.id !== id)\n    );\n  }\n\n  toggleUserStatus(id: number) {\n    this.users.update(users =>\n      users.map(user =>\n        user.id === id\n          ? { ...user, isActive: !user.isActive }\n          : user\n      )\n    );\n  }\n}`;\n\n  code_4 = `// Injectable Factory Functions in Angular 19\nimport { Injectable, InjectionToken, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// Environment configuration token\nexport const API_URL = new InjectionToken<string>('API_URL');\n\n// Service with factory function\n@Injectable({\n  providedIn: 'root',\n  useFactory: () => {\n    const http = inject(HttpClient);\n    const baseUrl = inject(API_URL, { optional: true }) || 'https://api.default.com';\n\n    return new ApiService(http, baseUrl);\n  }\n})\nexport class ApiService {\n  constructor(\n    private http: HttpClient,\n    private baseUrl: string\n  ) {}\n\n  getUsers() {\n    return this.http.get(\\`\\${this.baseUrl}/users\\`);\n  }\n}\n\n// Provider setup in NgModule or bootstrapApplication\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    { provide: API_URL, useValue: 'https://api.example.com' }\n  ]\n});`;\n\n  code_5 = `// Angular 19 Injectable with Dependency Injection\nimport { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoggerService } from './logger.service';\nimport { catchError, map } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  // Modern injection pattern using inject() function\n  private http = inject(HttpClient);\n  private logger = inject(LoggerService);\n\n  // API URLs\n  private baseUrl = 'https://api.example.com/products';\n\n  getProducts() {\n    this.logger.log('Fetching products');\n\n    return this.http.get<any[]>(this.baseUrl).pipe(\n      map(response => {\n        this.logger.log('Products fetched successfully');\n        return response;\n      }),\n      catchError(error => {\n        this.logger.error('Failed to fetch products', error);\n        return of([]);  // Return empty array on error\n      })\n    );\n  }\n\n  getProductById(id: string) {\n    this.logger.log(\\`Fetching product with id \\${id}\\`);\n\n    return this.http.get<any>(\\`\\${this.baseUrl}/\\${id}\\`).pipe(\n      map(response => {\n        this.logger.log('Product fetched successfully');\n        return response;\n      }),\n      catchError(error => {\n        this.logger.error(\\`Failed to fetch product with id \\${id}\\`, error);\n        return of(null);  // Return null on error\n      })\n    );\n  }\n}`;\n\n  code_6 = `// Injectable with tree-shakable providers in Angular 19\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\ninterface CacheEntry<T> {\n  data: T;\n  timestamp: number;\n  expires: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheService {\n  private cache = new Map<string, CacheEntry<any>>();\n  private readonly DEFAULT_TTL = 5 * 60 * 1000; // 5 minutes in milliseconds\n\n  constructor(private http: HttpClient) {}\n\n  get<T>(url: string, ttl = this.DEFAULT_TTL): Observable<T> {\n    const cachedEntry = this.cache.get(url);\n    const now = Date.now();\n\n    // Return cached data if it exists and hasn't expired\n    if (cachedEntry && now < cachedEntry.expires) {\n      return of(cachedEntry.data);\n    }\n\n    // Fetch fresh data if cache missed or expired\n    return this.http.get<T>(url).pipe(\n      tap(data => {\n        // Update cache with new data\n        this.cache.set(url, {\n          data,\n          timestamp: now,\n          expires: now + ttl\n        });\n      }),\n      catchError(error => {\n        console.error(\\`Failed to fetch data from \\${url}\\`, error);\n\n        // If cache exists but is expired, return it as fallback\n        if (cachedEntry) {\n          console.warn(\\`Using expired cache for \\${url}\\`);\n          return of(cachedEntry.data);\n        }\n\n        throw error;\n      })\n    );\n  }\n\n  clearCache(url?: string): void {\n    if (url) {\n      this.cache.delete(url);\n    } else {\n      this.cache.clear();\n    }\n  }\n\n  setCacheEntry<T>(url: string, data: T, ttl = this.DEFAULT_TTL): void {\n    this.cache.set(url, {\n      data,\n      timestamp: Date.now(),\n      expires: Date.now() + ttl\n    });\n  }\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Initialize code snippets if needed\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Injectable\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Injectable</span>\n      in Angular 19 is a decorator that marks a class as available for dependency injection. It provides essential metadata that allows the Angular dependency injection system to create and deliver dependencies to components, directives, pipes, and other services. Angular 19 enhances @Injectable with improved tree-shaking, optimized factory functions, and seamless integration with the signals API.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>Core Concepts of @Injectable in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      The @Injectable decorator marks a class as a provider of dependencies that can be injected using Angular's DI system.\n    </li>\n    <li>\n      <strong>providedIn Options</strong>:\n      Angular 19 provides several options for scoping injectable services: 'root', 'platform', 'any', or a specific NgModule.\n    </li>\n    <li>\n      <strong>Tree-shakable Providers</strong>:\n      Modern @Injectable services are tree-shakable, meaning unused services are removed during production builds.\n    </li>\n    <li>\n      <strong>Functional Injection Pattern</strong>:\n      Angular 19 optimizes the inject() function for field injection, providing a more concise alternative to constructor injection.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Basic Injectable Service</p>\n\n  <button (click)=\"code_1_ref.hidden = !code_1_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_1_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_1\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>providedIn Configuration Options</p>\n\n  <button (click)=\"code_2_ref.hidden = !code_2_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_2_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_2\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Signal-based Services in Angular 19</p>\n\n  <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_3_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_3\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Injectable Factory Functions</p>\n\n  <button (click)=\"code_4_ref.hidden = !code_4_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_4_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_4\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Modern Dependency Injection with inject()</p>\n\n  <button (click)=\"code_5_ref.hidden = !code_5_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_5_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_5\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Tree-shakable Providers Example</p>\n\n  <button (click)=\"code_6_ref.hidden = !code_6_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_6_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_6\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use providedIn for Tree-shakable Services</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Root-level Services</strong>:\n          Use <code>providedIn: 'root'</code> for application-wide singleton services to enable tree-shaking and avoid redundant provider registrations.\n        </li>\n        <li>\n          <strong>Module-scoped Services</strong>:\n          Use <code>providedIn: SomeModule</code> to limit a service's availability to a specific module and its children.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Choose the Right Injection Scope</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Platform-wide Services</strong>:\n          Use <code>providedIn: 'platform'</code> for services that should be shared across multiple Angular applications running in the same page.\n        </li>\n        <li>\n          <strong>Multi-instance Services</strong>:\n          Use <code>providedIn: 'any'</code> when each lazy-loaded module should receive its own instance of the service.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Modern Injection Patterns</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use inject() Function</strong>:\n          For Angular 19 applications, prefer the <code>inject()</code> function for field injection instead of traditional constructor injection for cleaner, more readable code.\n        </li>\n        <li>\n          <strong>Injection Tokens</strong>:\n          Use <code>InjectionToken</code> for non-class dependencies like configuration objects, API URLs, or feature flags.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Signal-based State Management</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Reactive Data</strong>:\n          Leverage signals in services to create reactive, self-contained state management solutions that integrate seamlessly with Angular's change detection.\n        </li>\n        <li>\n          <strong>Computed Properties</strong>:\n          Use computed signals for derived state to reduce redundant calculations and maintain a clean data architecture.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Follow Proper Testing Practices</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Design for Testability</strong>:\n          Structure injectable services to be easily testable by accepting dependencies through constructor injection or the inject() function.\n        </li>\n        <li>\n          <strong>Mock Dependencies</strong>:\n          Use Angular's testing utilities to provide mock implementations of dependencies when testing services in isolation.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Tree-shakable by Default</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19's @Injectable with providedIn enables effective tree-shaking, ensuring that unused services are eliminated from production bundles, reducing application size.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Injectable services are optimized in Angular 19 with better factory function implementation and reduced runtime overhead, improving overall application performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simplified DI Configuration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The providedIn property eliminates the need for complex provider configurations in NgModules, making the code more maintainable and less error-prone.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Seamless Integration with Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19 services with @Injectable work seamlessly with the signals API, enabling reactive state management solutions that are both efficient and developer-friendly.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Tooling Support</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Modern IDEs provide better type checking, auto-completion, and refactoring support for @Injectable services, improving developer productivity.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Understanding the different providedIn options and their implications requires a solid grasp of Angular's dependency injection system, which can be challenging for beginners.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Dependency injection issues can sometimes be difficult to debug, especially in large applications with complex provider hierarchies.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Migration Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Migrating legacy code to use modern Injectable patterns may require significant refactoring, particularly when moving from module-based providers to tree-shakable ones.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Singletons Issues</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The default 'root' provider scope creates singletons, which might not be desired in all cases and can lead to unexpected state sharing if not carefully managed.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mt-4\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left w-1/2\">Pros</th>\n        <th class=\"py-3 px-4 text-left w-1/2\">Cons</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Tree-shakable by default</td>\n        <td class=\"py-3 px-4\">Learning curve for DI system</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Optimized factory functions</td>\n        <td class=\"py-3 px-4\">Debugging complexity</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Simplified provider configuration</td>\n        <td class=\"py-3 px-4\">Migration challenges from older patterns</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Seamless signals integration</td>\n        <td class=\"py-3 px-4\">Default singleton behavior may not be desired</td>\n      </tr>\n      <tr class=\"bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Enhanced tooling and IDE support</td>\n        <td class=\"py-3 px-4\">Boilerplate code for complex injections</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Features and Concepts</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Dependency Injection System</strong>:\n\n      <p>\n        Angular's DI system is the foundational framework that uses @Injectable services to manage dependencies throughout the application. It handles the creation and delivery of service instances to consuming components.\n      </p>\n    </li>\n    <li>\n      <strong>Injection Tokens</strong>:\n\n      <p>\n        InjectionToken is used alongside @Injectable to provide non-class dependencies, like configuration objects, to services and components, enabling a more flexible DI system.\n      </p>\n    </li>\n    <li>\n      <strong>Signals API</strong>:\n\n      <p>\n        Angular 19's signals provide an efficient way to manage reactive state in @Injectable services, replacing traditional RxJS-based state management in many cases with more optimized, fine-grained reactivity.\n      </p>\n    </li>\n    <li>\n      <strong>Zone-less Applications</strong>:\n\n      <p>\n        Injectable services play a crucial role in zone-less applications by managing change detection through explicit signal updates rather than relying on zone.js to detect changes automatically.\n      </p>\n    </li>\n    <li>\n      <strong>Standalone Components</strong>:\n\n      <p>\n        Tree-shakable @Injectable services with providedIn: 'root' integrate seamlessly with standalone components without requiring NgModule registration, simplifying the component architecture.\n      </p>\n    </li>\n    <li>\n      <strong>Functional Providers</strong>:\n\n      <p>\n        Angular 19 enhances the functional programming capabilities with @Injectable's useFactory option, allowing for dynamic service configuration based on injected dependencies or environment settings.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>External Resources</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <a href=\"https://angular.io/guide/dependency-injection\" class=\"text-sky-400 hover:text-rose-400\">\n        Angular Dependency Injection Guide\n      </a> - Official Angular documentation on DI and injectable services\n    </li>\n    <li>\n      <a href=\"https://angular.io/guide/dependency-injection-providers\" class=\"text-sky-400 hover:text-rose-400\">\n        DI Provider Configuration\n      </a> - Understanding providedIn and other provider options\n    </li>\n    <li>\n      <a href=\"https://angular.io/api/core/inject\" class=\"text-sky-400 hover:text-rose-400\">\n        Inject Function API\n      </a> - Documentation on the modern inject() function\n    </li>\n    <li>\n      <a href=\"https://angular.io/guide/hierarchical-dependency-injection\" class=\"text-sky-400 hover:text-rose-400\">\n        Hierarchical Dependency Injection\n      </a> - Advanced concepts in Angular's DI system\n    </li>\n    <li>\n      <a href=\"https://angular.io/guide/singleton-services\" class=\"text-sky-400 hover:text-rose-400\">\n        Singleton Services\n      </a> - Best practices for managing service instances\n    </li>\n  </ul>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-injector',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './injector.component.html',\n  styleUrls: ['./injector.component.scss']\n})\nexport class InjectorComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Template reference variables\n  code_1_ref: any = { hidden: true };\n  code_2_ref: any = { hidden: true };\n  code_3_ref: any = { hidden: true };\n  code_4_ref: any = { hidden: true };\n  code_5_ref: any = { hidden: true };\n  code_6_ref: any = { hidden: true };\n\n  // Template outlet references\n  notesRef: any;\n  bestRef: any;\n  prosConsRef: any;\n  topicsRef: any;\n\n  // Example code snippets\n  code_1 = `// Getting the injector in Angular 19\nimport { Component, Injector, inject } from '@angular/core';\nimport { LoggerService } from './logger.service';\n\n@Component({\n  selector: 'app-example',\n  template: \\`<div>{{ message }}</div>\\`\n})\nexport class ExampleComponent {\n  // Method 1: Using the inject function (recommended in Angular 19)\n  private logger = inject(LoggerService);\n  message = 'Injector example';\n\n  // Method 2: Injecting the Injector itself\n  constructor(private injector: Injector) {\n    // Manually getting a service instance from the injector\n    const loggerFromInjector = this.injector.get(LoggerService);\n    loggerFromInjector.log('Component initialized with injector');\n\n    // Using the logger injected with the inject() function\n    this.logger.log('Component initialized with inject()');\n  }\n}`;\n\n  code_2 = `// Hierarchical Injectors in Angular 19\nimport { Component, Injector, inject } from '@angular/core';\n\n// 1. Root Injector - Provided by Angular through bootstrapApplication\n// Can be configured in main.ts\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    { provide: 'API_URL', useValue: 'https://api.example.com' },\n    // These services will be available to all components\n    GlobalService,\n    { provide: LogLevel, useValue: 'production' }\n  ]\n});\n\n// 2. Module Injector (for NgModule-based apps)\n@NgModule({\n  providers: [\n    ModuleLevelService,\n    { provide: FEATURE_FLAG, useValue: true }\n  ]\n})\nexport class FeatureModule {}\n\n// 3. Element Injector - Provided in component decorators\n@Component({\n  selector: 'app-feature',\n  providers: [\n    // This service is only available to this component\n    // and its descendants\n    FeatureService,\n    {\n      provide: ParentService,\n      useClass: CustomizedService\n    }\n  ]\n})\nexport class FeatureComponent {\n  // This component has access to:\n  // 1. Services from its own providers\n  // 2. Services from parent components\n  // 3. Services from any parent modules\n  // 4. Services from the root injector\n}`;\n\n  code_3 = `// Standalone component injection in Angular 19\nimport { Component, importProvidersFrom, inject } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { UserService } from './user.service';\n\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  imports: [CommonModule],\n  providers: [\n    // Local providers for this component only\n    UserService,\n    // Import providers from modules\n    importProvidersFrom(HttpClientModule)\n  ],\n  template: \\`\n    <div *ngIf=\"user$ | async as user\">\n      <h2>{{ user.name }}</h2>\n      <p>{{ user.email }}</p>\n    </div>\n  \\`\n})\nexport class UserProfileComponent {\n  // Inject dependencies using the inject function\n  private userService = inject(UserService);\n  private http = inject(HttpClient);\n\n  // Use the injected services\n  user$ = this.userService.getCurrentUser();\n}\n\n// In main.ts\nbootstrapApplication(AppComponent, {\n  providers: [\n    // Global providers\n    provideRouter([...])\n  ]\n});`;\n\n  code_4 = `// Advanced injector techniques in Angular 19\nimport { Injector, InjectionToken, inject, runInInjectionContext } from '@angular/core';\n\n// 1. InjectionTokens for non-class dependencies\nexport const CACHE_SIZE = new InjectionToken<number>('cache-size');\nexport const API_ENDPOINTS = new InjectionToken<Record<string, string>>('api-endpoints');\n\n// Usage with providers\nbootstrapApplication(AppComponent, {\n  providers: [\n    { provide: CACHE_SIZE, useValue: 100 },\n    {\n      provide: API_ENDPOINTS,\n      useValue: {\n        users: '/api/users',\n        products: '/api/products'\n      }\n    }\n  ]\n});\n\n// 2. Multi providers\nexport const PLUGIN = new InjectionToken<any[]>('application-plugins', {\n  factory: () => []\n});\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    { provide: PLUGIN, useValue: AuthPlugin, multi: true },\n    { provide: PLUGIN, useValue: LoggingPlugin, multi: true },\n    { provide: PLUGIN, useValue: AnalyticsPlugin, multi: true }\n  ]\n});\n\n// Usage\nconst plugins = inject(PLUGIN); // Returns an array of all provided values\n\n// 3. Running code in injection context\nexport function initializeApp(injector: Injector) {\n  return () => {\n    // Create a context where inject() function works\n    return runInInjectionContext(injector, () => {\n      const http = inject(HttpClient);\n      const config = inject(CONFIG_TOKEN);\n\n      // Initialize the app with dependencies\n      return http.get(\\`\\${config.apiUrl}/init\\`).toPromise();\n    });\n  };\n}`;\n\n  code_5 = `// Dependency resolution and provider overrides in Angular 19\nimport { Component, NgModule, Optional, Self, SkipSelf, Host } from '@angular/core';\n\n// 1. Resolution modifiers\n@Component({\n  selector: 'app-child',\n  template: '<div>Child Component</div>',\n  providers: [{ provide: LoggerService, useClass: DetailedLoggerService }]\n})\nexport class ChildComponent {\n  constructor(\n    // Only look for the service in this component's injector\n    @Self() private selfLogger: LoggerService,\n\n    // Only look for the service in parent injectors, skip this component\n    @SkipSelf() private parentLogger: LoggerService,\n\n    // Look for the service in this component and its hosts\n    @Host() private hostLogger: LoggerService,\n\n    // Service is optional, won't throw error if not found\n    @Optional() private optionalService?: SpecialService\n  ) {\n    // Use the injected services\n  }\n}\n\n// 2. Provider overrides for testing\nimport { TestBed } from '@angular/core/testing';\n\ndescribe('ServiceTests', () => {\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      providers: [\n        UserService,\n        // Override the AuthService with a mock\n        { provide: AuthService, useClass: MockAuthService },\n\n        // Override an InjectionToken\n        { provide: API_URL, useValue: 'http://test-api.example.com' }\n      ]\n    });\n  });\n\n  it('should use the mock service', () => {\n    const userService = TestBed.inject(UserService);\n    const authService = TestBed.inject(AuthService);\n\n    // authService will be the MockAuthService instance\n    expect(authService instanceof MockAuthService).toBe(true);\n  });\n});`;\n\n  code_6 = `// Angular 19 signal-based injector features\nimport { Component, inject, signal, effect, computed, Injector, createEnvironmentInjector } from '@angular/core';\n\n@Component({\n  selector: 'app-signal-example',\n  template: \\`\n    <div>Current count: {{ count() }}</div>\n    <div>Doubled: {{ doubled() }}</div>\n  \\`\n})\nexport class SignalExampleComponent {\n  // Inject the required services\n  private dataService = inject(DataService);\n\n  // Component state using signals\n  count = signal(0);\n  doubled = computed(() => this.count() * 2);\n\n  constructor() {\n    // Use injected service with signals\n    this.dataService.getData().subscribe(value => {\n      this.count.set(value);\n    });\n\n    // Effects can use injected dependencies\n    effect(() => {\n      // This will run whenever count changes\n      console.log(\\`Count changed to \\${this.count()}\\`);\n\n      // Use injected service inside the effect\n      this.dataService.logEvent(\\`count-changed-\\${this.count()}\\`);\n    });\n  }\n\n  // Create a child environment injector at runtime\n  createChildInjector(parentInjector: Injector) {\n    return createEnvironmentInjector([\n      { provide: CONFIG, useValue: { featureEnabled: true } }\n    ], parentInjector);\n  }\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Initialize code snippets if needed\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Injector\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Injector</span>\n      in Angular 19 is a core part of the dependency injection system that manages the creation and retrieval of service instances and other dependencies. Injectors maintain a container of previously created instances and create new instances as needed using registered providers. Angular 19 enhances injectors with optimized retrieval mechanisms, improved support for signals, and enhanced tree-shaking.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>Core Concepts of Injectors in Angular 19</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Definition</strong>:\n      An injector is an object responsible for retrieving or creating dependency instances from a registry of providers.\n    </li>\n    <li>\n      <strong>Hierarchical Structure</strong>:\n      Angular creates a tree of injectors that parallels the component tree, enabling dependencies to be scoped to specific components.\n    </li>\n    <li>\n      <strong>Modern Injection Functions</strong>:\n      Angular 19 optimizes the inject() function for retrieving dependencies, providing a more direct alternative to constructor injection.\n    </li>\n    <li>\n      <strong>Environment Injectors</strong>:\n      Beyond component-level injectors, Angular 19 provides powerful environment injectors for application-wide service configuration.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Getting Injector Instances</p>\n\n  <button (click)=\"code_1_ref.hidden = !code_1_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_1_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_1\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Hierarchical Injectors</p>\n\n  <button (click)=\"code_2_ref.hidden = !code_2_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_2_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_2\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Standalone Component Injection</p>\n\n  <button (click)=\"code_3_ref.hidden = !code_3_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_3_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_3\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Advanced Injector Techniques</p>\n\n  <button (click)=\"code_4_ref.hidden = !code_4_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_4_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_4\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Dependency Resolution and Testing</p>\n\n  <button (click)=\"code_5_ref.hidden = !code_5_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_5_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_5\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Signal-based Injector Features</p>\n\n  <button (click)=\"code_6_ref.hidden = !code_6_ref.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code_6_ref hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"code_6\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use Modern Injection Patterns</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Prefer inject() Function</strong>:\n          For Angular 19 applications, use the inject() function for field injection rather than constructor-based dependency injection when possible, especially in standalone components.\n        </li>\n        <li>\n          <strong>Minimize Injector Usage</strong>:\n          Avoid directly using the Injector class unless needed for advanced scenarios. The inject() function is more efficient and promotes better code organization.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Injector Hierarchies</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Consider Provider Scope</strong>:\n          Place providers at the appropriate level in the injector hierarchy. Application-wide services should be provided at the root, while component-specific services should be provided in component decorators.\n        </li>\n        <li>\n          <strong>Leverage Standalone Components</strong>:\n          Use standalone components with explicit provider configurations to make dependency hierarchies more predictable and maintainable.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Lazy Loading Strategies</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Feature-specific Providers</strong>:\n          When using lazy-loaded routes or modules, provide feature-specific services at the feature level to improve performance and memory usage.\n        </li>\n        <li>\n          <strong>Environment Injectors</strong>:\n          Use createEnvironmentInjector for dynamically created components to ensure they have access to required dependencies without polluting the global scope.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Use Resolution Modifiers Appropriately</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>@Optional() for Non-critical Dependencies</strong>:\n          Use @Optional() for dependencies that aren't required for the component or service to function properly.\n        </li>\n        <li>\n          <strong>@Self() and @SkipSelf() for Controlled Resolution</strong>:\n          Use these decorators to precisely control where dependencies are resolved from, preventing unintended shadowing or resolution from parent injectors.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Design for Testability</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Provider Overrides</strong>:\n          Design services with testing in mind, making it easy to provide mock implementations during testing.\n        </li>\n        <li>\n          <strong>TestBed Configuration</strong>:\n          Use TestBed to create isolated testing environments with controlled injector configurations for predictable unit tests.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Hierarchical Dependency Resolution</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular's injector hierarchy allows for precise control over the scope and lifetime of dependencies, enabling both application-wide singletons and component-specific instances.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Performance in Angular 19</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19 optimizes injector lookups and caching mechanisms, resulting in faster dependency resolution and reduced memory overhead compared to previous versions.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simplified Testing</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Injectors make it easy to substitute real services with mocks during testing, enabling isolated unit tests without complex setup code.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Seamless Integration with Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Angular 19's injector system works seamlessly with the signals API, allowing for reactive state management that integrates naturally with dependency injection.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Runtime Flexibility</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Injectors enable dynamic creation of services at runtime and support advanced patterns like multi-providers and factory functions for complex dependency scenarios.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Understanding the full injector hierarchy and resolution rules requires time and experience, which can be challenging for developers new to Angular.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Dependency resolution issues can be difficult to debug, especially in large applications with complex provider configurations across multiple injector levels.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential for Hidden Dependencies</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          The ease of injecting dependencies can lead to services with too many dependencies or hidden dependency chains, making code harder to understand and maintain.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Configuration Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          Setting up and maintaining proper provider configurations across various modules and components can add complexity to the codebase, especially in large applications.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md mt-4\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left w-1/2\">Pros</th>\n        <th class=\"py-3 px-4 text-left w-1/2\">Cons</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Hierarchical dependency resolution</td>\n        <td class=\"py-3 px-4\">Steep learning curve</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Optimized performance in Angular 19</td>\n        <td class=\"py-3 px-4\">Debugging complexity</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Simplified testing with mocks</td>\n        <td class=\"py-3 px-4\">Potential for hidden dependencies</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Seamless signals integration</td>\n        <td class=\"py-3 px-4\">Configuration overhead</td>\n      </tr>\n      <tr class=\"bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Runtime flexibility with dynamic providers</td>\n        <td class=\"py-3 px-4\">Potential memory leaks if not managed properly</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #topicsRef>\n  <p>Related Angular 19 Features and Concepts</p>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong>Dependency Injection System</strong>:\n\n      <p>\n        The injector is a core part of Angular's dependency injection system, working alongside injectable services and providers to deliver dependencies throughout the application.\n      </p>\n    </li>\n    <li>\n      <strong>Injectable Decorator</strong>:\n\n      <p>\n        The &#64;Injectable decorator marks classes that can be created and managed by Angular's injector, making them available for injection into components, directives, and other services.\n      </p>\n    </li>\n    <li>\n      <strong>Providers</strong>:\n\n      <p>\n        Providers tell the injector how to create instances of dependencies. They can specify classes, values, factories, or existing instances to be used when a dependency is requested.\n      </p>\n    </li>\n    <li>\n      <strong>inject() Function</strong>:\n\n      <p>\n        Angular 19's inject() function provides a modern way to retrieve dependencies from the injector without using constructor injection, optimized for use with signals and standalone components.\n      </p>\n    </li>\n    <li>\n      <strong>Environment Injectors</strong>:\n\n      <p>\n        Environment injectors provide dependency injection outside the component tree, enabling application-wide services and lazy-loaded feature modules in Angular 19.\n      </p>\n    </li>\n    <li>\n      <strong>Injection Tokens</strong>:\n\n      <p>\n        InjectionTokens allow non-class values like strings, objects, and functions to be provided and injected, extending the DI system beyond class-based services.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>External Resources</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <a href=\"https://angular.io/guide/dependency-injection\" class=\"text-sky-400 hover:text-rose-400\">\n        Angular Dependency Injection Guide\n      </a> - Official Angular documentation on DI and injectors\n    </li>\n    <li>\n      <a href=\"https://angular.io/api/core/Injector\" class=\"text-sky-400 hover:text-rose-400\">\n        Injector API Documentation\n      </a> - Complete API reference for the Injector class\n    </li>\n    <li>\n      <a href=\"https://angular.io/api/core/inject\" class=\"text-sky-400 hover:text-rose-400\">\n        inject() Function API\n      </a> - Documentation for the modern inject() function\n    </li>\n    <li>\n      <a href=\"https://angular.io/guide/hierarchical-dependency-injection\" class=\"text-sky-400 hover:text-rose-400\">\n        Hierarchical Injectors\n      </a> - Understanding the injector hierarchy in Angular\n    </li>\n    <li>\n      <a href=\"https://angular.io/guide/standalone-components\" class=\"text-sky-400 hover:text-rose-400\">\n        Standalone Components\n      </a> - How dependency injection works with standalone components\n    </li>\n  </ul>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-input-transform',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './input-transform.component.html',\n  styleUrls: ['./input-transform.component.scss']\n})\nexport class InputTransformComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Template references\n  @ViewChild('notesRef') notesRef!: TemplateRef<any>;\n  @ViewChild('bestRef') bestRef!: TemplateRef<any>;\n  @ViewChild('prosConsRef') prosConsRef!: TemplateRef<any>;\n  @ViewChild('topicsRef') topicsRef!: TemplateRef<any>;\n\n  // Code examples for Input Transform\n  basicExampleCode: string = `// Basic Input Transform Example\nimport { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'app-price-display',\n  standalone: true,\n  template: \\`\n    <div class=\"price\">{{ price() }}</div>\n  \\`\n})\nexport class PriceDisplayComponent {\n  // Transform a number into a formatted currency string\n  price = input<number>(0, {\n    transform: (value: number) => \\`$\\${value.toFixed(2)}\\`\n  });\n}\n\n// Usage in parent component\n@Component({\n  selector: 'app-parent',\n  template: \\`\n    <app-price-display [price]=\"productPrice\" />\n  \\`\n})\nexport class ParentComponent {\n  productPrice = 25.99;\n}`;\n\n  multiInputExampleCode: string = `// Multiple Input Transforms\nimport { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'app-user-card',\n  standalone: true,\n  template: \\`\n    <div class=\"card\">\n      <div class=\"name\">{{ fullName() }}</div>\n      <div class=\"username\">{{ username() }}</div>\n      <div class=\"joined\">Member since: {{ joinDate() }}</div>\n    </div>\n  \\`\n})\nexport class UserCardComponent {\n  // Transform first and last name into a full name\n  firstName = input<string>('', {\n    alias: 'first'\n  });\n\n  lastName = input<string>('', {\n    alias: 'last'\n  });\n\n  // Derive fullName from firstName and lastName\n  fullName = input<string>('', {\n    transform: () => {\n      return \\`\\${this.firstName()} \\${this.lastName()}\\`.trim();\n    }\n  });\n\n  // Validate and transform username\n  username = input<string>('', {\n    transform: (value: string) => {\n      // Convert to lowercase and remove spaces\n      return value.toLowerCase().replace(/\\\\s/g, '');\n    }\n  });\n\n  // Format date string\n  joinTimestamp = input<number>(0);\n\n  joinDate = input<string>('', {\n    transform: () => {\n      const date = new Date(this.joinTimestamp());\n      return date.toLocaleDateString();\n    }\n  });\n}`;\n\n  complexTransformExampleCode: string = `// Complex Transforms with Input Functions\nimport { Component, input, computed } from '@angular/core';\n\ninterface Product {\n  id: number;\n  name: string;\n  price: number;\n  inStock: boolean;\n}\n\n@Component({\n  selector: 'app-product-card',\n  standalone: true,\n  template: \\`\n    <div class=\"product\" [class.out-of-stock]=\"!isAvailable()\">\n      <h3>{{ product().name }}</h3>\n      <div class=\"price\">{{ formattedPrice() }}</div>\n      <div class=\"status\">{{ statusMessage() }}</div>\n    </div>\n  \\`\n})\nexport class ProductCardComponent {\n  // Transform raw product data with validation\n  product = input<Product>({\n    id: 0,\n    name: 'Unknown',\n    price: 0,\n    inStock: false\n  }, {\n    transform: (value: any) => {\n      // Validate and provide defaults for missing properties\n      return {\n        id: value?.id ?? 0,\n        name: value?.name ?? 'Unknown Product',\n        price: parseFloat(value?.price) || 0,\n        inStock: Boolean(value?.inStock)\n      };\n    }\n  });\n\n  // Derived state from the transformed input\n  isAvailable = computed(() => this.product().inStock);\n\n  formattedPrice = computed(() => {\n    const price = this.product().price;\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(price);\n  });\n\n  statusMessage = computed(() => {\n    return this.isAvailable() ? 'In Stock' : 'Out of Stock';\n  });\n}`;\n\n  v19EnhancementsCode: string = `// Angular 19 Input Transform Enhancements\nimport { Component, input, model, computed } from '@angular/core';\n\n// 1. Reactive transform with computed values\n@Component({\n  selector: 'app-reactive-transform',\n  template: \\`<div>{{ displayValue() }}</div>\\`\n})\nexport class ReactiveTransformComponent {\n  // Base input\n  count = input<number>(0);\n\n  // Transform that automatically updates when dependencies change\n  displayValue = input<string>('', {\n    transform: () => {\n      const currentCount = this.count();\n      if (currentCount <= 0) return 'No items';\n      if (currentCount === 1) return '1 item';\n      return \\`\\${currentCount} items\\`;\n    }\n  });\n}\n\n// 2. Two-way binding with model() and transform\n@Component({\n  selector: 'app-currency-input',\n  template: \\`\n    <input\n      type=\"text\"\n      [value]=\"displayValue()\"\n      (input)=\"updateValue($event)\"\n    />\n  \\`\n})\nexport class CurrencyInputComponent {\n  // Two-way bindable model with transform\n  amount = model<number>(0);\n\n  // Format for display\n  displayValue = computed(() => {\n    return \\`$\\${this.amount().toFixed(2)}\\`;\n  });\n\n  // Parse user input back to number\n  updateValue(event: Event) {\n    const input = (event.target as HTMLInputElement).value;\n    // Remove currency symbol and convert to number\n    const numericValue = parseFloat(input.replace(/[^0-9.-]+/g, ''));\n\n    if (!isNaN(numericValue)) {\n      this.amount.set(numericValue);\n    }\n  }\n}\n\n// 3. Async transform with error handling\n@Component({\n  selector: 'app-async-transform',\n  template: \\`\n    <div *ngIf=\"userData().status === 'loading'\">Loading...</div>\n    <div *ngIf=\"userData().status === 'error'\">Error: {{ userData().error }}</div>\n    <div *ngIf=\"userData().status === 'success'\">\n      Welcome, {{ userData().data?.name }}!\n    </div>\n  \\`\n})\nexport class AsyncTransformComponent {\n  userId = input<string>('');\n\n  userData = input<{\n    status: 'loading' | 'success' | 'error';\n    data?: any;\n    error?: string;\n  }>({ status: 'loading' }, {\n    transform: async (id: string) => {\n      if (!id) return { status: 'error', error: 'No user ID provided' };\n\n      try {\n        // Mark as loading during fetch\n        this.userData.set({ status: 'loading' });\n\n        const response = await fetch(\\`https://api.example.com/users/\\${id}\\`);\n        if (!response.ok) throw new Error('Failed to fetch user data');\n\n        const data = await response.json();\n        return { status: 'success', data };\n      } catch (error) {\n        return {\n          status: 'error',\n          error: error instanceof Error ? error.message : 'Unknown error'\n        };\n      }\n    }\n  });\n}`;\n\n  architectureExampleCode: string = `// Architecture Patterns with Input Transform\nimport { Component, input, computed, inject } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { filter, debounceTime, switchMap } from 'rxjs/operators';\nimport { UserService } from './user.service';\n\n// 1. Service Integration\n@Component({\n  selector: 'app-user-search',\n  template: \\`\n    <div class=\"search-results\">\n      <div *ngFor=\"let user of processedUsers()\">\n        {{ user.displayName }}\n      </div>\n    </div>\n  \\`\n})\nexport class UserSearchComponent {\n  private userService = inject(UserService);\n\n  // Transform raw query into normalized search term\n  searchQuery = input<string>('', {\n    transform: (value: string) => value.trim().toLowerCase()\n  });\n\n  // Process user data with transforms\n  processedUsers = input<any[]>([], {\n    transform: async (query: string) => {\n      if (query.length < 2) return [];\n\n      const users = await this.userService.searchUsers(query).toPromise();\n      return users.map(user => ({\n        ...user,\n        displayName: \\`\\${user.firstName} \\${user.lastName}\\`,\n        initials: \\`\\${user.firstName[0]}\\${user.lastName[0]}\\`.toUpperCase()\n      }));\n    }\n  });\n}\n\n// 2. Form Integration\n@Component({\n  selector: 'app-address-form',\n  template: \\`<!-- Form template -->\\`\n})\nexport class AddressFormComponent {\n  // Transform and validate postal code\n  postalCode = input<string>('', {\n    transform: (value: string) => {\n      // Format as XXXXX or XXXXX-XXXX\n      const cleaned = value.replace(/[^0-9]/g, '');\n      if (cleaned.length <= 5) return cleaned;\n      return \\`\\${cleaned.slice(0, 5)}-\\${cleaned.slice(5, 9)}\\`;\n    }\n  });\n\n  // Validate postal code\n  isValidPostalCode = computed(() => {\n    const code = this.postalCode();\n    return /^\\\\d{5}(-\\\\d{4})?$/.test(code);\n  });\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Nothing to do here\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Input Transform\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Input Transform</span>\n      is a powerful feature in Angular 19 that allows you to transform input values as they enter a component, providing clean data manipulation, validation, and formatting without cluttering component logic.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What is Input Transform?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Input Property Transformation</strong>:\n      A feature that lets you transform input values as they enter a component.\n    </li>\n    <li>\n      <strong>Reactive Integration</strong>:\n      Works seamlessly with Angular's signal-based reactivity system.\n    </li>\n    <li>\n      <strong>Cleaner Component Logic</strong>:\n      Moves data manipulation logic directly into the input declaration.\n    </li>\n    <li>\n      <strong>Type-Safe Transformations</strong>:\n      Maintains TypeScript type safety throughout the transformation pipeline.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Basic Input Transform Example</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"basicExampleCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Multiple Input Transforms</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"multiInputExampleCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Complex Transforms with Input Functions</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"complexTransformExampleCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Input Transform Enhancements</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19EnhancementsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Architecture Patterns with Input Transform</p>\n  <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code5 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"architectureExampleCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Input Transform Key Features</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Feature</th>\n        <th class=\"py-3 px-4 text-left\">Description</th>\n        <th class=\"py-3 px-4 text-left\">Benefits</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Value Transformation</td>\n        <td class=\"py-3 px-4\">Transform raw input values into formatted, validated data</td>\n        <td class=\"py-3 px-4\">Clean data always available in component without extra logic</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Dependency Tracking</td>\n        <td class=\"py-3 px-4\">Transforms can depend on other inputs or signals</td>\n        <td class=\"py-3 px-4\">Automatically updates when dependencies change</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Type Safety</td>\n        <td class=\"py-3 px-4\">Full TypeScript support for input and output types</td>\n        <td class=\"py-3 px-4\">Prevents errors and improves development experience</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Async Support</td>\n        <td class=\"py-3 px-4\">Transform functions can be asynchronous</td>\n        <td class=\"py-3 px-4\">Enables API calls or complex async operations in transforms</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Keep Transforms Pure and Focused</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Single Responsibility</strong>:\n          Each transform should have a clear, single purpose (formatting, validation, etc.).\n        </li>\n        <li>\n          <strong>Avoid Side Effects</strong>:\n          Transforms should not change component state or trigger external actions.\n        </li>\n        <li>\n          <strong>Prefer Immutability</strong>:\n          Return new objects rather than mutating input values.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Plan Your Transform Dependencies</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Dependency Order</strong>:\n          Define inputs in the proper order if transforms depend on other inputs.\n        </li>\n        <li>\n          <strong>Avoid Circular Dependencies</strong>:\n          Don't create transforms that depend on each other in a circular manner.\n        </li>\n        <li>\n          <strong>Use Computed for Derived Values</strong>:\n          If you only need to derive values without transforming inputs, use computed() instead.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Handle Edge Cases Gracefully</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Default Values</strong>:\n          Always provide sensible defaults for when inputs are undefined.\n        </li>\n        <li>\n          <strong>Validation</strong>:\n          Include appropriate validation in transforms to prevent unexpected values.\n        </li>\n        <li>\n          <strong>Error Handling</strong>:\n          Properly handle errors in transforms, especially for async transforms.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize for Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Keep Transforms Efficient</strong>:\n          Avoid computationally intensive operations in transforms that run frequently.\n        </li>\n        <li>\n          <strong>Debounce Frequent Changes</strong>:\n          For inputs that change rapidly, consider implementing debouncing.\n        </li>\n        <li>\n          <strong>Cache Complex Results</strong>:\n          Use memoization techniques for expensive transformations.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Document Your Transforms</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Clear Comments</strong>:\n          Document what each transform does, especially for complex transforms.\n        </li>\n        <li>\n          <strong>Type Annotations</strong>:\n          Use explicit TypeScript types for both input and output of transforms.\n        </li>\n        <li>\n          <strong>Document Assumptions</strong>:\n          Make clear any assumptions about input values or dependencies.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Cleaner Component Logic</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Declarative Approach</span>:\n          Transforms move data manipulation logic directly into input declarations.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Boilerplate</span>:\n          Eliminates the need for separate getters/setters or ngOnChanges.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Self-Contained Logic</span>:\n          Keep input handling logic close to where the input is defined.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Type Safety</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Strong Typing</span>:\n          Full TypeScript support for both incoming values and transformed results.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Compile-Time Checks</span>:\n          Type errors are caught at compile time rather than runtime.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better IntelliSense</span>:\n          Improved IDE support for working with transformed values.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Reactive Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Seamless Signal Integration</span>:\n          Works perfectly with Angular's signal-based reactivity system.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Automatic Updates</span>:\n          Transforms re-run automatically when dependencies change.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Fine-Grained Reactivity</span>:\n          Updates only components affected by input changes.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Reusability</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Encapsulated Validation</span>:\n          Components can handle their own input validation.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Standardized Interfaces</span>:\n          Transforms can normalize different input formats to a standard internal format.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Clean Component APIs</span>:\n          Makes components more self-contained and easier to reuse.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Potential Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Dependency Tracking</span>:\n          Complex dependency chains between transforms can be difficult to understand.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Hidden Logic</span>:\n          Transform logic can be less visible than explicit methods.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Debugging Challenges</span>:\n          Issues within transforms can sometimes be harder to debug.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Execution Frequency</span>:\n          Transforms might run more often than needed if dependencies change frequently.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Resource Usage</span>:\n          Complex transforms on large data structures can impact performance.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Memory Overhead</span>:\n          Creating new objects in transforms can increase memory usage.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">New Pattern</span>:\n          Developers need to learn this new approach to input handling.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Conceptual Shift</span>:\n          Requires understanding reactive programming concepts.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Pattern Evolution</span>:\n          Best practices for input transforms are still evolving.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Limited Backward Compatibility</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Angular Version Requirement</span>:\n          Only available in Angular 19+, not usable in older projects.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Migration Effort</span>:\n          Converting existing input patterns to use transforms requires refactoring.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Signal Dependency</span>:\n          Fully leveraging transforms requires adopting the signals architecture.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Angular Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's reactive primitives for state management.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Input Transform</strong>:\n          Input transforms are built on the signals architecture and can depend on signal values.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Computed Values</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Derived values that automatically update when their dependencies change.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Input Transform</strong>:\n          Input transforms can use computed values, and computed values can use transformed inputs.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Two-Way Binding with model()</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular 19's approach to two-way data binding using signals.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Input Transform</strong>:\n          Can be combined with input transforms for more powerful two-way binding patterns.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Form Control Validation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Validating and processing user input in forms.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Input Transform</strong>:\n          Input transforms can provide an alternative approach to form value processing and validation.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Change Detection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          How Angular detects and responds to state changes.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Input Transform</strong>:\n          Input transforms participate in signal-based change detection, improving performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Component Architecture</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Patterns for structuring Angular components and their interactions.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Input Transform</strong>:\n          Transforms can simplify component APIs and improve component boundaries.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular applications that don't rely on Zone.js for change detection.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Input Transform</strong>:\n          Input transforms work well in zoneless applications as part of the signals architecture.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-lazy-loading',\n  templateUrl: './lazy-loading.component.html',\n  styleUrls: ['./lazy-loading.component.scss']\n})\nexport class LazyLoadingComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/lazy-loading/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/lazy-loading/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/lazy-loading/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n      this.http.get('assets/codes/lazy-loading/related/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n  }\n}\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    lazy loading\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n\n    </p>\n\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>\n    Lazy Loading in Angular:\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      Lazy Loading Modules\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1  copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      Lazy Loading Components\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2  copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      Preloading Lazy-Loaded Modules\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3  copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n  </ol>\n\n  <br>\n\n    <p>\n      By understanding how to lazy load modules and components in Angular, you can improve the performance and scalability of your applications. Remember to refer to the official Angular documentation for more information and examples.\n    </p>\n  </ng-template>\n\n\n\n  <ng-template #prosConsRef>\n    <strong class=\"text-sky-400\">\n      Pros:\n    </strong>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Faster Initial Loading Times</strong>:\n        Lazy loading can significantly reduce the initial loading time of your application by only loading the modules that are needed for the current page or feature. This can improve the user experience, particularly on slower or unreliable network connections.\n      </li>\n      <li>\n        <strong>Improved Performance</strong>:\n        By reducing the amount of code that needs to be downloaded and compiled by the browser, lazy loading can improve the performance of your application, particularly on slower devices or network connections.\n      </li>\n      <li>\n        <strong>Scalability</strong>:\n        Lazy loading can improve the scalability of your application by allowing you to break it up into smaller, more manageable chunks. This can make it easier to maintain and update your application over time.\n      </li>\n      <li>\n        <strong>Better Resource Utilization</strong>:\n        Lazy loading can reduce the amount of memory and processing power needed by your application by only loading the modules that are needed for the current page or feature. This can improve the overall efficiency of your application and reduce its environmental impact.\n      </li>\n    </ol>\n\n    <br>\n\n    <strong class=\"text-sky-400\">\n      Cons:\n    </strong>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Increased Complexity </strong>:\n        Lazy loading can add complexity to your application, particularly if you have a large number of modules and routes. This can make it harder to maintain and debug your application over time.\n      </li>\n      <li>\n        <strong>Potential for Bugs</strong>:\n        Lazy loading can introduce potential bugs into your application, particularly if you have circular dependencies or dependencies that are loaded asynchronously. This can make it harder to debug and test your application over time.\n      </li>\n      <li>\n        <strong>Additional Development Time</strong>:\n        Lazy loading can require additional development time and effort, particularly if you have a large number of modules and routes. This can make it harder to deliver your application on time and within budget.\n      </li>\n      <li>\n        <strong>Compatibility Issues</strong>:\n        Lazy loading may not be compatible with all browsers and devices, particularly older ones. This can limit the reach of your application and reduce its overall effectiveness.\n      </li>\n    </ol>\n\n    <br>\n\n    <p>\n    </p>\n\n  </ng-template>\n\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Related topics to lazy loading in Angular:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Dynamic Imports</strong>:\n        <p>\n          Dynamic imports is a feature introduced in ECMAScript 6 that allows you to import modules asynchronously at runtime. This is useful when you need to load a module on demand, such as in lazy loading scenarios.\n        </p>\n\n        <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n        <span #code4  copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_4\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n\n      </li>\n      <li>\n        <strong>Code Splitting</strong>:\n\n        <p>\n          Code splitting is a technique used to break up your code into smaller, more manageable chunks that can be loaded on demand. This is similar to lazy loading, but is more general and can be used outside of Angular.\n        </p>\n\n        <br>\n\n        <p>\n          There are several tools and libraries available for code splitting, including Webpack and Rollup. These tools allow you to define entry points in your application, and will automatically create separate bundles for each entry point.\n        </p>\n      </li>\n      <li>\n        <strong>Ahead-of-Time (AOT) Compilation</strong>:\n\n        <p>\n          Ahead-of-time (AOT) compilation is a technique used in Angular to precompile your application's templates and code into efficient JavaScript code that can be loaded and executed quickly by the browser.\n        </p>\n\n        <br>\n\n        <p>\n          AOT compilation can improve the performance of your application, particularly on slow or unreliable network connections. It is also required for certain features in Angular, such as server-side rendering.\n        </p>\n      </li>\n      <li>\n        <strong>Server-Side Rendering (SSR)</strong>:\n\n        <p>\n          Server-side rendering (SSR) is a technique used to render your application on the server before sending it to the client. This can improve the initial loading time of your application, particularly on slower devices or network connections.\n        </p>\n\n        <br>\n\n        <p>\n          To implement SSR in Angular, you need to use a compatible server-side rendering framework, such as Angular Universal. This framework allows you to render your Angular application on the server and send the resulting HTML to the client.\n        </p>\n      </li>\n      </ol>\n\n\n\n  <br>\n\n  <p>\n  </p>\n\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-lifecycle-hook',\n  templateUrl: './lifecycle-hook.component.html',\n  styleUrls: ['./lifecycle-hook.component.scss']\n})\nexport class LifecycleHookComponent {\n\n}\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    lifecycle hooks\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      An interface that allows you to tap into the lifecycle of directives and components as they are created, updated, and destroyed:\n    </p>\n\n    <br>\n\n    <div class=\"\">\n      <table class=\"w-fit divide-gray-200\">\n        <thead class=\"bg-gray-800\">\n          <tr>\n            <th scope=\"col\" class=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-800 sm:pl-6\"></th>\n            <th scope=\"col\" class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-200\">HOOK METHOD</th>\n            <th scope=\"col\" class=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-200\">DETAILS</th>\n\n          </tr>\n        </thead>\n        <tbody class=\"divide-y divide-gray-200 bg-gray-800\">\n          <tr>\n            <td class=\"py-4 pl-4 pr-3 text-sm font-medium text-rose-400 sm:pl-6\">\n              1\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-400\">\n              ngOnChanges\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-200\">\n              When an input or output binding value changes.\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"py-4 pl-4 pr-3 text-sm font-medium text-rose-400 sm:pl-6\">\n             2\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-400\">\n              ngOnInit\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-200\">\n              After the first ngOnChanges.\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"py-4 pl-4 pr-3 text-sm font-medium text-rose-400 sm:pl-6\">\n              3\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-400\">\n              ngDoCheck\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-200\">\n              Developer's custom change detection.\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"py-4 pl-4 pr-3 text-sm font-medium text-rose-400 sm:pl-6\">\n              4\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-400\">\n              ngAfterContentInit\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-200\">\n              After component content initialized.\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"py-4 pl-4 pr-3 text-sm font-medium text-rose-400 sm:pl-6\">\n             5\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-400\">\n              ngAfterContentChecked\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-200\">\n              After every check of component content.\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"py-4 pl-4 pr-3 text-sm font-medium text-rose-400 sm:pl-6\">\n             6\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-400\">\n              ngAfterViewInit\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-200\">\n              After the views of a component are initialized.\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"py-4 pl-4 pr-3 text-sm font-medium text-rose-400 sm:pl-6\">\n             7\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-400\">\n              ngAfterViewChecked\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-200\">\n              After every check of the views of a component.\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"py-4 pl-4 pr-3 text-sm font-medium text-rose-400 sm:pl-6\">\n             8\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-400\">\n              ngOnDestroy\n            </td>\n            <td class=\" px-3 py-4 text-sm text-gray-200\">\n              Just before the directive is destroyed.\n            </td>\n          </tr>\n\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n</section>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-observable',\n  templateUrl: './observable.component.html',\n  styleUrls: ['./observable.component.scss']\n})\nexport class ObservableComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n\n  code_1_r = '';\n  code_2_r = '';\n  code_3_r = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/observables/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/observables/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/observables/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/observables/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/observables/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n\n      this.http.get('assets/codes/observables/related/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1_r = data);\n\n    this.http.get('assets/codes/observables/related/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2_r = data);\n\n    this.http.get('assets/codes/observables/related/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3_r = data);\n  }\n}\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    observable\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      Observables are a powerful feature in Angular that allow you to handle asynchronous data streams. Observables can be used to represent HTTP requests, user input, and other asynchronous events in your application.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Creating an Observable</strong>:\n      <p>\n        To create an observable in Angular, you can use the Observable constructor or one of the utility functions such as of or from.\n      </p>\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Subscribing to an Observable</strong>:\n      <p>\n        To subscribe to an observable in Angular, you can use the subscribe method and pass in callbacks for handling the next, error, and complete events.\n      </p>\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Operators</strong>:\n      <p>\n        Operators are functions that can be used to transform, filter, and manipulate observables in various ways. There are many operators available in Angular, including map, filter, reduce, take, skip, debounceTime, and many more.\n      </p>\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Subjects</strong>:\n      <p>\n        Subjects are a type of observable that can be used to multicast events to multiple subscribers. Subjects have a next method that can be used to push new values to all subscribers.\n      </p>\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Error Handling</strong>:\n      <p>\n        You can handle errors in observables using the catchError and throwError operators. catchError is used to catch errors and return a new observable, while throwError is used to throw an error\n      </p>\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    By understanding observables, subscribing to them, using operators, handling errors, and working with subjects in Angular, you can handle asynchronous data streams and improve the responsiveness and interactivity of your application.\n  </p>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Reactive programming</strong>:\n      <p>\n        Observables are a powerful tool for reactive programming, allowing you to easily handle asynchronous data streams and events in your application.\n      </p>\n    </li>\n    <li>\n      <strong>Consistent API</strong>:\n      <p>\n        Observables provide a consistent API for handling asynchronous data streams, making it easy to work with different data sources and APIs in your application.\n      </p>\n    </li>\n    <li>\n      <strong>Cancellation and Error handling</strong>:\n      <p>\n        Observables provide built-in mechanisms for cancelling requests and handling errors, making it easier to handle errors and improve the robustness of your application.\n      </p>\n    </li>\n    <li>\n      <strong>Composability</strong>:\n      <p>\n        Observables are composable, allowing you to easily combine and transform multiple streams of data in your application. This makes it easier to create complex data flows and handle more advanced scenarios.\n      </p>\n    </li>\n    <li>\n      <strong>Angular integration</strong>:\n      <p>\n        Observables are a core feature of Angular, making it easy to use them with other Angular features such as the HTTP client, forms, and routing.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Learning curve</strong>:\n      <p>\n        Observables can have a steep learning curve, especially if you are not familiar with reactive programming concepts or the RxJS library.\n      </p>\n    </li>\n    <li>\n      <strong>Overhead</strong>:\n      <p>\n        Observables can add some overhead to your application, both in terms of code complexity and runtime performance. This can be especially true for complex data flows and scenarios.\n      </p>\n    </li>\n    <li>\n      <strong>Callback hell</strong>:\n      <p>\n        If not used carefully, observables can lead to \"callback hell\", where you end up with a large number of nested subscriptions and callback functions.\n      </p>\n    </li>\n    <li>\n      <strong>Debugging</strong>:\n      <p>\n        Observables can be more difficult to debug than other programming patterns, especially if you are not familiar with the reactive programming concepts and operators used with observables.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    While there are some downsides to using observables in Angular, the benefits they provide for handling asynchronous data streams and events make them a powerful tool for building responsive and robust applications. By understanding the pros and cons of observables, you can make an informed decision about when and how to use them in your applications.\n  </p>\n\n  </ng-template>\n\n\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Some topics related to Observables in Angular:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Unicast vs Multicast</strong>:\n        <p>\n          Unicast observables have a single subscriber, while multicast observables have multiple subscribers. Unicast observables are created using the Observable constructor, while multicast observables are created using the Subject or Observable.create methods.\n        </p>\n\n        <button (click)=\"code1r.hidden = !code1r.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n        <span #code1r hidden copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_1_r\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n\n      </li>\n      <li>\n        <strong>Cold vs Hot</strong>:\n        <p>\n          Cold observables create a new data stream for each subscriber, while hot observables share a single data stream between subscribers. Cold observables are created using the Observable constructor, while hot observables are created using the Subject or Observable.create methods.\n        </p>\n\n        <button (click)=\"code2r.hidden = !code2r.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n        <span #code2r hidden copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_2_r\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n\n\n      </li>\n      <li>\n        <strong>Creation Operators</strong>:\n        <p>\n          Creation operators are functions that create new observables from scratch. Some popular creation operators include of, from, interval, and timer.\n        </p>\n\n        <button (click)=\"code3r.hidden = !code3r.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n        <span #code3r hidden copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_3_r\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n\n      </li>\n    </ol>\n\n\n    <br>\n\n    <p>\n      By understanding observable patterns, creation operators, and the difference between unicast and multicast, cold and hot observables, you can create more powerful and flexible applications in Angular.\n    </p>\n\n  </ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-partial-hydration',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './partial-hydration.component.html',\n  styleUrls: ['./partial-hydration.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PartialHydrationComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Code examples for partial hydration\n  basicHydrationCode = `// app.config.ts\nimport { ApplicationConfig } from '@angular/core';\nimport { provideClientHydration } from '@angular/platform-browser';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideClientHydration() // Enable hydration for the entire application\n  ]\n};`;\n\n  partialHydrationCode = `<!-- Using partial hydration with selective hydration -->\n<div>\n  <!-- This component will be hydrated -->\n  <app-interactive-counter hydration=\"on\"></app-interactive-counter>\n\n  <!-- This component will remain static, never hydrated -->\n  <app-static-content hydration=\"off\"></app-static-content>\n\n  <!-- This component will be hydrated only after user interaction -->\n  <app-lazy-dashboard hydration=\"user-interactive\"></app-lazy-dashboard>\n</div>`;\n\n  hydrationStrategyCode = `// Progressive hydration strategy in Angular 19\nimport { NgModule } from '@angular/core';\nimport { BrowserModule, provideClientHydration } from '@angular/platform-browser';\nimport { provideHydrationStrategy, HydrationStrategy } from '@angular/core';\n\n// Custom progressive hydration strategy\nclass MyProgressiveStrategy implements HydrationStrategy {\n  shouldHydrateComponent(element: Element): boolean {\n    // Only hydrate components with specific attributes or in viewport\n    return element.hasAttribute('priority-hydrate') || this.isInViewport(element);\n  }\n\n  shouldHydrateChildren(element: Element): boolean {\n    // Don't automatically hydrate children of lazy sections\n    return !element.hasAttribute('lazy-section');\n  }\n\n  private isInViewport(element: Element): boolean {\n    const rect = element.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= window.innerHeight &&\n      rect.right <= window.innerWidth\n    );\n  }\n}\n\n// Provide custom hydration strategy\n@NgModule({\n  imports: [BrowserModule],\n  providers: [\n    provideClientHydration(),\n    provideHydrationStrategy(MyProgressiveStrategy)\n  ]\n})\nexport class AppModule { }`;\n\n  v19EnhancementsCode = `// Angular 19 Enhanced Partial Hydration Features\n\n// 1. Component-level hydration control\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div>\n      <header>Dashboard</header>\n\n      <!-- Island architecture with selective hydration -->\n      <div class=\"widget\" hydration=\"on\">\n        <app-interactive-chart [data]=\"chartData\"></app-interactive-chart>\n      </div>\n\n      <div class=\"content\" hydration=\"off\">\n        <app-static-article></app-static-article>\n      </div>\n\n      <div class=\"comments\" hydration=\"when-visible\">\n        <app-comments-section></app-comments-section>\n      </div>\n    </div>\n  \\`,\n  hydration: {\n    strategy: 'selective',\n    defaultMode: 'off'\n  }\n})\nexport class DashboardComponent { }\n\n// 2. Integration with signals for fine-grained reactivity\n@Component({\n  selector: 'app-analytics',\n  standalone: true,\n  template: \\`\n    <div>\n      <!-- Only the counter updates, rest stays static -->\n      <h2>Visitors: {{ visitorCount() }}</h2>\n      <div hydration=\"off\">Static analytics visualization</div>\n    </div>\n  \\`,\n  hydration: 'minimal'\n})\nexport class AnalyticsComponent {\n  visitorCount = signal(0);\n  // ...\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Load code examples from files if needed\n    // Currently using inline examples\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Partial Hydration\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Partial Hydration</span>\n      in Angular 19 provides selective rehydration of static server-rendered HTML, enabling fine-grained control over which parts of an application become interactive. This approach significantly improves performance by reducing the JavaScript needed for initial interactivity, prioritizing critical user interfaces, and optimizing for Core Web Vitals metrics.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What is Partial Hydration?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Selective Rehydration</strong>:\n      Enables an app to selectively rehydrate only the interactive parts of server-rendered HTML, leaving static content as-is.\n    </li>\n    <li>\n      <strong>Performance Optimization</strong>:\n      Reduces JavaScript bundle size and execution overhead by not rehydrating static content.\n    </li>\n    <li>\n      <strong>Island Architecture</strong>:\n      Enables \"islands of interactivity\" within static content, focused on specific interactive components.\n    </li>\n    <li>\n      <strong>Progressive Enhancement</strong>:\n      Improves initial load performance while gradually adding interactivity where needed.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Basic Hydration Setup</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"basicHydrationCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Selective Hydration Example</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"partialHydrationCode\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Progressive Hydration Strategy</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"hydrationStrategyCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>New in Angular 19: Enhanced Partial Hydration</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19EnhancementsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Key Enhancements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Component-Level Hydration Control</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Ability to set hydration preferences at the component level through a new API.</li>\n        <li>Options for on, off, conditional, or deferred hydration based on component needs.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration with Signal-Based Components</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Fine-grained reactivity control allowing specific parts of a component to be reactive while others remain static.</li>\n        <li>Optimized hydration for signals-based reactivity with minimal JavaScript overhead.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Hydration Trigger API</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>New triggers like viewport visibility, user interaction, and idle browser time.</li>\n        <li>Programmatic control to hydrate components when needed, rather than automatically.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Island Architecture Support</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>First-class support for island architecture pattern with isolated islands of interactivity.</li>\n        <li>Improved tree-shaking for non-hydrated components to further reduce bundle size.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration with Deferrable Views</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Combination of partial hydration with deferrable views for optimal loading strategies.</li>\n        <li>Ability to selectively hydrate different parts of a deferred block when loaded.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Performance Impact of Partial Hydration</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Metric</th>\n        <th class=\"py-3 px-4 text-left\">Improvement</th>\n        <th class=\"py-3 px-4 text-left\">Typical Impact</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Time to Interactive (TTI)</td>\n        <td class=\"py-3 px-4\">Prioritizes critical UI hydration</td>\n        <td class=\"py-3 px-4\">30-50% faster TTI</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">JavaScript Bundle Size</td>\n        <td class=\"py-3 px-4\">Reduced framework code per component</td>\n        <td class=\"py-3 px-4\">20-40% smaller bundles</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">First Input Delay (FID)</td>\n        <td class=\"py-3 px-4\">Less JavaScript execution on load</td>\n        <td class=\"py-3 px-4\">Improved by 25-45%</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Memory Usage</td>\n        <td class=\"py-3 px-4\">Fewer active Angular components</td>\n        <td class=\"py-3 px-4\">Reduced by up to 35%</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Analyze Your Components for Hydration Needs</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Classify Components</strong>:\n          Categorize components as static (never need hydration), interactive (always need hydration), or conditionally interactive.\n        </li>\n        <li>\n          <strong>Audit Interactivity Requirements</strong>:\n          For each component, determine if it needs immediate interactivity or can be hydrated later.\n        </li>\n        <li>\n          <strong>Consider User Flow</strong>:\n          Prioritize hydration based on the typical user journey through your application.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Design with Island Architecture in Mind</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Isolate Interactive Components</strong>:\n          Design your UI with clear boundaries between interactive and static content.\n        </li>\n        <li>\n          <strong>Minimize Component Dependencies</strong>:\n          Reduce dependencies between hydrated and non-hydrated components to avoid forced hydration.\n        </li>\n        <li>\n          <strong>State Management Boundaries</strong>:\n          Design state management to work with partially hydrated applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Progressive Hydration Strategies</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Critical Path First</strong>:\n          Hydrate components on the critical user path first, deferring others.\n        </li>\n        <li>\n          <strong>Visibility-Based Hydration</strong>:\n          Use viewport-based hydration triggers for below-the-fold content.\n        </li>\n        <li>\n          <strong>Interaction-Based Hydration</strong>:\n          Hydrate some components only when users interact with related UI elements.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Combine with Other Performance Techniques</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use with Deferrable Views</strong>:\n          Combine partial hydration with deferrable views for optimal loading performance.\n        </li>\n        <li>\n          <strong>Signal-Based Reactivity</strong>:\n          Use signal-based components for fine-grained reactivity control in hydrated components.\n        </li>\n        <li>\n          <strong>Lazy Loading</strong>:\n          Implement route-level lazy loading alongside partial hydration for best results.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Test and Measure Performance Impact</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Angular DevTools</strong>:\n          Leverage Angular DevTools' hydration visualization to see which components are hydrated.\n        </li>\n        <li>\n          <strong>Monitor Core Web Vitals</strong>:\n          Track improvements in FID, LCP, and CLS metrics when implementing partial hydration.\n        </li>\n        <li>\n          <strong>Test on Real Devices</strong>:\n          Verify performance improvements on lower-powered devices where the impact will be most noticeable.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Performance Improvements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Faster Initial Interactivity</span>:\n          By hydrating only critical components first, Time to Interactive (TTI) is significantly reduced.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced JavaScript Overhead</span>:\n          Only the necessary JavaScript for interactive components is loaded and executed.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Improved Core Web Vitals</span>:\n          First Input Delay (FID) and Largest Contentful Paint (LCP) metrics typically improve.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced User Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Progressive Enhancement</span>:\n          Content is visible immediately, with interactivity progressively added as needed.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Prioritized Interactivity</span>:\n          Critical interactive elements become responsive faster than non-essential ones.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better Mobile Experience</span>:\n          Particularly beneficial for mobile users with limited processing power and bandwidth.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Resource Efficiency</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Memory Usage</span>:\n          Fewer active Angular components mean less memory consumption by the application.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Lower CPU Utilization</span>:\n          Less change detection and reactive processing for non-hydrated parts of the app.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Battery Efficiency</span>:\n          Less JavaScript execution translates to better battery life on mobile devices.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular 19 Specific Benefits</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Fine-grained Control</span>:\n          Component-level hydration options provide unprecedented control over the hydration process.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Integration with Signals</span>:\n          Signal-based reactivity works perfectly with partial hydration for efficient updates.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Developer Experience</span>:\n          Built-in tooling and APIs make implementing partial hydration more straightforward.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Increased Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Architecture Planning</span>:\n          Requires careful planning of component boundaries and interaction patterns.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Hydration Strategy</span>:\n          Determining which components to hydrate and when adds complexity to application design.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Debugging Challenges</span>:\n          Issues with partially hydrated applications can be more difficult to debug.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Development Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Component Design Constraints</span>:\n          Components must be designed with hydration boundaries in mind, potentially limiting reuse.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">State Management Complexity</span>:\n          Managing state between hydrated and non-hydrated components requires careful planning.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Integration Challenges</span>:\n          Some third-party libraries may not work well with partial hydration strategies.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Pitfalls</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Unexpected Hydration</span>:\n          Component dependencies can trigger unexpected hydration of supposedly static content.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Delayed Interactivity</span>:\n          If hydration triggers are misconfigured, users might experience delays in interactive elements.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Hydration Mismatches</span>:\n          Server-rendered content that doesn't match client expectations can cause hydration errors.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Testing Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Complex Test Scenarios</span>:\n          Testing hydration scenarios requires more sophisticated testing approaches.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Environment Dependencies</span>:\n          Behavior may vary between development and production environments.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">User Experience Variability</span>:\n          Different users may experience different hydration timing based on their devices and behavior.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Server-Side Rendering (SSR)</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Rendering Angular applications on the server before sending HTML to the client.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Partial Hydration</strong>:\n          SSR is the foundation for partial hydration, which builds upon server-rendered content by selectively making it interactive.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          The process of making server-rendered HTML interactive by attaching event listeners and Angular components.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Partial Hydration</strong>:\n          Partial hydration is a more selective approach to hydration, where only specific components are hydrated.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Deferrable Views</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's <code>&#64;defer</code> blocks that enable lazy loading of template fragments.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Partial Hydration</strong>:\n          Can be combined with partial hydration to create highly optimized loading patterns where content is both deferred and selectively hydrated.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal-Based Components</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Components built using Angular's signals system for fine-grained reactivity.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Partial Hydration</strong>:\n          Signal-based components integrate well with partial hydration, enabling efficient reactive updates only where needed.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Island Architecture</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Web development approach where interactive islands exist within a sea of static content.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Partial Hydration</strong>:\n          Partial hydration is the technical implementation that enables island architecture in Angular applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Core Web Vitals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Google's metrics for measuring user experience quality, including LCP, FID, and CLS.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Partial Hydration</strong>:\n          Partial hydration improves Core Web Vitals metrics by reducing JavaScript execution and prioritizing critical interactivity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Progressive Enhancement</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Strategy of starting with essential content and functionality, then enhancing the experience for capable browsers/devices.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Partial Hydration</strong>:\n          Partial hydration is a modern implementation of progressive enhancement, starting with static content and progressively adding interactivity.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-pipe',\n  templateUrl: './pipe.component.html',\n  styleUrls: ['./pipe.component.scss']\n})\nexport class PipeComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n  code_7 = '';\n  code_8 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/pipe/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/pipe/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/pipe/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/pipe/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/pipe/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n      this.http.get('assets/codes/pipe/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n      this.http.get('assets/codes/pipe/notes/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_7 = data);\n\n      this.http.get('assets/codes/pipe/notes/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_8 = data);\n  }\n}\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    pipe\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      Pipes are a way to transform data in templates. You can use built-in pipes or create your own custom pipes to transform data streams.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n\n  <ul class=\"px-10 text-sm\">\n   <li>\n\n    <h5>\n      Built-in Pipes\n    </h5>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>uppercase and lowercase</strong>\n\n        <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n      </span>\n\n      </li>\n      <li>\n        <strong>date</strong>\n\n        <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n      </span>\n\n      </li>\n      <li>\n        <strong>currency</strong>\n\n        <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n      </span>\n\n      </li>\n      <li>\n        <strong>number</strong>\n\n        <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n      </span>\n\n      </li>\n      <li>\n        <strong>async</strong>\n\n        <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n      </span>\n\n      </li>\n    </ol>\n   </li>\n   <li>\n    <h5>\n      Custom Pipes\n    </h5>\n\n    <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n\n        <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span  copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_7\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n      </span>\n\n\n      </span>\n\n   </li>\n   <li>\n    <h5>\n      Chaining Pipes\n    </h5>\n\n    <button (click)=\"code8.hidden = !code8.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code8 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_8\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n      </span>\n\n   </li>\n  </ul>\n\n\n\n  <br>\n\n  <p>\n    By using built-in and custom pipes in Angular, you can transform data in templates and create more powerful and flexible applications.\n  </p>\n</ng-template>\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Simplifies template code</strong>: Pipes allow you to transform data in the template, rather than manipulating it in the component. This can help keep your component code clean and concise.\n    </li>\n    <li>\n      <strong>Reusability</strong>: Once created, pipes can be used across the entire application, making them a great way to share code.\n    </li>\n    <li>\n      <strong>Consistency</strong>: Pipes allow you to apply consistent formatting across your application, ensuring that data is always displayed in the same way.\n    </li>\n    <li>\n      <strong>Easy to use</strong>: Angular pipes are easy to use and can be added to a template with a simple syntax.\n    </li>\n    <li>\n      <strong>Flexibility</strong>: You can use built-in pipes or create your own custom pipes, giving you a high degree of flexibility when it comes to transforming data.\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Performance</strong>: Pipes can be expensive in terms of performance, especially if they are impure pipes. Angular will re-run impure pipes every time change detection runs, which can cause performance issues if you have a lot of data or complex transformations.\n    </li>\n    <li>\n      <strong>Debugging</strong>: Debugging pipes can be difficult, especially if you have complex pipe chains. This can make it harder to track down errors in your application.\n    </li>\n    <li>\n      <strong>Maintenance</strong>: Pipes can become difficult to maintain over time, especially if they are heavily used across the application. Changes to a pipe can have unintended consequences in other parts of the application.\n    </li>\n    <li>\n      <strong>Testing</strong>: Testing pipes can be challenging, especially if you have a lot of different inputs and outputs to test. This can make it harder to ensure that your pipes are functioning correctly.\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Overall, pipes can be a powerful tool in Angular for transforming data in templates, but they should be used with caution. To avoid performance issues and maintenance problems, it's important to limit the number of pipes you use and to test them thoroughly.\n  </p>\n\n  </ng-template>\n\n\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Related topics to Angular pipes:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>PipeTransform Interface</strong>: The PipeTransform interface is a built-in Angular interface that defines the transform() method. Pipes must implement this interface in order to be used in Angular. The transform() method takes a value and returns the transformed value.\n      </li>\n      <li>\n        <strong>Pure and Impure Pipes</strong>: Angular pipes can be either pure or impure. Pure pipes are only executed when the input data changes, whereas impure pipes are executed every time change detection runs, regardless of whether the input data has changed.\n      </li>\n      <li>\n        <strong>Custom Pipes</strong>: You can create your own custom pipes in Angular by creating a new class that implements the PipeTransform interface. Custom pipes can be used in templates just like built-in pipes.\n      </li>\n      <li>\n        <strong>Chaining Pipes</strong>: You can chain pipes together to create more complex transformations. Pipes are applied in the order they are chained, so you can use multiple pipes to transform data in a variety of ways.\n      </li>\n      <li>\n        <strong>Async Pipes</strong>: The async pipe is a special built-in pipe that allows you to handle asynchronous data streams. It automatically subscribes and unsubscribes to the observable, so you don't need to manage subscriptions yourself.\n      </li>\n      <li>\n        <strong>Parameterizing Pipes</strong>: You can pass parameters to pipes by adding them after the pipe name, separated by colons. For example, you can pass a format string to the date pipe to customize the date output.\n      </li>\n      <li>\n        <strong>Pipe Syntax</strong>: Pipes are added to template expressions using the | symbol. The input value is passed to the pipe on the left side of the |, and the pipe operation is performed on the right side of the |.\n      </li>\n      <li>\n        <strong>Built-in Pipes</strong>: Angular comes with a number of built-in pipes that you can use in your application, such as uppercase, lowercase, date, currency, and number.\n      </li>\n      <li>\n        <strong>Localization</strong>: Pipes can be used for localization purposes by using the i18n attribute. This allows you to specify different translations for different languages.\n      </li>\n      <li>\n        <strong>Testing Pipes</strong>: You can write unit tests for your custom pipes in Angular to ensure they are functioning correctly. You can use the TestBed module to create a testing environment for your pipe and test its output.\n      </li>\n    </ol>\n\n\n    <br>\n\n    <p>\n      Overall, pipes are a powerful tool in Angular that allow you to transform data in templates in a variety of ways. By combining built-in and custom pipes, you can create complex transformations and handle asynchronous data streams with ease.\n    </p>\n\n  </ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-reactive-form',\n  templateUrl: './reactive-form.component.html',\n  styleUrls: ['./reactive-form.component.scss']\n})\nexport class ReactiveFormComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n  code_6_1 = '';\n  code_6_2 = '';\n  code_6_3 = '';\n  code_6_4 = '';\n  code_7 = '';\n  code_8 = '';\n  code_9 = '';\n  code_10 = '';\n  code_10_1 = '';\n  code_11 = '';\n  code_12 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/reactive-form/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/reactive-form/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/reactive-form/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/reactive-form/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/reactive-form/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_6_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6_1 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_6_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6_2 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_6_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6_3 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_6_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6_4 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_7 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_8 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_9.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_9 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_10.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_10 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_10_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_10_1 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_11.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_11 = data);\n\n      this.http.get('assets/codes/reactive-form/notes/code_12.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_12 = data);\n  }\n}\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    reactive-form\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      Reactive Forms is a powerful way to build complex and dynamic forms in Angular. Reactive Forms uses the Reactive Programming paradigm to manage the state of the form and provide real-time validation and feedback.    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <!-- <button  (click)=\"selectedTab = 3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button> -->\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <!-- <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div> -->\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Setting up a Reactive Form</strong>\n      <p>\n        To create a Reactive Form in Angular, you'll need to import the ReactiveFormsModule module and create a new instance of FormGroup.\n      </p>\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Binding Form Controls to Inputs</strong>\n      <p>\n        To bind form controls to input fields in your template, you can use the formControlName directive.\n      </p>\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>html</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Form Validation</strong>\n      <p>\n        Reactive Forms provides real-time validation of form inputs, allowing you to provide immediate feedback to the user. You can add validators to your form controls using the Validators class.\n      </p>\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Accessing Form Values</strong>\n      <p>\n        To access the values of a form, you can call the value property of the form instance.\n      </p>\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Dynamic Forms</strong>\n      <p>\n        Reactive Forms allows you to build dynamic forms, where the number and type of form controls can change based on user input.\n      </p>\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Form Arrays</strong>\n      <p>\n        Reactive Forms also supports form arrays, which allow you to group related form controls together.\n      </p>\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n\n\n        <!-- <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button> -->\n\n        <span  copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_6_1\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n\n\n        <!-- <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button> -->\n\n        <span   copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>html</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_6_2\"\n              [languages]=\"['html']\">\n            </code>\n          </pre>\n        </span>\n\n        <!-- <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button> -->\n\n        <span   copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_6_3\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n\n        <!-- <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button> -->\n\n        <span  copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_6_4\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n\n\n\n\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Custom Validators</strong>\n      <p>\n        You can create custom validators for your form controls by creating a new function that returns a ValidatorFn object.\n      </p>\n\n      <button (click)=\"code7.hidden = !code7.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code7 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_7\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>FormBuilder</strong>\n      <p>\n        The FormBuilder class is a more convenient way to create Reactive Forms. It provides a chainable API for building form groups, form arrays, and form controls.\n      </p>\n\n      <button (click)=\"code8.hidden = !code8.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code8 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_8\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Async Validators</strong>\n      <p>\n        Reactive Forms also supports async validators, which allow you to validate form controls asynchronously. Async validators return a `Promise` or an `Observable` that resolves to a validation error or `null`.\n      </p>\n\n      <button (click)=\"code9.hidden = !code9.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code9 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_9\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Nested Forms</strong>\n      <p>\n        You can also nest forms within each other, creating a hierarchical structure of form groups.\n      </p>\n\n      <button (click)=\"code10.hidden = !code10.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code10 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_10\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n\n        <span  copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>html</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_10_1\"\n              [languages]=\"['html']\">\n            </code>\n          </pre>\n        </span>\n\n\n\n      </span>\n\n    </li>\n    <li>\n      <strong>Patching Form Values</strong>\n      <p>\n        To patch a value into a form control or form group, you can use the patchValue method.\n      </p>\n\n      <button (click)=\"code11.hidden = !code11.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code11 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_11\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Setting Form Values</strong>\n      <p>\n        To set the value of a form control or form group, you can use the setValue method.\n      </p>\n\n      <button (click)=\"code12.hidden = !code12.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code12 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_12\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Reactive Forms is a powerful way to build complex and dynamic forms in Angular. By using Reactive Forms, you can provide real-time validation and feedback to users, while also allowing for dynamic and flexible form design.\n  </p>\n</ng-template>\n\n\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Real-time Validation:</strong>\n      <p>\n        Reactive Forms provide real-time validation of user input, which helps to prevent errors and improve the user experience.\n      </p>\n    </li>\n    <li>\n      <strong>Dynamic Forms</strong>\n      <p>\n        Reactive Forms allow you to create complex and dynamic forms that can change based on user input or other external factors.\n      </p>\n    </li>\n    <li>\n      <strong>Explicit Data Flow</strong>\n      <p>\n        Reactive Forms use an explicit data flow model that makes it easy to create complex forms with clear dependencies and relationships.\n      </p>\n    </li>\n    <li>\n      <strong>Unit Testing</strong>\n      <p>\n        Reactive Forms are easy to unit test, since you can create instances of FormControl, FormGroup, and FormArray in your tests and manipulate them directly.\n      </p>\n    </li>\n    <li>\n      <strong>Easy to Manage</strong>\n      <p>\n        Reactive Forms are easy to manage and maintain, since they provide a clear structure and hierarchy of form controls.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <p>\n        Reactive Forms have a steeper learning curve than Template-Driven Forms, and can be more difficult to understand and implement.\n      </p>\n    </li>\n    <li>\n      <strong>Boilerplate Code</strong>\n      <p>\n        Reactive Forms can require more boilerplate code than Template-Driven Forms, which can make them more verbose and difficult to read.\n      </p>\n    </li>\n    <li>\n      <strong>Less Flexible</strong>\n      <p>\n        Reactive Forms are less flexible than Template-Driven Forms, since they require more explicit configuration and do not support two-way data binding.\n      </p>\n    </li>\n    <li>\n      <strong>Complexity</strong>\n      <p>\n        Reactive Forms can add complexity to your application, especially if you are dealing with large and complex forms.\n      </p>\n    </li>\n    <li>\n      <strong>Performance</strong>\n      <p>\n        Reactive Forms can have a negative impact on performance if you are not careful, since they can generate a large number of observables and subscriptions.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Angular Reactive Forms are a powerful tool for creating complex and dynamic forms in Angular, but they can also be more difficult to understand and implement than Template-Driven Forms. When deciding whether to use Reactive Forms, you should consider the complexity of your form, your experience with Angular, and the needs of your users.\n  </p>\n\n  </ng-template>\n\n\n\n  <!-- <ng-template #topicsRef>\n    <p>\n      Some topics related to Observables in Angular:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n    </ol>\n\n    <br>\n\n    <p>\n    </p>\n\n  </ng-template> -->\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-resolver',\n  templateUrl: './resolver.component.html',\n  styleUrls: ['./resolver.component.scss']\n})\nexport class ResolverComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/resolver/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/resolver/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/resolver/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/resolver/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/resolver/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n  }\n}\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    resolver\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Creating a Resolver</strong>\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Using a Resolver in a Route</strong>\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Accessing Resolved Data in a Component</strong>\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Handling Resolver Errors</strong>\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Lazy Loading Modules with Resolvers</strong>\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Angular Resolvers provide a way to pre-fetch data before a component is loaded, which can improve the user experience and reduce the number of network requests. By using Angular Resolvers, you can create more responsive and efficient applications that provide a better user experience.\n  </p>\n</ng-template>\n\n\n\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Pre-fetching Data</strong>\n      <p>\n        Angular Resolvers provide a way to pre-fetch data before a component is loaded, which can improve the performance and reduce the number of network requests.\n      </p>\n    </li>\n    <li>\n      <strong>Improved User Experience</strong>\n      <p>\n        By pre-fetching data with a resolver, you can create a better user experience by reducing the time it takes for a component to load and providing more immediate feedback to the user.\n      </p>\n    </li>\n    <li>\n      <strong>Centralized Data Loading:</strong>\n      <p>\n        Resolvers can be used to centralize the data loading logic for a component or module, which can simplify the code and make it easier to manage.\n      </p>\n    </li>\n    <li>\n      <strong>Supports Asynchronous Operations</strong>\n      <p>\n        Resolvers support asynchronous operations, which means that you can load data from external APIs or other sources without blocking the user interface.\n      </p>\n    </li>\n    <li>\n      <strong>Optimized Data Loading</strong>\n      <p>\n        Resolvers can be used to optimize the loading of data by fetching only the data that is required for a particular component or module.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <p>\n        Resolvers can have a steep learning curve, especially for developers who are new to Angular or to asynchronous programming concepts.\n      </p>\n    </li>\n    <li>\n      <strong>Increased Complexity</strong>\n      <p>\n        Using resolvers can increase the complexity of your code, especially if you need to manage multiple resolvers for a single component or module.\n      </p>\n    </li>\n    <li>\n      <strong>Potential for Over-Optimization</strong>\n      <p>\n        It is possible to over-optimize data loading with resolvers, which can lead to unnecessary complexity or reduced maintainability.\n      </p>\n    </li>\n    <li>\n      <strong>Limited Control:</strong>\n      <p>\n        Resolvers provide limited control over the loading of data, which can make it difficult to handle complex loading scenarios or to integrate with external APIs.\n      </p>\n    </li>\n    <li>\n      <strong>Not Suitable for All Use Cases</strong>\n      <p>\n        Resolvers are not suitable for all use cases, especially if you need to load data on demand or if you need to load data dynamically based on user input.\n      </p>\n    </li>\n  </ol>\n\n\n  <br>\n\n  <p>\n    Angular Resolvers can provide many benefits, including improved performance, a better user experience, centralized data loading, and support for asynchronous operations.\n  </p>\n\n  <br>\n\n  <p>\n    However, they also come with some potential drawbacks, including a steep learning curve, increased complexity, limited control over data loading, and limited suitability for certain use cases. When deciding whether to use Angular Resolvers, it's important to consider the specific needs of your application and weigh the pros and cons carefully.\n  </p>\n\n  </ng-template>\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Some related topics on Angular Resolvers:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Asynchronous Data Loading</strong>\n        <p>\n          Resolvers are a way to pre-fetch data before a component is loaded, which can improve the user experience and reduce the number of network requests. By using asynchronous data loading techniques, you can further improve the performance of your application and create a better user experience.\n        </p>\n      </li>\n      <li>\n        <strong>Resolver Chains</strong>\n        <p>\n          Resolver Chains allow you to chain multiple resolvers together, so that each resolver can pre-fetch different data for the same component. Resolver Chains are a powerful way to create complex and dynamic data loading scenarios, and can be used to optimize the performance of your application.\n        </p>\n      </li>\n      <li>\n        <strong>Resolver Guards</strong>\n        <p>\n          Resolver Guards allow you to control the activation of a route based on the completion of a resolver. Resolver Guards are a way to prevent the loading of a component until all required data has been pre-fetched, which can improve the user experience and reduce the number of network requests.\n        </p>\n      </li>\n      <li>\n        <strong>Resolver Strategies</strong>\n        <p>\n          Resolver Strategies allow you to control the behavior of Angular Resolvers, and specify how they should behave in different scenarios. Resolver Strategies are a way to optimize the performance of your application and create a better user experience for your users.\n        </p>\n      </li>\n    </ol>\n\n\n    <br>\n\n    <p>\n      Angular Resolvers are a powerful way to pre-fetch data before a component is loaded, and can help improve the performance of your application and create a better user experience. By understanding related topics like asynchronous data loading, resolver chains, resolver guards, and resolver strategies, you can further optimize the behavior of your application and create a more responsive and efficient user experience.\n    </p>\n\n  </ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-route-guard',\n  templateUrl: './route-guard.component.html',\n  styleUrls: ['./route-guard.component.scss']\n})\nexport class RouteGuardComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/route-guard/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/route-guard/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/route-guard/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/route-guard/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/route-guard/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n      this.http.get('assets/codes/route-guard/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n  }\n}\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    route guard\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Creating a Route Guard</strong>\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Using a Route Guard in a Route</strong>\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Handling Guarded Navigation</strong>\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Handling Access Denied</strong>\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Handling Route Deactivation</strong>\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Lazy Loading Modules with Route Guards</strong>\n\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Angular Route Guards provide a way to protect routes from unauthorized access, handle route deactivation, and optimize the performance of your application. By using Angular Route Guards, you can create more secure and efficient applications that provide a better user experience.\n  </p>\n</ng-template>\n\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Secure Your Application</strong>\n      <p>\n        Route Guards can be used to secure your application by restricting access to certain routes. This can help protect sensitive data and prevent unauthorized access.\n      </p>\n    </li>\n    <li>\n      <strong>Improve User Experience</strong>\n      <p>\n        By using Route Guards to pre-fetch data or lazy load modules, you can improve the overall user experience of your application. This can help reduce load times and improve performance.\n      </p>\n    </li>\n    <li>\n      <strong>Centralized Management:</strong>\n      <p>\n        Route Guards provide a centralized way to manage route access and data fetching. This can help simplify your code and make it easier to maintain.\n      </p>\n    </li>\n    <li>\n      <strong>Flexibility</strong>\n      <p>\n        Route Guards can be customized to fit the needs of your application. You can create custom Route Guards that check for specific conditions and handle errors in a way that makes sense for your application.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Increased Complexity</strong>\n      <p>\n        Implementing Route Guards can add complexity to your application, especially if you are new to Angular. Route Guards require a good understanding of Angular's routing system and can be difficult to implement correctly.\n      </p>\n    </li>\n    <li>\n      <strong>Performance Overhead</strong>\n      <p>\n        Route Guards can add a small performance overhead to your application, especially if you are using multiple guards on a single route. This is because the guards are executed every time the route is accessed.\n      </p>\n    </li>\n    <li>\n      <strong>Maintenance Overhead</strong>\n      <p>\n        As your application grows, managing multiple Route Guards can become more difficult. This can increase the maintenance overhead of your application and make it harder to add new features.\n      </p>\n    </li>\n    <li>\n      <strong>Debugging Issues</strong>\n      <p>\n        Debugging Route Guards can be challenging, especially if you are dealing with complex conditions or multiple guards. It can be difficult to determine which guard is causing an issue, and debugging can be time-consuming.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Overall, the pros of using Angular Route Guards outweigh the cons, especially if security and user experience are important to your application. By understanding the potential drawbacks and implementing Route Guards correctly, you can create a more secure, efficient, and maintainable application.\n  </p>\n\n  </ng-template>\n\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Some related topics to Angular Route Guards:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>CanActivateChild</strong>\n        <p>\n          This interface is similar to CanActivate, but it is used for guarding child routes. You can use this interface to protect child routes from unauthorized access, and it can be useful for creating more complex route hierarchies.\n        </p>\n      </li>\n      <li>\n        <strong>CanDeactivate</strong>\n        <p>\n          his interface is used to guard against leaving a route. You can use this interface to check if the user has unsaved changes, for example, and ask them to confirm before leaving the route.\n        </p>\n      </li>\n      <li>\n        <strong>Resolve</strong>\n        <p>\n          This interface is used to fetch data before navigating to a route. You can use this interface to ensure that the data is available before displaying the route, which can improve the user experience of your application.\n        </p>\n      </li>\n      <li>\n        <strong>Route Configurations</strong>\n        <p>\n          You can configure routes in many different ways, such as lazy loading, preloading, and redirects. Understanding the different options for configuring routes can help you create a more efficient and maintainable application.\n        </p>\n      </li>\n      <li>\n        <strong>Route Navigation</strong>\n        <p>\n          The Angular Router provides many options for navigating between routes, such as using links, programmatic navigation, and navigating with parameters. Understanding how to navigate between routes is essential for creating a seamless user experience.\n        </p>\n      </li>\n      <li>\n        <strong>Authentication and Authorization</strong>\n        <p>\n          Route Guards can be used for implementing authentication and authorization in your application. By protecting routes with Route Guards, you can ensure that only authorized users can access certain parts of your application.\n        </p>\n      </li>\n      <li>\n        <strong>Performance Optimization</strong>\n        <p>\n          Route Guards can also be used for optimizing the performance of your application. By using Route Guards to lazy load modules, for example, you can reduce the initial load time of your application and improve the overall performance.\n        </p>\n      </li>\n    </ol>\n\n    <br>\n\n    <p>\n      These topics are all related to Angular Route Guards and can help you create more secure, efficient, and maintainable applications. By understanding these topics and how they relate to Angular Route Guards, you can create better applications and provide a better user experience for your users.\n    </p>\n\n  </ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-router-outlet',\n  templateUrl: './router-outlet.component.html',\n  styleUrls: ['./router-outlet.component.scss']\n})\nexport class RouterOutletComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_2_1 = '';\n  code_3 = '';\n  code_3_1 = '';\n  code_4 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/router-outlet/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/router-outlet/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n\n    this.http.get('assets/codes/router-outlet/notes/code_2_1.txt', { responseType: 'text' })\n    .pipe(takeUntil(this.toUnsubscribe$))\n    .subscribe(data => this.code_2_1 = data);\n\n    this.http.get('assets/codes/router-outlet/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n\n    this.http.get('assets/codes/router-outlet/notes/code_3_1.txt', { responseType: 'text' })\n    .pipe(takeUntil(this.toUnsubscribe$))\n    .subscribe(data => this.code_3_1 = data);\n\n    this.http.get('assets/codes/router-outlet/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n\n  }\n}\n\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    router outlet\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Basic Usage</strong>\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>html</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Named Outlets</strong>\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>html</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['html']\">\n          </code>\n        </pre>\n\n        <!-- <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button> -->\n\n        <span  copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_2_1\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n\n\n      </span>\n\n    </li>\n    <li>\n      <strong>Route Animations</strong>\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n\n        <!-- <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button> -->\n\n        <span  copyToClipboard>\n          <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n            <span>typescript</span>\n            <span class=\"copy-button-wrapper bg-gray-700\"></span>\n          </div>\n\n          <pre>\n            <code\n              [highlight]=\"code_3_1\"\n              [languages]=\"['typescript']\">\n            </code>\n          </pre>\n        </span>\n\n      </span>\n\n    </li>\n    <li>\n      <strong>Router Configuration</strong>\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n  </p>\n</ng-template>\n\n\n\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Flexible Routing</strong>\n      <p>\n        Angular Router Outlet allows you to create complex routing structures with multiple named outlets, nested outlets, and componentless routes.\n      </p>\n    </li>\n    <li>\n      <strong>Route Animations</strong>\n      <p>\n        Angular Router Outlet supports route animations, which allows you to animate the transition between different routes in your application.\n      </p>\n    </li>\n    <li>\n      <strong>Dynamic Configuration</strong>\n      <p>\n        Angular Router Outlet allows you to dynamically configure your routes at runtime, allowing you to create more flexible and dynamic applications.\n      </p>\n    </li>\n    <li>\n      <strong>Route Parameters</strong>\n      <p>\n        Angular Router Outlet allows you to pass data to components via the URL using route parameters.\n      </p>\n    </li>\n    <li>\n      <strong>Route Guards</strong>\n      <p>\n        Angular Router Outlet allows you to add security and data validation to your routes using route guards.\n      </p>\n    </li>\n    <li>\n      <strong>Route Resolvers</strong>\n      <p>\n        Angular Router Outlet allows you to pre-fetch data for a component before it is rendered using route resolvers, improving the performance of your application.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Complexity</strong>\n      <p>\n        Angular Router Outlet can become complex to use when creating advanced routing structures.\n      </p>\n    </li>\n    <li>\n      <strong>Learning Curve</strong>\n      <p>\n        Angular Router Outlet has a learning curve, especially for beginners who are new to Angular.\n      </p>\n    </li>\n    <li>\n      <strong>Performance Overhead</strong>\n      <p>\n        Angular Router Outlet has some performance overhead due to its dynamic nature and the fact that it needs to maintain a stateful routing configuration.\n      </p>\n    </li>\n    <li>\n      <strong>Debugging</strong>\n      <p>\n        Debugging complex routing structures can be difficult and time-consuming.\n      </p>\n    </li>\n  </ol>\n\n\n  <br>\n\n  <p>\n    Overall, Angular Router Outlet is a powerful tool for creating complex routing structures and dynamic applications, but it can also add complexity and overhead to your application. It's important to carefully consider your routing requirements and design your routing structures accordingly.\n  </p>\n\n  </ng-template>\n\n\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Some related topics to Angular Router Outlet:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Nested Router Outlets</strong>\n        <p>\n          You can use multiple router-outlet elements in a single template to create nested routing structures. This allows you to define multiple named outlets that can be used to load different components depending on the current route.\n        </p>\n      </li>\n      <li>\n        <strong>Route Animations</strong>\n        <p>\n          Angular Router supports route animations, which allows you to animate the transition between different routes in your application. You can define animations using the @angular/animations package and apply them to your routes using the [@routeAnimation] directive.\n        </p>\n      </li>\n      <li>\n        <strong>Componentless Routes</strong>\n        <p>\n          Componentless routes allow you to define routes that have no associated component. This can be useful for creating complex nested routes where only the child routes have associated components.\n        </p>\n      </li>\n      <li>\n        <strong>Route Configuration</strong>\n        <p>\n          Angular Router allows you to configure your routes using a combination of static and dynamic configuration. Static configuration involves defining your routes in code, while dynamic configuration allows you to load routes dynamically at runtime.\n        </p>\n      </li>\n      <li>\n        <strong>Route Parameters:</strong>\n        <p>\n          Route parameters allow you to pass data to a component via the URL. You can define route parameters by adding a colon (:) before the parameter name in the route path. You can then access the parameter value via the ActivatedRoute service.\n        </p>\n      </li>\n      <li>\n        <strong>Route Guards</strong>\n        <p>\n          Route guards allow you to add security and data validation to your routes. You can use route guards to prevent unauthorized access to certain routes, validate user input, or perform other tasks before allowing the user to access a particular route.\n        </p>\n      </li>\n      <li>\n        <strong>Route Resolvers</strong>\n        <p>\n          Route resolvers allow you to pre-fetch data for a component before it is rendered. This can help to improve the performance of your application by reducing the time it takes to load data. You can define route resolvers by adding a resolve property to your route configuration.\n        </p>\n      </li>\n    </ol>\n\n\n    <br>\n\n    <p>\n      These are some related topics that are often used in conjunction with Angular Router Outlet. By understanding these topics, you can create more complex and dynamic applications using Angular.\n    </p>\n\n  </ng-template>\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-router',\n  templateUrl: './router.component.html',\n  styleUrls: ['./router.component.scss']\n})\nexport class RouterComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n  code_7 = '';\n  code_8 = '';\n  code_9 = '';\n  code_10 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/router/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/router/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/router/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/router/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n    this.http.get('assets/codes/router/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n      this.http.get('assets/codes/router/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n      this.http.get('assets/codes/router/notes/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_7 = data);\n\n      this.http.get('assets/codes/router/notes/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_8 = data);\n\n      this.http.get('assets/codes/router/notes/code_9.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_9 = data);\n\n      this.http.get('assets/codes/router/notes/code_10.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_10 = data);\n  }\n}\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    router\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Basic Routing</strong>\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Route Parameters</strong>\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Route Guards</strong>\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Lazy Loading</strong>\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Child Routes</strong>\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      <strong>Route Redirects</strong>\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Route Resolvers</strong>\n\n      <button (click)=\"code7.hidden = !code7.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code7 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_7\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Route Events</strong>\n\n      <button (click)=\"code8.hidden = !code8.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code8 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_8\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Wildcard Routes</strong>\n\n      <button (click)=\"code9.hidden = !code9.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code9 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_9\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Location Strategy</strong>\n\n       <button (click)=\"code10.hidden = !code10.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code10 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_10\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    These are some common examples of Angular Router configurations. You can use them as a reference to create your own routing configuration according to your application requirements.\n  </p>\n</ng-template>\n\n\n\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Modular design</strong>\n      <p>\n        Angular Router allows you to organize your application into multiple, self-contained modules. Each module can have its own set of routes and can be loaded lazily, resulting in a more modular and efficient application.\n      </p>\n    </li>\n    <li>\n      <strong>Support for nested routes</strong>\n      <p>\n        Angular Router supports nested routes, allowing you to organize your application into a hierarchy of routes that match the structure of your application.\n      </p>\n    </li>\n    <li>\n      <strong>Support for route parameters</strong>\n      <p>\n        Angular Router supports route parameters, which allows you to pass data between different components via the URL.\n      </p>\n    </li>\n    <li>\n      <strong>Support for route guards</strong>\n      <p>\n        Angular Router allows you to define route guards that can be used to protect routes from unauthorized access, validate user input, or perform other tasks before allowing the user to access a particular route.\n      </p>\n    </li>\n    <li>\n      <strong>Support for route resolvers</strong>\n      <p>\n        Angular Router allows you to define route resolvers that can be used to fetch data for a route before the component is rendered.\n      </p>\n    </li>\n    <li>\n      <strong>Support for route events</strong>\n      <p>\n        Angular Router provides a set of events that can be used to monitor the navigation lifecycle of your application, allowing you to respond to changes in the application state.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Complexity</strong>\n      <p>\n        Angular Router can be complex, especially when you are first learning how to use it. There are many different concepts to understand, such as lazy loading, route guards, and route resolvers.\n      </p>\n    </li>\n    <li>\n      <strong>Performance</strong>\n      <p>\n        Lazy loading can improve the performance of your application by reducing the amount of code that needs to be loaded upfront. However, if you use lazy loading too extensively, it can lead to slower load times and increased complexity.\n      </p>\n    </li>\n    <li>\n      <strong>Debugging</strong>\n      <p>\n        When using Angular Router, it can be difficult to debug routing issues, especially if you have a large number of routes and route guards.\n      </p>\n    </li>\n  </ol>\n\n\n  <br>\n\n  <p>\n    Overall, Angular Router provides a powerful set of tools for building complex, modular applications. While it can be complex and difficult to learn, it can ultimately lead to more maintainable and scalable applications.\n  </p>\n\n  </ng-template>\n\n\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Some related topics to Angular Router:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Lazy Loading</strong>\n        <p>\n          Angular Router supports lazy loading, which allows you to load parts of your application on-demand, resulting in a faster initial load time and improved performance. You can use the loadChildren property to specify which module to load when a specific route is accessed.\n        </p>\n      </li>\n      <li>\n        <strong>Route Parameters</strong>\n        <p>\n          Route parameters allow you to pass data to a component via the URL. You can define route parameters by adding a colon (:) before the parameter name in the route path. You can then access the parameter value via the ActivatedRoute service.\n        </p>\n      </li>\n      <li>\n        <strong>Route Guards</strong>\n        <p>\n          Route guards allow you to add security and data validation to your routes. You can use route guards to prevent unauthorized access to certain routes, validate user input, or perform other tasks before allowing the user to access a particular route.\n        </p>\n      </li>\n      <li>\n        <strong>Route Resolvers</strong>\n        <p>\n          Route resolvers allow you to pre-fetch data for a component before it is rendered. This can help to improve the performance of your application by reducing the time it takes to load data. You can define route resolvers by adding a resolve property to your route configuration.\n        </p>\n      </li>\n      <li>\n        <strong>Route Events</strong>\n        <p>\n          Angular Router provides a set of events that you can use to monitor the navigation lifecycle of your application. You can use these events to perform tasks such as showing a loading indicator while a route is loading, or tracking user behavior.\n        </p>\n      </li>\n      <li>\n        <strong>Location Strategy</strong>\n        <p>\n          The Angular Router provides two types of location strategies: PathLocationStrategy and HashLocationStrategy. The former uses the HTML5 history API to manipulate the URL, while the latter uses the hash symbol (#) to manage navigation. You can specify the location strategy to use in your application using the RouterModule.forRoot() method.\n        </p>\n      </li>\n      <li>\n        <strong>Route Animations</strong>\n        <p>\n          Angular Router supports route animations, which allows you to animate the transition between different routes in your application. You can define animations using the @angular/animations package and apply them to your routes using the [@routeAnimation] directive.\n        </p>\n      </li>\n    </ol>\n\n    <br>\n\n    <p>\n      These are some related topics that are often used in conjunction with Angular Router. By understanding these topics, you can create more complex and dynamic applications using Angular.\n    </p>\n\n  </ng-template>\n\n\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-routing-component',\n  templateUrl: './routing-component.component.html',\n  styleUrls: ['./routing-component.component.scss']\n})\nexport class RoutingComponentComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/routing-component/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/routing-component/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/routing-component/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/routing-component/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n  }\n}\n\n\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    routing component\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Basic Usage</strong>\n\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Route Parameters</strong>\n\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Query Parameters</strong>\n\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      <strong>Route Configuration</strong>\n\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n\n  </p>\n</ng-template>\n\n\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Flexible Routing</strong>\n      <p>\n        Angular Routing Component provides a powerful and flexible way to define routes and map them to components in your application. This allows you to create complex routing structures with nested routes, named outlets, and more.\n      </p>\n    </li>\n    <li>\n      <strong>Modularity</strong>\n      <p>\n        Angular Routing Component allows you to separate your application into multiple modules, each with its own set of routes. This can help to improve the maintainability of your codebase and make it easier to reason about.\n      </p>\n    </li>\n    <li>\n      <strong>Lazy Loading</strong>\n      <p>\n        Angular Routing Component supports lazy loading, which allows you to load modules and components on demand, improving the performance of your application.\n      </p>\n    </li>\n    <li>\n      <strong>Route Guards</strong>\n      <p>\n        Angular Routing Component provides a way to add security and data validation to your routes using route guards. This can help to prevent unauthorized access to certain parts of your application and ensure that the data being passed to your components is valid.\n      </p>\n    </li>\n    <li>\n      <strong>Route Resolvers</strong>\n      <p>\n        Angular Routing Component allows you to pre-fetch data for a component before it is rendered using route resolvers. This can help to improve the performance of your application by reducing the amount of time it takes to load data.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <p>\n        Angular Routing Component can have a steep learning curve, especially for beginners who are new to Angular. The syntax for defining routes and navigating between them can be complex and take some time to master.\n      </p>\n    </li>\n    <li>\n      <strong>Debugging</strong>\n      <p>\n        Debugging routing issues can be difficult and time-consuming, especially when dealing with complex routing structures and route guards.\n      </p>\n    </li>\n    <li>\n      <strong>Performance Overhead</strong>\n      <p>\n        Angular Routing Component has some performance overhead due to its dynamic nature and the fact that it needs to maintain a stateful routing configuration.\n      </p>\n    </li>\n    <li>\n      <strong>Configuration Complexity</strong>\n      <p>\n        As the routing structure of your application becomes more complex, the configuration of Angular Routing Component can become more complex and harder to maintain.\n      </p>\n    </li>\n  </ol>\n\n\n  <br>\n\n  <p>\n    Overall, Angular Routing Component is a powerful tool for creating complex routing structures and dynamic applications, but it can also add complexity and overhead to your application. It's important to carefully consider your routing requirements and design your routing structures accordingly.\n  </p>\n\n  </ng-template>\n\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Some related topics to Angular Routing Component:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Angular Router Configuration</strong>\n        <p>\n          Angular Router Component is a part of Angular Router module, and the configuration of the router is done in the app-routing.module.ts file. The configuration defines the available routes in the application and maps them to the appropriate components.\n        </p>\n      </li>\n      <li>\n        <strong>Route Parameters</strong>\n        <p>\n          Route parameters are placeholders that capture the values from the URL and pass them to the component. The parameter values are accessed using the ActivatedRoute service.\n        </p>\n      </li>\n      <li>\n        <strong>Query Parameters</strong>\n        <p>\n          Query parameters are used to pass data to a component through the URL. They are usually appended to the URL as key-value pairs.\n        </p>\n      </li>\n      <li>\n        <strong>Route Guards</strong>\n        <p>\n          Route guards are used to protect routes in Angular applications. They can be used to prevent unauthorized access, redirect the user to a login page, or perform any other custom logic.\n        </p>\n      </li>\n      <li>\n        <strong>Route Resolvers</strong>\n        <p>\n          Route resolvers are used to prefetch data before the route is activated. They are used to avoid the \"flicker\" effect that can occur when data is loaded after the component is rendered.\n        </p>\n      </li>\n      <li>\n        <strong>Lazy Loading</strong>\n        <p>\n          Lazy loading is a technique that is used to load modules and components on demand, only when they are needed. This can improve the performance of the application and reduce the initial load time.\n        </p>\n      </li>\n      <li>\n        <strong>Angular Router Events</strong>\n        <p>\n          Angular Router Component emits several events that can be used to perform custom logic. For example, the NavigationStart event is emitted when a navigation starts, and the NavigationEnd event is emitted when the navigation ends.\n        </p>\n      </li>\n    </ol>\n\n\n    <br>\n\n    <p>\n      These are some related topics that are often used in conjunction with Angular Router Component. By understanding these topics, you can create more complex and dynamic applications using Angular.\n    </p>\n\n  </ng-template>\n","import { Component, ViewChild, TemplateRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\n\n@Component({\n  selector: 'app-signal-components',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './signal-components.component.html',\n  styleUrls: ['./signal-components.component.scss']\n})\nexport class SignalComponentsComponent {\n  selectedTab = 1;\n\n  // Template references for the tabs\n  @ViewChild('notesRef') notesRef!: TemplateRef<any>;\n  @ViewChild('bestRef') bestRef!: TemplateRef<any>;\n  @ViewChild('prosConsRef') prosConsRef!: TemplateRef<any>;\n  @ViewChild('topicsRef') topicsRef!: TemplateRef<any>;\n\n  // Code samples for signal components\n  basicSignalComponentCode = `import { Component, input, output, model } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-counter',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div>\n      <h2>Counter: {{ count() }}</h2>\n      <button (click)=\"increment()\">Increment</button>\n      <button (click)=\"decrement()\">Decrement</button>\n    </div>\n  \\`\n})\nexport class CounterComponent {\n  // Input signal with default value\n  max = input(100);\n\n  // Required input signal\n  min = input.required<number>();\n\n  // Model signal for two-way binding\n  count = model(0);\n\n  // Output signal for events\n  countChanged = output<number>();\n\n  increment() {\n    if (this.count() < this.max()) {\n      this.count.update(value => value + 1);\n      this.countChanged.emit(this.count());\n    }\n  }\n\n  decrement() {\n    if (this.count() > this.min()) {\n      this.count.update(value => value - 1);\n      this.countChanged.emit(this.count());\n    }\n  }\n}`;\n\n  signalComponentFeaturesCode = `import { Component, input, output, model, viewChild, viewChildren, computed, effect, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ItemService } from './item.service';\n\n@Component({\n  selector: 'app-item-list',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div>\n      <h2>Items ({{ filteredItems().length }} of {{ items().length }})</h2>\n\n      <label>\n        Filter by category:\n        <select #categoryFilter (change)=\"category.set(categoryFilter.value)\">\n          <option value=\"\">All</option>\n          <option *ngFor=\"let cat of categories()\" [value]=\"cat\">{{ cat }}</option>\n        </select>\n      </label>\n\n      <ul>\n        <li *ngFor=\"let item of filteredItems()\" #itemRef>\n          {{ item.name }} - {{ item.category }}\n        </li>\n      </ul>\n\n      <p>Total value: {{ totalValue() }}</p>\n    </div>\n  \\`\n})\nexport class ItemListComponent {\n  // Inject service\n  private itemService = inject(ItemService);\n\n  // Input with transform\n  items = input<Item[]>([], {\n    transform: (items: Item[]) => items.sort((a, b) => a.name.localeCompare(b.name))\n  });\n\n  // View child as signal\n  categorySelect = viewChild<HTMLSelectElement>('categoryFilter');\n\n  // View children as signal\n  itemElements = viewChildren<HTMLLIElement>('itemRef');\n\n  // Local signal state\n  category = signal('');\n\n  // Computed values\n  categories = computed(() => {\n    const uniqueCategories = new Set<string>();\n    this.items().forEach(item => uniqueCategories.add(item.category));\n    return Array.from(uniqueCategories).sort();\n  });\n\n  filteredItems = computed(() => {\n    const currentCategory = this.category();\n    if (!currentCategory) return this.items();\n    return this.items().filter(item => item.category === currentCategory);\n  });\n\n  totalValue = computed(() => {\n    return this.filteredItems().reduce((sum, item) => sum + item.price, 0);\n  });\n\n  constructor() {\n    // Effect for side effects (e.g., analytics)\n    effect(() => {\n      this.itemService.logCategoryChange(this.category());\n    });\n\n    // Effect with cleanup\n    effect((onCleanup) => {\n      const handler = () => this.category.set('');\n      window.addEventListener('reset-filters', handler);\n\n      // Return cleanup function\n      onCleanup(() => {\n        window.removeEventListener('reset-filters', handler);\n      });\n    });\n  }\n}\n\ninterface Item {\n  name: string;\n  category: string;\n  price: number;\n}`;\n\n  signalComponentPerformanceCode = `import { Component, input, computed, untracked, InputSignal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-performance-example',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div>\n      <h2>Performance Optimized Component</h2>\n      <p>Active items: {{ activeItemCount() }}</p>\n      <p>Rendering {{ visibleItems().length }} of {{ untracked(items).length }} items</p>\n\n      <ul>\n        <li *ngFor=\"let item of visibleItems()\">\n          {{ item.name }} - {{ item.status }}\n        </li>\n      </ul>\n    </div>\n  \\`\n})\nexport class PerformanceExampleComponent {\n  // Input signals\n  items = input<Item[]>([]);\n  filterActive = input(true);\n\n  // Memoize expensive operations\n  private itemsMap = computed(() => {\n    console.log('Building items map - expensive operation');\n    const map = new Map<string, Item>();\n    this.items().forEach(item => map.set(item.id, item));\n    return map;\n  });\n\n  // Computed that depends on a subset of signals\n  activeItemCount = computed(() => {\n    // Using untracked to avoid dependency on the entire items array\n    // when we only care about the count of active items\n    return untracked(this.items).filter(item => item.status === 'active').length;\n  });\n\n  // Optimized computation that tracks only relevant dependencies\n  visibleItems = computed(() => {\n    const showActive = this.filterActive();\n\n    // Only re-compute when filterActive changes or items relevantly change\n    if (showActive) {\n      return this.items().filter(item => item.status === 'active');\n    } else {\n      return this.items();\n    }\n  });\n\n  // Getting a single item without tracking the entire items array\n  getItem(id: string): Item | undefined {\n    return this.itemsMap().get(id);\n  }\n}\n\ninterface Item {\n  id: string;\n  name: string;\n  status: 'active' | 'inactive';\n}`;\n\n  v19EnhancementsCode = `import { Component, input, output, model, viewChild, computed, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Angular 19 component (fully reactive, standalone by default)\n@Component({\n  selector: 'app-v19-counter',\n  // Standalone is now the default in Angular 19\n  // No need for imports array with automatic module detection\n  template: \\`\n    <div>\n      <h2>Enhanced Counter: {{ count() }}</h2>\n      <p>Squared value: {{ squared() }}</p>\n\n      <div class=\"controls\">\n        <button (click)=\"increment()\">Increment</button>\n        <button (click)=\"reset()\">Reset to Initial</button>\n      </div>\n\n      <div class=\"config\" *ngIf=\"showConfig()\">\n        <label>\n          Initial Value:\n          <input type=\"number\" [value]=\"initialValue()\"\n                (input)=\"setInitialValue($event)\">\n        </label>\n        <button (click)=\"applyInitialValue()\">Apply</button>\n      </div>\n\n      <button (click)=\"toggleConfig()\">\n        {{ showConfig() ? 'Hide' : 'Show' }} Config\n      </button>\n    </div>\n  \\`\n})\nexport class V19CounterComponent {\n  // Input with validation and transform\n  initialValue = input(0, {\n    // Additional type checking with alias support\n    alias: 'startValue',\n    transform: (value: number) => {\n      // Validate and transform input\n      return Math.max(0, Math.round(value));\n    }\n  });\n\n  // Private signals\n  #count = signal(this.initialValue());\n  #showConfig = signal(false);\n\n  // Public API (readonly for template)\n  count = this.#count.asReadonly();\n  showConfig = this.#showConfig.asReadonly();\n\n  // Two-way binding model\n  theme = model<'light' | 'dark'>('light');\n\n  // Computed value\n  squared = computed(() => this.count() * this.count());\n\n  // ViewChild as signal\n  counterDisplay = viewChild<HTMLHeadingElement>('counterDisplay');\n\n  // Methods\n  increment() {\n    this.#count.update(c => c + 1);\n  }\n\n  reset() {\n    this.#count.set(this.initialValue());\n  }\n\n  toggleConfig() {\n    this.#showConfig.update(show => !show);\n  }\n\n  setInitialValue(event: Event) {\n    const value = Number((event.target as HTMLInputElement).value);\n    this.initialValue.set(value);\n  }\n\n  applyInitialValue() {\n    this.reset();\n  }\n}`;\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Signal-Based Components\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Signal-Based Components</span>\n      in Angular 19 introduce a fully reactive programming model for building web interfaces. This new component architecture leverages signals for fine-grained reactivity, offering improved performance, simplified two-way binding, and better developer experience through a streamlined API surface.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What are Signal-Based Components?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Reactive Programming Model</strong>:\n      Components built using Angular's signals system, offering fine-grained reactivity and improved change detection.\n    </li>\n    <li>\n      <strong>Simplified API</strong>:\n      Streamlined API for inputs, outputs, models (two-way binding), and view queries.\n    </li>\n    <li>\n      <strong>Improved Performance</strong>:\n      Better performance through fine-grained reactivity and more efficient change detection.\n    </li>\n    <li>\n      <strong>Enhanced Developer Experience</strong>:\n      More intuitive programming model with a functional approach to reactivity.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Basic Signal Component Example</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"basicSignalComponentCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Advanced Signal Component Features</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"signalComponentFeaturesCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Performance Optimizations with Signal Components</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"signalComponentPerformanceCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Signal Component System</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19EnhancementsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Key Features of Signal-Based Components in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Signal-Based Inputs and Outputs</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Input signals with default values: <code>maxValue = input(100)</code></li>\n        <li>Required inputs: <code>userId = input.required&lt;string&gt;()</code></li>\n        <li>Input transforms for validation and conversion</li>\n        <li>Output signals for events: <code>countChanged = output&lt;number&gt;()</code></li>\n      </ul>\n    </li>\n    <li>\n      <strong>Model Signal for Two-Way Binding</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Simplified two-way binding with model signals: <code>count = model(0)</code></li>\n        <li>Use with <code>[(property)]</code> in templates for cleaner binding syntax</li>\n        <li>Automatic update propagation both ways</li>\n      </ul>\n    </li>\n    <li>\n      <strong>View Queries as Signals</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>ViewChild as signal: <code>element = viewChild('elementRef')</code></li>\n        <li>ViewChildren as signal: <code>items = viewChildren('itemRef')</code></li>\n        <li>Reactive updates when queries change</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Computed Values and Effects</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Computed signals for derived state: <code>doubled = computed(() => count() * 2)</code></li>\n        <li>Effects for side effects: <code>effect(() => {{ '{' }} ... {{ '}' }})</code></li>\n        <li>Automatic cleanup of effects when component is destroyed</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Dependency Injection Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Simplified DI with inject function: <code>service = inject(Service)</code></li>\n        <li>No more constructor parameter injection needed</li>\n        <li>Better tree-shaking and improved bundle size</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Performance Comparison: Signal Components vs NgOnChanges</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Aspect</th>\n        <th class=\"py-3 px-4 text-left\">Signal Components</th>\n        <th class=\"py-3 px-4 text-left\">Traditional Components</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Change Detection</td>\n        <td class=\"py-3 px-4\">Fine-grained, only affected signals</td>\n        <td class=\"py-3 px-4\">Component-level, often causes unnecessary checks</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Component Reactivity</td>\n        <td class=\"py-3 px-4\">Automatic, based on signal dependencies</td>\n        <td class=\"py-3 px-4\">Manual, requires ngOnChanges handling</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Memory Usage</td>\n        <td class=\"py-3 px-4\">Lower, no change detection tree traversal</td>\n        <td class=\"py-3 px-4\">Higher, especially in large component trees</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Bundle Size</td>\n        <td class=\"py-3 px-4\">Smaller due to tree-shaking improvements</td>\n        <td class=\"py-3 px-4\">Larger, especially with decorator metadata</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Design with Signals in Mind</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Signal-First Architecture</strong>:\n          Start by defining your component's state as signals, and build from there.\n        </li>\n        <li>\n          <strong>Minimize Stateful Services</strong>:\n          Prefer injecting stateless services and managing state with signals in components.\n        </li>\n        <li>\n          <strong>Single Source of Truth</strong>:\n          Keep related state in one signal rather than spreading it across multiple signals.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Computed Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Keep Computations Pure</strong>:\n          Avoid side effects in computed signals; use effects for side effects instead.\n        </li>\n        <li>\n          <strong>Granular Computations</strong>:\n          Break complex computations into smaller, reusable computed signals.\n        </li>\n        <li>\n          <strong>Use Untracked When Needed</strong>:\n          Use <code>untracked()</code> to prevent unnecessary dependencies in computed signals.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Manage Effects Carefully</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Return Cleanup Functions</strong>:\n          Always return cleanup functions from effects when subscribing to external resources.\n        </li>\n        <li>\n          <strong>Avoid Complex Logic</strong>:\n          Keep effects focused on side effects, not complex state transformations.\n        </li>\n        <li>\n          <strong>Batch Updates</strong>:\n          Group signal updates to minimize the number of effect executions.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Input/Output Best Practices</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Default Values</strong>:\n          Provide sensible defaults for input signals when possible.\n        </li>\n        <li>\n          <strong>Consider Required Inputs</strong>:\n          Use <code>input.required()</code> for truly required inputs to catch missing inputs early.\n        </li>\n        <li>\n          <strong>Transform Inputs When Needed</strong>:\n          Use input transform functions to validate or convert incoming values.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Component Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Models for Two-Way Binding</strong>:\n          Leverage model signals for clean two-way binding between components.\n        </li>\n        <li>\n          <strong>Connect with Zoneless Applications</strong>:\n          Signal components work perfectly with zoneless applications for maximum performance.\n        </li>\n        <li>\n          <strong>Combine with Partial Hydration</strong>:\n          Use signal components with partial hydration for optimal SSR performance.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Performance Improvements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Fine-Grained Reactivity</span>:\n          Only the parts of the UI that depend on changed signals are updated, reducing unnecessary work.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Simplified Change Detection</span>:\n          No need for OnPush strategy or managing change detection manually.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Smaller Bundle Size</span>:\n          Better tree-shaking and less decorator metadata lead to smaller application bundles.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Intuitive API</span>:\n          Clear, functional API for inputs, outputs, computed values, and side effects.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Improved Type Safety</span>:\n          Better TypeScript integration with less reliance on string literals and generics.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Clear Data Flow</span>:\n          Signal dependencies make it easier to understand and trace data flow in components.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Modern Reactivity Model</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Automatic Dependency Tracking</span>:\n          Computed signals and effects automatically track their dependencies.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Simplified Two-Way Binding</span>:\n          Model signals make two-way binding cleaner and more intuitive.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reactive View Queries</span>:\n          ViewChild and ViewChildren as signals provide reactive access to DOM elements.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration with Angular 19 Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Zoneless Applications</span>:\n          Perfect for use in zoneless applications for ultimate performance.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Partial Hydration</span>:\n          Works seamlessly with partial hydration for optimized SSR applications.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Control Flow Integration</span>:\n          Clean integration with built-in control flow syntax for purely declarative templates.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">New Programming Model</span>:\n          Requires learning and adapting to a different way of building components.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reactive Thinking</span>:\n          Developers need to think reactively, which may be challenging for some.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Migration Effort</span>:\n          Converting existing components to the signal-based approach requires effort.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Pitfalls</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Signal Overuse</span>:\n          Creating too many fine-grained signals can lead to complex component logic.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Effect Side Effects</span>:\n          Improper use of effects can lead to infinite update loops or other unexpected behavior.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Mental Model Shift</span>:\n          Moving between traditional and signal-based components in the same application can be confusing.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Ecosystem Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Library Support</span>:\n          Some third-party libraries may not yet be optimized for signal-based components.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Tools and Testing</span>:\n          Testing tools and methodologies may need updates to work optimally with signal components.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Documentation and Resources</span>:\n          Fewer examples and resources compared to traditional components (though rapidly improving).\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Transition Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Mixed Component Types</span>:\n          Managing applications with both traditional and signal-based components can be challenging.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Training and Adoption</span>:\n          Teams need time and resources to adopt and become proficient with the new approach.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Legacy Integration</span>:\n          Integrating with legacy code or libraries optimized for the traditional component model.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's reactive primitives for state management introduced in Angular 16+.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signal Components</strong>:\n          Signal Components are built on and extend the basic signals system, providing a complete component model.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular applications that run without Zone.js, using explicit change detection.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signal Components</strong>:\n          Signal Components provide the ideal programming model for zoneless applications, as they handle their own change detection.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Reactive Programming</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Programming paradigm focused on data streams and propagation of change.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signal Components</strong>:\n          Signal Components implement reactive programming principles within the Angular component model.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Technique to selectively hydrate server-rendered components based on need.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signal Components</strong>:\n          Signal Components work well with partial hydration for fine-grained control over which parts of an app become interactive.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Two-Way Binding</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Data binding that works in both directions between parent and child components.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signal Components</strong>:\n          Signal Components introduce model signals, a cleaner approach to two-way binding with <code>[(property)]</code> syntax.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>RxJS and Observables</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Library for reactive programming using Observables to compose asynchronous code.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signal Components</strong>:\n          While different in API, both signals and RxJS provide reactive programming models, and can be used together.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Change Detection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's mechanism for updating the DOM when component data changes.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signal Components</strong>:\n          Signal Components provide fine-grained, automatic change detection, eliminating the need for manual change detection management.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ViewChild, TemplateRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-signals',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './signals.component.html',\n  styleUrls: ['./signals.component.scss']\n})\nexport class SignalsComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  // Template references for the tabs\n  @ViewChild('notesRef') notesRef!: TemplateRef<any>;\n  @ViewChild('bestRef') bestRef!: TemplateRef<any>;\n  @ViewChild('prosConsRef') prosConsRef!: TemplateRef<any>;\n  @ViewChild('topicsRef') topicsRef!: TemplateRef<any>;\n\n  // Code examples for signals\n  basicSignalCode = `import { signal, computed, effect } from '@angular/core';\n\n// Create a signal with an initial value\nconst count = signal(0);\n\n// Read the signal's value\nconsole.log(count()); // 0\n\n// Update the signal's value\ncount.set(5);\nconsole.log(count()); // 5\n\n// Update based on the previous value\ncount.update(value => value + 1);\nconsole.log(count()); // 6\n\n// Create a computed signal that depends on another signal\nconst doubled = computed(() => count() * 2);\nconsole.log(doubled()); // 12\n\n// Effect that runs when any of its dependencies change\neffect(() => {\n  console.log(\\`The count is \\${count()} and doubled is \\${doubled()}\\`);\n  // The count is 6 and doubled is 12\n});\n\n// When we update the count, the effect runs again automatically\ncount.set(10);\n// Effect logs: The count is 10 and doubled is 20`;\n\n  signalComponentsCode = `import { Component, signal, computed, effect } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-counter',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div>\n      <h2>Counter: {{ count() }}</h2>\n      <p>Doubled: {{ doubled() }}</p>\n      <button (click)=\"increment()\">Increment</button>\n    </div>\n  \\`\n})\nexport class CounterComponent {\n  // Signal for component state\n  count = signal(0);\n\n  // Computed signal derived from count\n  doubled = computed(() => count() * 2);\n\n  constructor() {\n    // Effect runs whenever count changes\n    effect(() => {\n      console.log(\\`Counter changed to \\${this.count()}\\`);\n    });\n  }\n\n  increment() {\n    this.count.update(n => n + 1);\n  }\n}`;\n\n  advancedSignalsCode = `import { signal, computed, effect, untracked, Signal } from '@angular/core';\n\n// 1. Signal with custom equality function\nconst user = signal({ name: 'Alice', age: 30 }, {\n  equal: (a, b) => a.name === b.name && a.age === b.age\n});\n\n// Now only changes to name or age will trigger updates\nuser.set({ name: 'Alice', age: 30 }); // No notifications\nuser.set({ name: 'Bob', age: 30 }); // Triggers updates\n\n// 2. Signal wrapping\n// Convert a value to a read-only signal\nfunction wrap<T>(value: T): Signal<T> {\n  const sig = signal(value);\n  return () => sig();\n}\n\nconst readOnly = wrap('hello');\nconsole.log(readOnly()); // 'hello'\n// readOnly.set('world'); // Error: readOnly is not a WritableSignal\n\n// 3. Untracked to prevent dependencies\nconst count = signal(0);\nconst name = signal('Alice');\n\nconst message = computed(() => {\n  // Only depends on count, not name\n  return \\`Count: \\${count()}, User: \\${untracked(() => name())}\\`;\n});\n\n// 4. Effect cleanup\neffect((onCleanup) => {\n  const intervalId = setInterval(() => {\n    console.log(count());\n  }, 1000);\n\n  // Cleanup function runs before the next effect execution\n  // or when the effect is destroyed\n  onCleanup(() => {\n    clearInterval(intervalId);\n  });\n});`;\n\n  v19EnhancementsCode = `// Angular 19 Signal Enhancements\n\n// 1. Signal-based Component Inputs\nimport { Component, input, model } from '@angular/core';\n\n@Component({\n  selector: 'app-user-card',\n  template: \\`<div>{{ name() }}</div>\\`\n})\nexport class UserCardComponent {\n  // Signal-based input with default value\n  name = input('Guest');\n\n  // Required input with type\n  userId = input.required<string>();\n\n  // Input with transform function\n  age = input(0, {\n    transform: (value: number) => Math.max(0, value)\n  });\n\n  // Two-way binding with model signal\n  isActive = model(false);\n}\n\n// 2. Read-only signals with asReadonly\nimport { signal } from '@angular/core';\n\nconst counter = signal(0);\n// Create a read-only version of the signal\nconst readonlyCounter = counter.asReadonly();\n\ncounter.update(v => v + 1); // Works fine\n// readonlyCounter.update(v => v + 1); // Error: no update method\n\n// 3. Improved type-safety\nimport { signal, computed, effect } from '@angular/core';\n\n// Signal generic types are properly preserved\nconst items = signal<string[]>([]);\nitems.update(arr => [...arr, 'new item']);\n\n// Type checking in computed values\nconst itemCount = computed(() => items().length);\n\n// Type inference in effects\neffect(() => {\n  const currentItems: string[] = items(); // Type is inferred correctly\n  console.log(\\`There are \\${itemCount()} items\\`);\n});\n\n// 4. Enhanced Developer Experience\n// Better error messages for common mistakes\neffect(() => {\n  console.log(items); // Error: Signal accessed without being called\n  console.log(items()); // Correct: Call the signal to get its value\n});`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Load code examples from files if needed\n    // Currently using inline examples\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Signals\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Signals</span>\n      in Angular are reactive primitives introduced in Angular 16 and enhanced in Angular 19. They provide a fine-grained reactivity system for tracking state changes, enabling more efficient rendering, improved change detection, and a more intuitive reactive programming model.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What are Angular Signals?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Reactive Primitives</strong>:\n      Angular Signals are reactive primitives that enable fine-grained tracking of state changes and dependencies between values.\n    </li>\n    <li>\n      <strong>Three Primary Signal Types</strong>:\n      Signals come in three main types: writable signals, computed signals, and effects.\n    </li>\n    <li>\n      <strong>Declarative Reactivity</strong>:\n      They enable a declarative approach to reactivity, where dependencies are automatically tracked and updates propagate efficiently.\n    </li>\n    <li>\n      <strong>Improved Performance</strong>:\n      Angular 19 has significantly improved signal performance, making them suitable for even the most demanding applications.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Basic Signal Usage</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"basicSignalCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Signals in Components</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"signalComponentsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Advanced Signal Features</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"advancedSignalsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Signal Enhancements</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19EnhancementsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>The Three Signal Types</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Signal Type</th>\n        <th class=\"py-3 px-4 text-left\">Description</th>\n        <th class=\"py-3 px-4 text-left\">Key Methods</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><strong>Writable Signal</strong></td>\n        <td class=\"py-3 px-4\">Basic signal that can be directly updated</td>\n        <td class=\"py-3 px-4\"><code>signal()</code>, <code>set()</code>, <code>update()</code>, <code>asReadonly()</code></td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><strong>Computed Signal</strong></td>\n        <td class=\"py-3 px-4\">Derived signal that calculates its value from other signals</td>\n        <td class=\"py-3 px-4\"><code>computed()</code></td>\n      </tr>\n      <tr class=\"bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><strong>Effect</strong></td>\n        <td class=\"py-3 px-4\">Side effect that runs when its dependencies change</td>\n        <td class=\"py-3 px-4\"><code>effect()</code>, cleanup function</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Signal Improvements</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Signal-Based Component Model</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces signal-based inputs, outputs, models, and queries for components</li>\n        <li>Component inputs and outputs are now signal-based with <code>input()</code> and <code>output()</code></li>\n        <li>Two-way binding with <code>model()</code> for cleaner component communication</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimizations</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Optimized signal implementation for faster change detection</li>\n        <li>Reduced memory overhead for signal storage</li>\n        <li>Better garbage collection integration for signal dependencies</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Experience</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved type safety across all signal operations</li>\n        <li>Better error messages for common signal usage mistakes</li>\n        <li>Enhanced debugging support in Angular DevTools</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal Utilities</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li><code>asReadonly()</code> method for creating read-only signals</li>\n        <li>Custom equality functions for controlling signal change detection</li>\n        <li><code>untracked()</code> for preventing dependency tracking in computed signals</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration with Zoneless Applications</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Signals are the foundation for zoneless applications in Angular 19</li>\n        <li>Provide automatic UI updates without relying on Zone.js</li>\n        <li>Enable more predictable, fine-grained change detection</li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Signal State Design</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Keep Signal Granularity Appropriate</strong>:\n          Create signals at the right level of granularity. Too fine-grained signals can lead to complexity, while too coarse can reduce the benefits of reactivity.\n        </li>\n        <li>\n          <strong>Use Computed for Derived State</strong>:\n          Always use computed signals for derived state rather than manually updating dependent values. This ensures your derived state stays in sync automatically.\n        </li>\n        <li>\n          <strong>Minimize Stateful Services</strong>:\n          Move signals to components when possible and keep services stateless. When services need state, use signals to make that state reactive.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Performance Optimization</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Avoid Deep Objects in Signals</strong>:\n          Prefer flat state in signals. Deep nesting can make change detection less efficient and updates more complex.\n        </li>\n        <li>\n          <strong>Use untracked() Strategically</strong>:\n          Use <code>untracked()</code> to prevent unnecessary dependencies in computed signals when you need to access a signal's value without creating a dependency.\n        </li>\n        <li>\n          <strong>Custom Equality Functions</strong>:\n          Use custom equality functions for complex objects to prevent unnecessary updates when actual values haven't changed.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Effect Management</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Clean Up Effects</strong>:\n          Always return cleanup functions from effects that subscribe to external resources or create timers to prevent memory leaks.\n        </li>\n        <li>\n          <strong>Keep Effects Focused</strong>:\n          Effects should have a single responsibility. Prefer multiple small effects over one large effect with many dependencies.\n        </li>\n        <li>\n          <strong>Place Effects Appropriately</strong>:\n          Define effects where their dependencies are defined, typically in component constructors or initialization methods.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Component Integration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Prefer Signal Inputs and Outputs</strong>:\n          In Angular 19, use <code>input()</code>, <code>output()</code>, and <code>model()</code> for component communications over the older decorator approach.\n        </li>\n        <li>\n          <strong>Use asReadonly() for API Design</strong>:\n          Expose read-only signals to consumers when they shouldn't be able to modify the value directly.\n        </li>\n        <li>\n          <strong>Consider Signal Store for Complex State</strong>:\n          For complex application state, consider using a pattern like signal-based stores to organize related state and behavior.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Migration Strategy</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Incremental Adoption</strong>:\n          Migrate to signals incrementally, focusing on areas with complex state management or performance issues first.\n        </li>\n        <li>\n          <strong>Combine with RxJS When Needed</strong>:\n          Signals and RxJS can coexist. Use signals for UI state and component interaction, and RxJS for complex asynchronous operations.\n        </li>\n        <li>\n          <strong>Consider Future Patterns</strong>:\n          Design your signal architecture with the future in mind, such as zoneless applications and signal-based components.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Fine-grained Reactivity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Precise Dependency Tracking</span>:\n          Signals automatically track their dependencies, leading to more efficient updates and rendering.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Minimal Re-rendering</span>:\n          Only parts of the UI that depend on changed signals are updated, reducing unnecessary work.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Explicit Change Detection</span>:\n          Changes to signal values explicitly trigger updates, making application behavior more predictable.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Improved Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Optimized Change Detection</span>:\n          Angular 19 signals significantly improve change detection efficiency compared to traditional mechanisms.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Memory Efficiency</span>:\n          Signals have minimal memory overhead compared to alternatives like RxJS Subjects.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Zone-free Operation</span>:\n          Signals enable zoneless applications, reducing overhead related to zone.js.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better Developer Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Simple API</span>:\n          Signals have a straightforward, functional API that's easy to understand and use.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Improved Type Safety</span>:\n          Signal operations are fully typed, providing excellent TypeScript integration.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Debugging Support</span>:\n          Angular DevTools offers enhanced debugging capabilities for signals in Angular 19.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration with Angular Ecosystem</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Signal-based Components</span>:\n          Angular 19 introduces a complete signal-based component model with signal inputs, outputs, and models.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Integration with Templates</span>:\n          Signal values can be used directly in templates and automatically update when signals change.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Works with Existing Code</span>:\n          Signals can be gradually adopted alongside existing Angular patterns.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">New Mental Model</span>:\n          Developers familiar with RxJS or traditional Angular change detection need to learn a new approach.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Signal Function Calls</span>:\n          The need to call signals as functions to get their values can be confusing for newcomers.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reactive Thinking</span>:\n          Requires a shift to thinking reactively about dependencies and data flow.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Migration Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Mixed Code Bases</span>:\n          During migration, managing code that uses both signals and traditional patterns can be complex.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Refactoring Effort</span>:\n          Converting existing components and services to use signals requires significant effort.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Third-party Libraries</span>:\n          Not all third-party libraries support signals yet, creating potential integration challenges.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Debugging Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Hidden Dependencies</span>:\n          Automatic dependency tracking can sometimes make it difficult to trace exactly what's causing updates.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Effect Debugging</span>:\n          Effects with many dependencies can be challenging to debug when they trigger unexpectedly.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Stack Traces</span>:\n          Error stack traces from signal operations can sometimes be harder to follow than traditional code.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Overuse</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Signal Proliferation</span>:\n          There's a risk of creating too many fine-grained signals, leading to unnecessarily complex code.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Architecture Decisions</span>:\n          Determining where to place signals (components vs. services) requires careful consideration.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Performance Overhead</span>:\n          While signals are optimized, there's still some overhead for very simple state changes that might not need reactivity.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Signal-Based Components</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular 19's component model based entirely on signals, replacing traditional inputs and outputs.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signals</strong>:\n          Uses signals as the foundation for component inputs, outputs, models, and queries, creating a unified reactive programming model.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Zoneless Applications</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular applications that operate without Zone.js, using signals and explicit change detection.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signals</strong>:\n          Signals provide the reactivity mechanism that enables applications to function efficiently without Zone.js.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Reactive Programming</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Programming paradigm focused on data streams and propagation of change.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signals</strong>:\n          Signals implement reactive programming principles in a way that's integrated with Angular's rendering system.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>RxJS and Observables</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Library for reactive programming with Observables in Angular applications.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signals</strong>:\n          Complementary to signals - RxJS is better for complex async operations, while signals excel at UI state management.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Change Detection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          How Angular identifies and propagates changes to update the DOM.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signals</strong>:\n          Signals enable fine-grained change detection by creating explicit connections between state and UI.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Technique to selectively hydrate server-rendered components based on priority or visibility.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signals</strong>:\n          Signals integrate with partial hydration, enabling efficient state restoration when components are hydrated.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>State Management</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Patterns and practices for managing application state in Angular applications.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Signals</strong>:\n          Signals provide a built-in mechanism for reactive state management that can replace or complement external libraries.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ViewChild, TemplateRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-ssr',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './ssr.component.html',\n  styleUrls: ['./ssr.component.scss']\n})\nexport class SsrComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  // Template references for the tabs\n  @ViewChild('notesRef') notesRef!: TemplateRef<any>;\n  @ViewChild('bestRef') bestRef!: TemplateRef<any>;\n  @ViewChild('prosConsRef') prosConsRef!: TemplateRef<any>;\n  @ViewChild('topicsRef') topicsRef!: TemplateRef<any>;\n\n  // Code examples for server-side rendering\n  ssrSetupCode: string = `// app.server.module.ts\nimport { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule { }`;\n\n  angularJsonCode: string = `{\n  \"projects\": {\n    \"my-app\": {\n      \"architect\": {\n        \"build\": {\n          \"options\": {\n            \"outputPath\": \"dist/my-app/browser\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"browser\": \"src/main.ts\"\n          }\n        },\n        \"server\": {\n          \"builder\": \"@angular-devkit/build-angular:server\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app/server\",\n            \"main\": \"src/main.server.ts\"\n          }\n        },\n        \"serve-ssr\": {\n          \"builder\": \"@nguniversal/builders:ssr-dev-server\",\n          \"options\": {\n            \"browserTarget\": \"my-app:build\",\n            \"serverTarget\": \"my-app:server\"\n          }\n        },\n        \"prerender\": {\n          \"builder\": \"@nguniversal/builders:prerender\",\n          \"options\": {\n            \"browserTarget\": \"my-app:build:production\",\n            \"serverTarget\": \"my-app:server:production\",\n            \"routes\": [\n              \"/\",\n              \"/about\",\n              \"/contact\"\n            ]\n          }\n        }\n      }\n    }\n  }\n}`;\n\n  v19SetupCode: string = `// main.server.ts\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { config } from './app/app.config.server';\n\nconst bootstrap = () => bootstrapApplication(AppComponent, config);\n\nexport default bootstrap;\n\n// app.config.server.ts\nimport { ApplicationConfig, mergeApplicationConfig } from '@angular/core';\nimport { provideServerRendering } from '@angular/platform-server';\nimport { appConfig } from './app.config';\n\nconst serverConfig: ApplicationConfig = {\n  providers: [\n    provideServerRendering()\n  ]\n};\n\nexport const config = mergeApplicationConfig(appConfig, serverConfig);`;\n\n  partialHydrationCode: string = `// user-profile.component.ts\nimport { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  template: \\`\n    <div>\n      <h1>{{ name() }}</h1>\n      <p>{{ bio() }}</p>\n      <!-- This component won't be interactive on the client -->\n    </div>\n  \\`,\n  hydration: { mode: 'none' } // Options: 'full' (default), 'lazy', 'none'\n})\nexport class UserProfileComponent {\n  name = input<string>('User Name');\n  bio = input<string>('User bio information');\n}\n\n// interactive-component.ts\n@Component({\n  selector: 'app-interactive-component',\n  standalone: true,\n  template: \\`\n    <button (click)=\"increment()\">Count: {{ count() }}</button>\n  \\`,\n  hydration: { mode: 'full' } // This component gets fully hydrated immediately\n})\nexport class InteractiveComponent {\n  count = signal(0);\n\n  increment() {\n    this.count.update(v => v + 1);\n  }\n}\n\n// lazy-hydrated.component.ts\n@Component({\n  selector: 'app-lazy-component',\n  standalone: true,\n  template: \\`<div>This hydrates when visible</div>\\`,\n  hydration: { mode: 'lazy' } // Hydrates when component becomes visible\n})\nexport class LazyHydratedComponent { }`;\n\n  isBrowserCode: string = `// Using DI tokens\nimport { PLATFORM_ID, Inject, Component } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n\n@Component({\n  selector: 'app-platform-aware',\n  template: '<div>Platform Aware Component</div>'\n})\nexport class PlatformAwareComponent {\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {\n    if (isPlatformBrowser(this.platformId)) {\n      // Browser-only code\n      console.log('Running in browser');\n      // Can safely access window, document, localStorage\n      window.addEventListener('resize', this.onResize);\n    }\n\n    if (isPlatformServer(this.platformId)) {\n      // Server-only code\n      console.log('Running on server');\n      // Avoid browser APIs, use only Node/server-compatible code\n    }\n  }\n\n  onResize() {\n    // Handle resize event (browser-only)\n  }\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Code examples are defined inline in the component\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Server-Side Rendering (SSR)\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Server-Side Rendering (SSR)</span>\n      in Angular 19 enables generating complete HTML pages on the server for each request. This approach improves initial page load performance, enhances SEO, and provides better user experience across devices, with significant enhancements in Angular 19 for partial hydration, performance, and developer experience.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What is Server-Side Rendering?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Pre-Rendered HTML</strong>:\n      Angular SSR pre-renders the application on the server, sending complete HTML to the client, rather than just the app shell.\n    </li>\n    <li>\n      <strong>Client Hydration</strong>:\n      After the initial HTML is delivered, the client-side Angular application \"hydrates\" the content, making it interactive.\n    </li>\n    <li>\n      <strong>SEO Benefits</strong>:\n      Search engines receive fully-rendered HTML, improving SEO performance for Angular applications.\n    </li>\n    <li>\n      <strong>Performance</strong>:\n      Users see meaningful content faster, especially on slower devices or networks.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 SSR Improvements</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Partial Hydration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces fine-grained control over which components get hydrated, allowing non-interactive components to remain static.</li>\n        <li>Components can be marked for hydration with different modes: 'full', 'lazy', or 'none'.</li>\n        <li>This results in smaller bundle sizes and faster interactivity for critical parts of the application.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimizations</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved serialization between server and client for faster state transfer.</li>\n        <li>Enhanced hydration algorithm that reduces content flicker during rehydration.</li>\n        <li>Optimized component detection to prevent double-rendering during hydration.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration with Signal-Based Components</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Signal-based components work seamlessly with SSR and hydration.</li>\n        <li>Signal state can be preserved during transfer from server to client.</li>\n        <li>Fine-grained reactivity improves hydration performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simplified Developer Experience</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>New <code>ng add @angular/ssr</code> command for easy setup in new or existing projects.</li>\n        <li>Auto-detection of common SSR issues during development and build process.</li>\n        <li>Better error messaging for debugging server/client mismatches.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Testing Support</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved testing utilities for SSR applications.</li>\n        <li>Test helpers to simulate server and client environments.</li>\n        <li>Methods to test partial hydration behavior.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Basic SSR Setup in Angular</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"ssrSetupCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular.json Configuration for SSR</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>json</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"angularJsonCode\"\n        [languages]=\"['json']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular 19 SSR Setup with Partial Hydration</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19SetupCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Partial Hydration in Components</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"partialHydrationCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Server vs. Browser Environment Detection</p>\n  <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code5 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"isBrowserCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>SSR Build Commands</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Command</th>\n        <th class=\"py-3 px-4 text-left\">Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng add @angular/ssr</code></td>\n        <td class=\"py-3 px-4\">Add SSR capabilities to an Angular application with Angular 19's new simplified setup.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng serve --ssr</code></td>\n        <td class=\"py-3 px-4\">Serve the application with SSR enabled during development.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng build && ng run my-app:server && ng run my-app:prerender</code></td>\n        <td class=\"py-3 px-4\">Build the client app, server app, and prerender specific routes.</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>npm run dev:ssr</code></td>\n        <td class=\"py-3 px-4\">Run the SSR application in development mode after setup.</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Strategic Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Identify Critical Components</strong>:\n          Prioritize hydration for components that require immediate interactivity, keeping others static to improve initial load time.\n        </li>\n        <li>\n          <strong>Use Lazy Hydration</strong>:\n          For components below the fold, use lazy hydration to defer their interactive initialization until they become visible.\n        </li>\n        <li>\n          <strong>No Hydration for Static Content</strong>:\n          Use <code>hydration: {{ '{' }} mode: 'none' {{ '}' }}</code> for purely static components that don't need interactivity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">State Transfer Optimization</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Minimize State Transfer Size</strong>:\n          Only transfer essential state from server to client to reduce payload size and improve hydration speed.\n        </li>\n        <li>\n          <strong>Use the Transfer State API</strong>:\n          Leverage Angular's <code>TransferState</code> to avoid duplicate data fetching on the client.\n        </li>\n        <li>\n          <strong>Plan API Calls Carefully</strong>:\n          For data-heavy components, consider if data should be fetched on server, client, or both.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Environment-Aware Code</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Check Execution Environment</strong>:\n          Always use <code>isPlatformBrowser</code> or <code>isPlatformServer</code> before accessing browser or server-specific APIs.\n        </li>\n        <li>\n          <strong>Abstract Browser APIs</strong>:\n          Create abstraction services for browser-specific functionality to avoid SSR errors.\n        </li>\n        <li>\n          <strong>Use SERVER_APP_ID Token</strong>:\n          Use Angular's built-in tokens to adjust behavior between server and client environments.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Performance Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Keep Server Rendering Fast</strong>:\n          Optimize server-side code to render quickly, avoiding unnecessary delays for initial HTML delivery.\n        </li>\n        <li>\n          <strong>Cache Aggressively</strong>:\n          Implement server-side caching for rendered pages to reduce server load and improve response times.\n        </li>\n        <li>\n          <strong>Monitor Server Resources</strong>:\n          SSR increases server load, so monitor memory usage and CPU to ensure stability under load.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Integration with Other Angular 19 Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Signal-Based Components</strong>:\n          Signal-based components integrate well with SSR and partial hydration in Angular 19.\n        </li>\n        <li>\n          <strong>Combine with App Shell</strong>:\n          For complex applications, use App Shell with SSR to provide immediate visual feedback.\n        </li>\n        <li>\n          <strong>Leverage Defer Blocks</strong>:\n          Use Angular's defer blocks to complement partial hydration strategies for lazy-loading content.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Improved Initial Load Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Faster First Contentful Paint</span>:\n          Users see meaningful content more quickly as the server delivers fully rendered HTML.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Loading Flicker</span>:\n          Eliminates the blank screen or loading spinner typical of client-side-only applications.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better User Experience on Slow Devices</span>:\n          Less JavaScript parsing and execution required on the client before displaying content.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>SEO Benefits</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Search Engine Indexability</span>:\n          Search engines receive complete HTML rather than an empty shell, improving content indexing.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Social Media Sharing</span>:\n          Enables proper metadata for social media platforms that don't execute JavaScript.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Structured Data Support</span>:\n          Server-rendered markup can include structured data for rich search results.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimizations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Partial Hydration</span>:\n          Angular 19's fine-grained hydration reduces client-side JavaScript execution for faster interactivity.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Time to Interactive</span>:\n          Critical interactive elements can be prioritized in hydration order.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Smaller Client Bundle</span>:\n          With partial hydration, components that don't require interactivity can be excluded from client JS bundles.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Developer Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Simplified Setup</span>:\n          Angular 19 streamlines SSR configuration with improved CLI commands and schematics.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better Debugging Tools</span>:\n          Enhanced error messages and improved tooling for identifying SSR-specific issues.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Component-Level Control</span>:\n          Developers can fine-tune hydration behavior at the component level for optimal performance.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Increased Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Server Environment Requirements</span>:\n          Requires Node.js runtime on the server, which may complicate deployment environments.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Universal Code Constraints</span>:\n          Code must work in both server and browser environments, requiring careful consideration of APIs used.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Hydration Management</span>:\n          Developers need to understand and manage hydration strategies for optimal performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Server Resources</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Higher Server Load</span>:\n          Rendering on the server requires more CPU and memory resources compared to serving static files.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Scaling Considerations</span>:\n          High-traffic applications may require more robust server infrastructure to handle rendering load.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Cold Start Issues</span>:\n          Serverless deployments may experience cold start delays for server rendering.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Development Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Browser API Limitations</span>:\n          Browser-specific APIs (localStorage, window, etc.) are unavailable during server rendering.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">State Management Complexity</span>:\n          Transferring initial state from server to client adds complexity to application architecture.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Debugging Difficulty</span>:\n          Debugging server-client hydration issues can be challenging due to environment differences.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Build and Deployment Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Longer Build Times</span>:\n          SSR requires additional build steps for the server bundle, increasing CI/CD pipeline duration.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Complex Deployments</span>:\n          Deployment requires both server and client artifacts, complicating deployment pipelines.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Environment Configuration</span>:\n          Different environments (development, staging, production) may require different SSR configurations.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular 19's approach to selectively making components interactive after server rendering.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          Builds upon SSR by optimizing the client-side JavaScript execution, only hydrating components that need interactivity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>App Shell</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Minimal HTML, CSS, and JavaScript for displaying a static application shell while content loads.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          Can be combined with SSR, where an App Shell is pre-rendered, and then dynamic content is added through SSR.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Prerendering</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Generating static HTML for routes at build time rather than at request time.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          Uses the same rendering mechanism as SSR but happens during build rather than per request.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Transfer State</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Mechanism to transfer data fetched during server rendering to the client to avoid duplicate requests.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          Enhances SSR performance by eliminating redundant data fetching on the client side.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Zone.js and Zoneless Applications</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Zone.js handles change detection in Angular; zoneless applications use signals instead.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          Zoneless applications with signals can improve SSR performance and hydration efficiency.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular Universal</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's server-side rendering platform, now integrated directly into the Angular framework.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          The official implementation of SSR for Angular applications, now simplified in Angular 19.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Progressive Web Apps (PWAs)</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Web applications that use modern web capabilities to deliver app-like experiences.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          SSR can enhance PWA initial load performance while maintaining offline capabilities.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { Component, ViewChild, TemplateRef } from '@angular/core';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-standalone',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './standalone.component.html',\n  styleUrls: ['./standalone.component.scss']\n})\nexport class StandaloneComponent extends UnsubscribeService {\n  selectedTab = 'notes';\n\n  @ViewChild('notesTemplate', { static: true }) notesTemplate!: TemplateRef<any>;\n  @ViewChild('bestPracticesTemplate', { static: true }) bestPracticesTemplate!: TemplateRef<any>;\n  @ViewChild('prosConsTemplate', { static: true }) prosConsTemplate!: TemplateRef<any>;\n  @ViewChild('relatedTopicsTemplate', { static: true }) relatedTopicsTemplate!: TemplateRef<any>;\n\n  standaloneComponentCode = `// Standalone component example\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { UserProfileComponent } from './user-profile.component';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    UserProfileComponent\n  ],\n  template: \\`\n    <div class=\"dashboard\">\n      <h1>Welcome to your Dashboard</h1>\n      <app-user-profile></app-user-profile>\n      <button mat-button>View Statistics</button>\n    </div>\n  \\`\n})\nexport class DashboardComponent { }`;\n\n  bootstrapCode = `// main.ts\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app/app.routes';\nimport { provideAnimations } from '@angular/platform-browser/animations';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideRouter(routes),\n    provideAnimations()\n  ]\n}).catch(err => console.error(err));`;\n\n  standaloneRoutesCode = `// app.routes.ts\nimport { Routes } from '@angular/router';\n\nexport const routes: Routes = [\n  {\n    path: 'dashboard',\n    loadComponent: () => import('./dashboard/dashboard.component')\n      .then(c => c.DashboardComponent)\n  },\n  {\n    path: 'settings',\n    loadComponent: () => import('./settings/settings.component')\n      .then(c => c.SettingsComponent)\n  }\n];`;\n\n  providersCode = `// app.config.ts\nimport { ApplicationConfig } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app.routes';\nimport { provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { provideAnimations } from '@angular/platform-browser/animations';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(withInterceptorsFromDi()),\n    provideAnimations()\n  ]\n};`;\n\n  dependencyInjectionCode = `// Dependency injection in standalone components\nimport { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  imports: [CommonModule],\n  template: \\`\n    <div *ngIf=\"user$ | async as user\">\n      <h2>{{ user.name }}</h2>\n      <p>{{ user.email }}</p>\n    </div>\n  \\`\n})\nexport class UserProfileComponent {\n  // Inject service using the inject function\n  private userService = inject(UserService);\n  user$ = this.userService.getCurrentUser();\n}`;\n}\n","<div class=\"container\">\n  <h1>Standalone Components in Angular</h1>\n  <p>\n    Standalone components are a feature in Angular that allows components, directives, and pipes to be used without declaring them in an NgModule. This simplifies the component architecture and makes Angular development more intuitive.\n  </p>\n\n  <div class=\"tab-navigation\">\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'notes'\"\n      (click)=\"selectedTab = 'notes'\">\n      Notes\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'bestPractices'\"\n      (click)=\"selectedTab = 'bestPractices'\">\n      Best Practices\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'prosCons'\"\n      (click)=\"selectedTab = 'prosCons'\">\n      Pros and Cons\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'relatedTopics'\"\n      (click)=\"selectedTab = 'relatedTopics'\">\n      Related Topics\n    </button>\n  </div>\n\n  <ng-container [ngSwitch]=\"selectedTab\">\n    <ng-container *ngSwitchCase=\"'notes'\">\n      <ng-container *ngTemplateOutlet=\"notesTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'bestPractices'\">\n      <ng-container *ngTemplateOutlet=\"bestPracticesTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'prosCons'\">\n      <ng-container *ngTemplateOutlet=\"prosConsTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'relatedTopics'\">\n      <ng-container *ngTemplateOutlet=\"relatedTopicsTemplate\"></ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n\n<ng-template #notesTemplate>\n  <h2>Overview</h2>\n  <p>\n    Standalone components are a simplified way of building Angular applications without explicitly creating and managing NgModules for each component. They were introduced to reduce boilerplate code and make the framework more intuitive.\n  </p>\n\n  <h3>Creating a Standalone Component</h3>\n  <div class=\"code-example\">\n    <pre><code [highlight]=\"standaloneComponentCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Key Features of Standalone Components</h3>\n  <ul class=\"feature-list\">\n    <li>\n      <strong>Self-contained:</strong> A standalone component declares its own dependencies.\n    </li>\n    <li>\n      <strong>No NgModule required:</strong> Components can be used without being declared in an NgModule.\n    </li>\n    <li>\n      <strong>Direct imports:</strong> Components can directly import other components, directives, and pipes.\n    </li>\n    <li>\n      <strong>Simplified lazy loading:</strong> Makes it easier to lazy load components in routes.\n    </li>\n    <li>\n      <strong>Better tree-shaking:</strong> Allows the build system to more efficiently eliminate unused code.\n    </li>\n  </ul>\n\n  <h3>Bootstrapping a Standalone Application</h3>\n  <div class=\"code-example\">\n    <pre><code [highlight]=\"bootstrapCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Routing with Standalone Components</h3>\n  <div class=\"code-example\">\n    <pre><code [highlight]=\"standaloneRoutesCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Configuring Providers</h3>\n  <div class=\"code-example\">\n    <pre><code [highlight]=\"providersCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Dependency Injection</h3>\n  <div class=\"code-example\">\n    <pre><code [highlight]=\"dependencyInjectionCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n</ng-template>\n\n<ng-template #bestPracticesTemplate>\n  <h2>Best Practices</h2>\n\n  <h3>Organization</h3>\n  <ul>\n    <li>\n      <strong>Feature-based organization:</strong> Group related standalone components, directives, and pipes by feature.\n    </li>\n    <li>\n      <strong>Public API pattern:</strong> Use barrel files (index.ts) to export multiple related standalone components.\n    </li>\n    <li>\n      <strong>Keep imports lean:</strong> Only import what you need to minimize bundle size.\n    </li>\n    <li>\n      <strong>Be mindful of circular dependencies:</strong> They can be more common with standalone components, so structure your code carefully.\n    </li>\n  </ul>\n\n  <h3>Migration Strategy</h3>\n  <ul>\n    <li>\n      <strong>Incremental adoption:</strong> Migrate to standalone components gradually, starting with leaf components.\n    </li>\n    <li>\n      <strong>Use the standalone migration schematic:</strong> Angular provides schematics to help migrate NgModule-based components to standalone.\n    </li>\n    <li>\n      <strong>Test thoroughly:</strong> Ensure components still work correctly after migration.\n    </li>\n  </ul>\n\n  <h3>Performance</h3>\n  <ul>\n    <li>\n      <strong>Lazy load when possible:</strong> Standalone components make it easier to implement lazy loading.\n    </li>\n    <li>\n      <strong>Share common dependencies:</strong> Use shared imports for common modules to avoid duplication.\n    </li>\n    <li>\n      <strong>Use library-level providers:</strong> For services shared across many components.\n    </li>\n  </ul>\n\n  <div class=\"workflow-diagram\">\n    <h4>Recommended Development Workflow:</h4>\n    <ol>\n      <li>Identify a feature to implement</li>\n      <li>Create standalone components, directives, and pipes for the feature</li>\n      <li>Use an index.ts file to export all public API elements</li>\n      <li>Import only what's needed in each component</li>\n      <li>Add route configurations if needed</li>\n      <li>Configure providers at the appropriate level</li>\n    </ol>\n  </div>\n</ng-template>\n\n<ng-template #prosConsTemplate>\n  <h2>Pros and Cons</h2>\n\n  <h3>Advantages</h3>\n  <ul>\n    <li><strong>Reduced Boilerplate:</strong> Eliminates the need for NgModules in many cases</li>\n    <li><strong>Simplified Mental Model:</strong> More intuitive component architecture</li>\n    <li><strong>Improved Developer Experience:</strong> Easier to understand what dependencies a component has</li>\n    <li><strong>Better Tree Shaking:</strong> More efficient build optimization</li>\n    <li><strong>Easier Lazy Loading:</strong> Simplified route configuration</li>\n    <li><strong>Smoother Migration Path:</strong> Can coexist with NgModule-based components</li>\n  </ul>\n\n  <h3>Challenges</h3>\n  <ul>\n    <li><strong>Potential for Duplication:</strong> Services might be provided multiple times if not careful</li>\n    <li><strong>Transition Period:</strong> Applications may mix NgModule-based and standalone components</li>\n    <li><strong>Learning Curve:</strong> For developers familiar with NgModule patterns</li>\n    <li><strong>Configuration Management:</strong> Need to manage providers carefully</li>\n  </ul>\n\n  <h3>Standalone vs. NgModule Comparison</h3>\n  <table class=\"comparison-table\">\n    <thead>\n      <tr>\n        <th>Feature</th>\n        <th>Standalone Components</th>\n        <th>NgModule-based Components</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Declaration</td>\n        <td>Self-declared with standalone: true</td>\n        <td>Must be declared in an NgModule</td>\n      </tr>\n      <tr>\n        <td>Dependency Management</td>\n        <td>Direct imports in @Component</td>\n        <td>Via NgModule imports</td>\n      </tr>\n      <tr>\n        <td>Lazy Loading</td>\n        <td>Direct component loading</td>\n        <td>Module-based loading</td>\n      </tr>\n      <tr>\n        <td>Provider Scope</td>\n        <td>Component, route, or application</td>\n        <td>NgModule (root, feature, or component)</td>\n      </tr>\n      <tr>\n        <td>Testing</td>\n        <td>Simpler test setup</td>\n        <td>Requires TestBed with modules</td>\n      </tr>\n      <tr>\n        <td>Library Creation</td>\n        <td>More flexible export options</td>\n        <td>Public API through modules</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #relatedTopicsTemplate>\n  <h2>Related Topics</h2>\n\n  <ul>\n    <li>\n      <strong>Angular Modules:</strong> The previous way of organizing components, still used for some cases.\n    </li>\n    <li>\n      <strong>Dependency Injection:</strong> The system for providing services to components.\n    </li>\n    <li>\n      <strong>Routing in Angular:</strong> How to set up navigation with standalone components.\n    </li>\n    <li>\n      <strong>Lazy Loading:</strong> Loading components or features only when needed.\n    </li>\n    <li>\n      <strong>Tree Shaking:</strong> Build optimization technique to remove unused code.\n    </li>\n    <li>\n      <strong>Angular Libraries:</strong> Building and sharing reusable standalone components.\n    </li>\n    <li>\n      <strong>Signal-based Components:</strong> New reactive programming model that works well with standalone components.\n    </li>\n    <li>\n      <strong>Testing:</strong> How to test standalone components effectively.\n    </li>\n  </ul>\n\n  <h3>Changes in Angular 19</h3>\n  <p>\n    Angular 19 enhances standalone components with:\n  </p>\n  <ul>\n    <li>Improved tooling and schematics for migration</li>\n    <li>Better integration with signals</li>\n    <li>Enhanced performance through more efficient change detection</li>\n    <li>Simplified bootstrapping process</li>\n    <li>Better support for Server-Side Rendering (SSR) and hydration</li>\n  </ul>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-structural-directive',\n  templateUrl: './structural-directive.component.html',\n  styleUrls: ['./structural-directive.component.scss']\n})\nexport class StructuralDirectiveComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n  code_6_1 = '';\n  code_7 = '';\n  code_8 = '';\n  code_9 = '';\n  code_10 = '';\n  code_11 = '';\n  code_11_1 = '';\n  code_12 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/structural-directive/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/structural-directive/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/structural-directive/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/structural-directive/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n      this.http.get('assets/codes/structural-directive/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n      this.http.get('assets/codes/structural-directive/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n      this.http.get('assets/codes/structural-directive/notes/code_6_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6_1 = data);\n\n      this.http.get('assets/codes/structural-directive/notes/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_7 = data);\n\n      this.http.get('assets/codes/structural-directive/notes/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_8 = data);\n\n      this.http.get('assets/codes/structural-directive/notes/code_9.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_9 = data);\n\n      this.http.get('assets/codes/structural-directive/notes/code_10.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_10 = data);\n\n      this.http.get('assets/codes/structural-directive/notes/code_11.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_11 = data);\n\n      this.http.get('assets/codes/structural-directive/notes/code_11_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_11_1 = data);\n\n      this.http.get('assets/codes/structural-directive/notes/code_12.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_12 = data);\n\n\n\n  }\n}\n\n\n\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    structural directive\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      *ngIf\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      *ngFor\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      *ngSwitchCase and *ngSwitchDefault\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      *ngTemplateOutlet\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      *ngIf with else\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      *ngFor with trackBy\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n\n\n        <!-- <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button> -->\n\n      <span copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n      </span>\n\n    </li>\n    <li>\n      *ngFor with index and last\n\n      <button (click)=\"code7.hidden = !code7.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code7 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_7\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      *ngFor with ng-container\n\n      <button (click)=\"code8.hidden = !code8.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code8 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_8\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      *ngFor with starting index\n\n      <button (click)=\"code9.hidden = !code9.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code9 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_9\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      *ngFor with slice\n\n      <button (click)=\"code10.hidden = !code10.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code10 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_10\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      *ngFor with groupBy\n\n      <button (click)=\"code11.hidden = !code11.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code11 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_11\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n\n\n        <!-- <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button> -->\n\n      <span copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_11_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n      </span>\n\n    </li>\n    <li>\n      *ngSwitch with ng-container\n\n      <button (click)=\"code12.hidden = !code12.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code12 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_12\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n\n  </p>\n\n</ng-template>\n\n\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Flexibility</strong>\n      <p>\n        Structural directives are very flexible and allow you to create dynamic and complex templates that can adapt to different data and conditions.\n      </p>\n    </li>\n    <li>\n      <strong>Reusability</strong>\n      <p>\n        Structural directives can be reused across multiple components and templates, making it easy to maintain and modify them.\n      </p>\n    </li>\n    <li>\n      <strong>Improved performance</strong>\n      <p>\n        By using ngIf or ngSwitch to conditionally render elements, you can improve the performance of your application by reducing the number of elements in the DOM.\n      </p>\n    </li>\n    <li>\n      <strong>Better readability</strong>\n      <p>\n        By separating your code into smaller, more manageable templates, your code becomes easier to read and understand.\n      </p>\n    </li>\n    <li>\n      <strong>Consistent coding practices</strong>\n      <p>\n        Structural directives help enforce consistent coding practices across your team by providing a standard way of structuring and rendering templates.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Complexity</strong>\n      <p>\n        With great flexibility comes increased complexity. Structural directives can be difficult to understand and manage, especially for developers who are new to Angular.\n      </p>\n    </li>\n    <li>\n      <strong>Performance overhead</strong>\n      <p>\n        Structural directives can introduce some performance overhead, especially when used incorrectly. It's important to understand how they work and use them in a way that doesn't negatively impact performance.\n      </p>\n    </li>\n    <li>\n      <strong>Debugging issues</strong>\n      <p>\n        When you have complex templates with many nested directives, it can be difficult to debug issues and find the source of problems.\n      </p>\n    </li>\n    <li>\n      <strong>Limited functionality</strong>\n      <p>\n        Although Angular's structural directives are very powerful, there are some limitations to what they can do. If you need more advanced functionality, you may need to use a custom directive or component.\n      </p>\n    </li>\n  </ol>\n\n\n  <br>\n\n  <p>\n    Overall, Angular's structural directives are a powerful tool that can help you create dynamic and flexible templates. However, they should be used judiciously and with a good understanding of their limitations and performance implications.\n  </p>\n\n  </ng-template>\n\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Some related topics to Angular Structural Directives:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Angular Template Syntax:</strong>\n        <p>\n          Structural directives are part of Angular's template syntax, which also includes attribute directives and interpolation.\n        </p>\n      </li>\n      <li>\n        <strong>Directives</strong>\n        <p>\n          Structural directives are one of three types of directives in Angular, along with attribute directives and component directives.\n        </p>\n      </li>\n      <li>\n        <strong>NgTemplateOutlet</strong>\n        <p>\n          The *ngTemplateOutlet directive is a commonly used structural directive in Angular that allows you to render templates dynamically.\n        </p>\n      </li>\n      <li>\n        <strong>NgIf</strong>\n        <p>\n          The *ngIf directive is another commonly used structural directive in Angular that adds or removes elements from the DOM based on a condition.\n        </p>\n      </li>\n      <li>\n        <strong>NgFor</strong>\n        <p>\n          The *ngFor directive is used to loop over a collection and create a template instance for each item.\n        </p>\n      </li>\n      <li>\n        <strong>NgSwitch</strong>\n        <p>\n          The *ngSwitch directive is used to conditionally render content based on a value.\n        </p>\n      </li>\n      <li>\n        <strong>TemplateRef</strong>\n        <p>\n          The TemplateRef class represents an Angular template that can be used to render content dynamically.\n        </p>\n      </li>\n      <li>\n        <strong>ViewContainerRef</strong>\n        <p>\n          The ViewContainerRef class represents a container where dynamic content can be added or removed.\n        </p>\n      </li>\n      <li>\n        <strong>Change Detection</strong>\n        <p>\n          Angular uses change detection to track changes in the component's data and update the view accordingly. Structural directives play a key role in this process.\n        </p>\n      </li>\n      <li>\n        <strong>NgTemplateOutletContext</strong>\n        <p>\n          The NgTemplateOutletContext interface is used to pass context data to a dynamically rendered template.\n        </p>\n      </li>\n    </ol>\n\n\n    <br>\n\n    <p>\n\n    </p>\n\n  </ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-style-url',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './style-url.component.html',\n  styleUrls: ['./style-url.component.scss']\n})\nexport class StyleUrlComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Template references\n  @ViewChild('notesRef') notesRef!: TemplateRef<any>;\n  @ViewChild('bestRef') bestRef!: TemplateRef<any>;\n  @ViewChild('prosConsRef') prosConsRef!: TemplateRef<any>;\n  @ViewChild('topicsRef') topicsRef!: TemplateRef<any>;\n\n  // Code examples for styleUrl\n  basicExampleCode: string = `// Basic styleUrl Example\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-styled-card',\n  standalone: true,\n  template: \\`\n    <div class=\"card\">\n      <h2>{{ title }}</h2>\n      <p>{{ content }}</p>\n    </div>\n  \\`,\n  // Using styleUrl instead of styleUrls array\n  styleUrl: './styled-card.component.scss'\n})\nexport class StyledCardComponent {\n  title = 'Card Title';\n  content = 'This is a styled card using styleUrl.';\n}`;\n\n  multipleStylesCode: string = `// Multiple Styles with styleUrl and styleUrls\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-complex-card',\n  standalone: true,\n  template: \\`\n    <div class=\"complex-card\">\n      <header class=\"card-header\">{{ title }}</header>\n      <div class=\"card-body\">{{ content }}</div>\n      <footer class=\"card-footer\">{{ footer }}</footer>\n    </div>\n  \\`,\n  // Primary styles in a single file with styleUrl\n  styleUrl: './complex-card.component.scss',\n\n  // Additional styles can still be added with styleUrls\n  styleUrls: [\n    '../shared/card-animations.scss',\n    '../themes/dark-theme.scss'\n  ]\n})\nexport class ComplexCardComponent {\n  title = 'Complex Card';\n  content = 'This card uses both styleUrl and styleUrls.';\n  footer = '© 2024';\n}`;\n\n  inlineWithStyleUrlCode: string = `// Combining Inline Styles with styleUrl\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-hybrid-card',\n  standalone: true,\n  template: \\`\n    <div class=\"hybrid-card\">\n      <h2>{{ title }}</h2>\n      <div class=\"content\">{{ content }}</div>\n    </div>\n  \\`,\n  // Main styles from external file\n  styleUrl: './hybrid-card.component.scss',\n\n  // Critical or component-specific styles can be inline\n  styles: [\\`\n    .hybrid-card {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .content {\n      font-style: italic;\n    }\n  \\`]\n})\nexport class HybridCardComponent {\n  title = 'Hybrid Styling';\n  content = 'This component uses both styleUrl and inline styles.';\n}`;\n\n  v19EnhancementsCode: string = `// Angular 19 styleUrl Enhancements\nimport { Component } from '@angular/core';\n\n// 1. Dynamic styleUrl with conditional styling\n@Component({\n  selector: 'app-theme-aware',\n  standalone: true,\n  template: \\`\n    <div class=\"themed-component\">\n      <h3>{{ title }}</h3>\n      <button (click)=\"toggleTheme()\">Toggle Theme</button>\n    </div>\n  \\`,\n  // Dynamic styleUrl selection\n  styleUrl: './theme-aware.{{theme}}.scss'\n})\nexport class ThemeAwareComponent {\n  title = 'Theme-Aware Component';\n  theme = 'light';\n\n  toggleTheme() {\n    this.theme = this.theme === 'light' ? 'dark' : 'light';\n  }\n}\n\n// 2. Relative path improvements\n@Component({\n  selector: 'app-relative-styles',\n  standalone: true,\n  template: \\`<div>Relative StyleUrl Example</div>\\`,\n  // More intuitive relative path support\n  styleUrl: '$styles/shared.scss'\n})\nexport class RelativeStylesComponent {}\n\n// 3. Enhanced bundle optimization\n@Component({\n  selector: 'app-optimized',\n  standalone: true,\n  template: \\`<div>Optimized Component</div>\\`,\n  // Angular 19 automatically optimizes style bundling\n  styleUrl: './optimized.component.scss'\n})\nexport class OptimizedComponent {}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Nothing to do here\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    styleUrl\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">styleUrl</span>\n      is a streamlined way to specify a single stylesheet for an Angular component, introduced in Angular 19. It provides a more concise alternative to the styleUrls array when only one stylesheet is needed, while still supporting advanced features like placeholder interpolation and relative paths.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What is styleUrl?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Simplified Style Declaration</strong>:\n      A more concise way to specify a single stylesheet for a component.\n    </li>\n    <li>\n      <strong>Alternative to styleUrls</strong>:\n      Provides a cleaner syntax when only one stylesheet is needed.\n    </li>\n    <li>\n      <strong>Enhanced in Angular 19</strong>:\n      Supports dynamic values, relative paths, and optimization features.\n    </li>\n    <li>\n      <strong>Compatible with styleUrls</strong>:\n      Can be used alongside styleUrls for additional stylesheets when needed.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Basic styleUrl Example</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"basicExampleCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Using styleUrl with Additional Styles</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"multipleStylesCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Combining styleUrl with Inline Styles</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"inlineWithStyleUrlCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular 19 styleUrl Enhancements</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19EnhancementsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>styleUrl vs. styleUrls Comparison</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Feature</th>\n        <th class=\"py-3 px-4 text-left\">styleUrl</th>\n        <th class=\"py-3 px-4 text-left\">styleUrls</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Syntax</td>\n        <td class=\"py-3 px-4\">Single string value</td>\n        <td class=\"py-3 px-4\">Array of strings</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Multiple Stylesheets</td>\n        <td class=\"py-3 px-4\">Not supported (single file only)</td>\n        <td class=\"py-3 px-4\">Supported natively</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Dynamic Interpolation</td>\n        <td class=\"py-3 px-4\">Supported in Angular 19+</td>\n        <td class=\"py-3 px-4\">Limited support</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Bundle Optimization</td>\n        <td class=\"py-3 px-4\">Enhanced in Angular 19</td>\n        <td class=\"py-3 px-4\">Standard optimization</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Choose the Right Style Approach</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use styleUrl for Single Stylesheets</strong>:\n          When a component only needs one stylesheet, prefer styleUrl for cleaner syntax.\n        </li>\n        <li>\n          <strong>Combine with styleUrls When Necessary</strong>:\n          For components that need multiple stylesheets, use styleUrl for the main styles and styleUrls for additional style files.\n        </li>\n        <li>\n          <strong>Consider Inline Styles for Critical CSS</strong>:\n          Use the styles property alongside styleUrl for critical CSS that should load immediately.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Organize Styles Effectively</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Component-Specific Styles</strong>:\n          Keep component-specific styles in the file referenced by styleUrl.\n        </li>\n        <li>\n          <strong>Shared Styles</strong>:\n          Place shared styles in separate files and reference them with styleUrls.\n        </li>\n        <li>\n          <strong>Follow a Consistent Pattern</strong>:\n          Adopt a consistent approach across your application for better maintainability.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Dynamic Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Interpolation for Theming</strong>:\n          Take advantage of styleUrl interpolation for theme switching or feature toggles.\n        </li>\n        <li>\n          <strong>Implement Conditional Styling</strong>:\n          Use dynamic styleUrl paths to load different styles based on app state.\n        </li>\n        <li>\n          <strong>Plan for Reactivity</strong>:\n          Remember that changing variables in dynamic styleUrl paths will trigger style reloading.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize for Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Keep Stylesheet Size in Check</strong>:\n          Split large stylesheets into logical chunks to improve loading times.\n        </li>\n        <li>\n          <strong>Use Relative Paths Carefully</strong>:\n          Take advantage of relative path support in Angular 19+ for better organization.\n        </li>\n        <li>\n          <strong>Leverage Build Optimizations</strong>:\n          Angular 19's enhanced style bundling will help optimize styleUrl references.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Maintain Compatibility</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Check Version Support</strong>:\n          Remember that styleUrl is only fully supported in Angular 19+.\n        </li>\n        <li>\n          <strong>Provide Backwards Compatibility</strong>:\n          Consider using styleUrls for libraries that need to support older Angular versions.\n        </li>\n        <li>\n          <strong>Document Usage Patterns</strong>:\n          Clearly document your team's approach to using styleUrl vs. styleUrls.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Cleaner Syntax</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">More Concise</span>:\n          Simpler, more readable syntax for the common case of a single stylesheet.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Less Boilerplate</span>:\n          Eliminates unnecessary array syntax when only one stylesheet is needed.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Intuitive</span>:\n          Syntax more closely matches other component metadata properties.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Features in Angular 19</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Dynamic Paths</span>:\n          Support for interpolated values in stylesheet paths.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Improved Relative Paths</span>:\n          Better handling of relative paths with special prefixes like $styles/.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Bundle Optimization</span>:\n          Enhanced style bundling and tree-shaking for better performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Flexibility</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Compatible with styleUrls</span>:\n          Can be used alongside styleUrls for additional stylesheets.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Works with Inline Styles</span>:\n          Can be combined with the styles property for hybrid styling approaches.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Theme Switching</span>:\n          Supports theme switching through dynamic path interpolation.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Modern Development Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Aligns with Best Practices</span>:\n          Encourages component-specific stylesheets for better encapsulation.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">IDE Support</span>:\n          Better IDE integration and type checking for stylesheet paths.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Future-Ready</span>:\n          Prepared for future Angular styling enhancements.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Limited to Single Stylesheet</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">One File Only</span>:\n          Cannot specify multiple stylesheets directly with styleUrl alone.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Needs styleUrls Fallback</span>:\n          Still requires styleUrls for components with multiple stylesheet needs.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Potential Inconsistency</span>:\n          May lead to mixed usage patterns across an application.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Version Compatibility</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Angular 19+ Requirement</span>:\n          Enhanced features only available in Angular 19 and later.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Migration Concerns</span>:\n          Requires updating code when upgrading from older versions.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Library Compatibility</span>:\n          May not be suitable for libraries that support multiple Angular versions.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Dynamic Feature Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Runtime Changes</span>:\n          Changing interpolated values causes style reloading, which may impact performance.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Error Handling</span>:\n          Dynamic paths that resolve to missing files may be harder to debug.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Testing Complexity</span>:\n          Adds complexity to unit testing when styles are dynamically loaded.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Adoption</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">New Pattern</span>:\n          Requires learning and adjusting to a new styling approach.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Team Consistency</span>:\n          May be challenging to ensure consistent usage across development teams.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Documentation</span>:\n          Newer feature with evolving best practices and documentation.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Component Styling</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Approaches to styling Angular components, including various options like inline styles, external stylesheets, and CSS-in-JS.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to styleUrl</strong>:\n          styleUrl is one approach to component styling that focuses on a single external stylesheet.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>View Encapsulation</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          How Angular isolates component styles to prevent them from affecting other components.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to styleUrl</strong>:\n          Styles loaded via styleUrl still follow Angular's view encapsulation rules.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Theming</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Implementing theme support in Angular applications, allowing users to switch between different visual styles.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to styleUrl</strong>:\n          Dynamic styleUrl paths with interpolation can be used for theme switching.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular Builder</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Tools that process and bundle Angular applications during the build process.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to styleUrl</strong>:\n          Angular 19 builders include optimizations for styleUrl references and bundling.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>CSS Preprocessors</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Tools like Sass, Less, and Stylus that extend CSS with features like variables and nesting.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to styleUrl</strong>:\n          styleUrl supports preprocessor files just like styleUrls, using file extensions like .scss or .less.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Lazy Loading Styles</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Loading styles only when they are needed, typically alongside lazy-loaded components.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to styleUrl</strong>:\n          Styles specified with styleUrl in lazy-loaded components benefit from automatic lazy loading.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>CSS Modules</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          A CSS file in which all class names and animation names are scoped locally by default.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to styleUrl</strong>:\n          Angular's component styling approach with styleUrl provides similar benefits to CSS Modules through view encapsulation.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-subscriber',\n  templateUrl: './subscriber.component.html',\n  styleUrls: ['./subscriber.component.scss']\n})\nexport class SubscriberComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/subscriber/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/subscriber/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/subscriber/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/subscriber/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n      this.http.get('assets/codes/subscriber/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n  }\n}\n\n\n\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    subscriber\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      Creating a Subscriber\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      Unsubscribing from a Subscriber\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      Checking if a Subscriber is Unsubscribed\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      Using AsyncPipe to Subscribe to an Observable\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      Using Operators with Subscribers\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n\n  </p>\n</ng-template>\n\n\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      Subscribers provide a simple way to handle asynchronous data in Angular applications, making it easy to subscribe to Observables and handle emitted values.\n    </li>\n    <li>\n      Subscribers can be used to filter and manipulate data emitted by Observables using operators, which allows for more flexible and efficient handling of data streams.\n    </li>\n    <li>\n      Angular Subscribers support the use of the async pipe, which simplifies template syntax and reduces the need for manual subscription and unsubscription.\n    </li>\n    <li>\n      Subscribers can be used to manage memory effectively by unsubscribing from Observables in the ngOnDestroy lifecycle hook.\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      Subscribers can be prone to memory leaks if not properly managed, which can result in performance issues and crashes.\n    </li>\n    <li>\n      The use of Subscribers can lead to verbose and complex code if not properly structured, especially when working with multiple Observables and Subscribers.\n    </li>\n    <li>\n      Subscribers can be overused, which can result in unnecessary processing and data duplication.\n    </li>\n  </ol>\n\n\n  <br>\n\n  <p>\n    Overall, Angular Subscribers are a powerful tool for handling asynchronous data in Angular applications. However, it is important to use them judiciously and follow best practices to ensure that they are used effectively and do not lead to performance issues or memory leaks.\n  </p>\n\n  </ng-template>\n\n\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Some related topics to Angular Subscribers:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Observables</strong>\n        <p>\n          Angular Subscribers are used to subscribe to Observables, which are a way to represent asynchronous data streams. Observables allow you to easily handle asynchronous data in your Angular applications.\n        </p>\n      </li>\n      <li>\n        <strong>Reactive programming</strong>\n        <p>\n          Reactive programming is a programming paradigm that emphasizes the use of Observables and Subscribers to handle asynchronous data. Reactive programming is becoming more popular in modern web development, and Angular has embraced this approach with its support for Observables.\n        </p>\n      </li>\n      <li>\n        <strong>RxJS</strong>\n        <p>\n          RxJS is a library of reactive programming utilities that provides a wide range of functions and operators for working with Observables and Subscribers. Angular includes RxJS as a dependency, and it is used extensively throughout the Angular framework.\n        </p>\n      </li>\n      <li>\n        <strong>Memory management:</strong>\n        <p>\n          Proper memory management is important when working with Observables and Subscribers, as subscribing to an Observable creates a reference to it that can cause memory leaks if not properly managed. Angular provides lifecycle hooks and other tools to help manage memory when working with Subscribers.\n        </p>\n      </li>\n      <li>\n        <strong>Best practices</strong>\n        <p>\n          There are several best practices to keep in mind when working with Subscribers in Angular, such as using the async pipe when possible, unsubscribing from Subscribers in the ngOnDestroy lifecycle hook, and using operators to transform and manipulate Observables before subscribing to them.\n        </p>\n      </li>\n    </ol>\n\n    <br>\n\n    <p>\n      Understanding these related topics can help you work more effectively with Angular Subscribers and Observables, and create more efficient and maintainable Angular applications.\n    </p>\n\n  </ng-template>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-template-form',\n  templateUrl: './template-form.component.html',\n  styleUrls: ['./template-form.component.scss']\n})\nexport class TemplateFormComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n  code_7 = '';\n  code_8 = '';\n  code_9 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/template-form/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/template-form/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/template-form/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/template-form/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n      this.http.get('assets/codes/template-form/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n    this.http.get('assets/codes/template-form/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n    this.http.get('assets/codes/template-form/notes/code_7.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_7 = data);\n\n    this.http.get('assets/codes/template-form/notes/code_8.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_8 = data);\n\n      this.http.get('assets/codes/template-form/notes/code_9.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_9 = data);\n\n  }\n}\n\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    template driven form\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      Import FormsModule\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      Create a form in the template\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      Add validation to form controls\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      Disable the submit button if the form is invalid\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      Access form controls and their values\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      Display validation errors\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      Use ngModel with ngModelChange\n\n      <button (click)=\"code7.hidden = !code7.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code7 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_7\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      Add radio buttons to the form\n\n      <button (click)=\"code8.hidden = !code8.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code8 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_8\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n    <li>\n      Add checkboxes to the form\n\n      <button (click)=\"code9.hidden = !code9.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code9 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_9\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Angular template-driven forms provide a simple way to create forms with validation and data binding using ngModel. They are a good option for small to medium-sized forms that require basic validation. However, they may not be as flexible as reactive forms and can be harder to scale for large, complex forms.\n  </p>\n</ng-template>\n\n\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Easy to learn</strong>\n      <p>\n        Angular template-driven forms are easier to learn and use compared to reactive forms, especially for developers who are new to Angular.\n      </p>\n    </li>\n    <li>\n      <strong>Rapid development</strong>\n      <p>\n        They allow for rapid form development by using data binding and built-in form validation directives.\n      </p>\n    </li>\n    <li>\n      <strong>Minimal coding</strong>\n      <p>\n        Angular template-driven forms require minimal coding, as most of the code is generated automatically by Angular.\n      </p>\n    </li>\n    <li>\n      <strong>Two-way data binding</strong>\n      <p>\n        Angular template-driven forms allow for two-way data binding using ngModel, which simplifies form data management and improves user experience.\n      </p>\n    </li>\n    <li>\n      <strong>Simple use cases:</strong>\n      <p>\n        They are suitable for simple use cases, such as login forms, contact forms, and surveys.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Limited control</strong>\n      <p>\n        Angular template-driven forms provide limited control over form elements, compared to reactive forms.\n      </p>\n    </li>\n    <li>\n      <strong>Limited scalability</strong>\n      <p>\n        They may not be scalable for complex forms with dynamic behavior and validation, as the template code can quickly become hard to maintain.\n      </p>\n    </li>\n    <li>\n      <strong>Limited testing</strong>\n      <p>\n        Unit testing of Angular template-driven forms can be difficult, as the form logic is tightly coupled with the template.\n      </p>\n    </li>\n    <li>\n      <strong>Limited customization</strong>\n      <p>\n        They offer limited customization options, such as custom validators and custom form controls, compared to reactive forms.\n      </p>\n    </li>\n    <li>\n      <strong>Difficulty with reuse</strong>\n      <p>\n        Reusing form code across multiple components can be difficult with Angular template-driven forms, as they are tightly coupled to the component's template.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Overall, Angular template-driven forms are a good choice for simple forms that require basic validation and data binding. However, for more complex forms with dynamic behavior and validation, reactive forms may be a better choice. It is important to carefully consider the requirements and limitations of each approach before deciding which one to use in an Angular application.\n  </p>\n\n  </ng-template>\n\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Some related topics to Angular template-driven forms:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Form validation</strong>\n        <p>\n          Angular template-driven forms provide easy validation for forms using built-in directives such as required, minlength, maxlength, and pattern.\n        </p>\n      </li>\n      <li>\n        <strong>Two-way data binding</strong>\n        <p>\n          Angular template-driven forms allow for two-way data binding using ngModel, which automatically updates the form control's value and the component property's value.\n        </p>\n      </li>\n      <li>\n        <strong>Form submission</strong>\n        <p>\n          Form submission in Angular template-driven forms is handled by the ngSubmit directive, which allows for executing a function when the form is submitted.\n        </p>\n      </li>\n      <li>\n        <strong>Handling form data</strong>\n        <p>\n          Form data in Angular template-driven forms can be accessed through the ngForm directive, which provides access to form controls and their values.\n        </p>\n      </li>\n      <li>\n        <strong>Template-driven form vs. reactive form</strong>\n        <p>\n          Template-driven forms are simpler and quicker to set up, but reactive forms are more flexible and can handle complex forms with ease.\n        </p>\n      </li>\n      <li>\n        <strong>FormArray</strong>\n        <p>\n          FormArray is used to manage an array of FormControl, FormGroup or FormArray objects, such as a list of checkboxes, multiple form rows or a list of items.\n        </p>\n      </li>\n      <li>\n        <strong>Async validation</strong>\n        <p>\n          Asynchronous validators are functions that take a control and return a promise or observable that emits validation errors. They are useful when the validation logic depends on external factors, such as a network request.\n        </p>\n      </li>\n    </ol>\n\n    <br>\n\n    <p>\n      Overall, Angular template-driven forms are a powerful tool for building forms in Angular applications. They provide easy validation and data binding, and can be used for simple to moderately complex forms. However, for more complex forms with dynamic behavior and validation, reactive forms may be a better choice.\n    </p>\n\n  </ng-template>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { takeUntil } from 'rxjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.scss']\n})\nexport class TemplateComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  code_1 = '';\n  code_2 = '';\n  code_3 = '';\n  code_4 = '';\n  code_5 = '';\n  code_6 = '';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    super()\n  }\n\n  ngOnInit() {\n    this.http.get('assets/codes/template/notes/code_1.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_1 = data);\n\n    this.http.get('assets/codes/template/notes/code_2.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_2 = data);\n\n    this.http.get('assets/codes/template/notes/code_3.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_3 = data);\n\n    this.http.get('assets/codes/template/notes/code_4.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_4 = data);\n\n      this.http.get('assets/codes/template/notes/code_5.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_5 = data);\n\n      this.http.get('assets/codes/template/notes/code_6.txt', { responseType: 'text' })\n      .pipe(takeUntil(this.toUnsubscribe$))\n      .subscribe(data => this.code_6 = data);\n\n  }\n}\n\n\n\n\n","<section class=\"p-2\">\n  <p class=\"heading-1 mb-2\">\n    template\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n\n      </div>\n    </div>\n\n  </div>\n</section>\n\n\n<ng-template #notesRef>\n  <p>\n  </p>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      Interpolation\n\n      <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code1 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_1\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      Property Binding\n\n      <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code2 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_2\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      Event Binding\n\n      <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code3 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_3\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      Two-Way Binding\n\n      <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code4 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_4\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      ngIf Directive\n\n      <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code5 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_5\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n    <li>\n      ngFor Directive\n\n      <button (click)=\"code6.hidden = !code6.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n      <span #code6 hidden copyToClipboard>\n        <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n          <span>typescript</span>\n          <span class=\"copy-button-wrapper bg-gray-700\"></span>\n        </div>\n\n        <pre>\n          <code\n            [highlight]=\"code_6\"\n            [languages]=\"['typescript']\">\n          </code>\n        </pre>\n      </span>\n\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n\n  </p>\n</ng-template>\n\n\n\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Easy to Learn:</strong>\n      <p>\n        Angular templates use familiar HTML syntax, making them easy to learn for web developers with HTML and CSS experience.\n      </p>\n    </li>\n    <li>\n      <strong>Separation of Concerns</strong>\n      <p>\n        Angular templates allow for a clear separation of concerns between presentation and logic, making it easier to maintain and update code.\n      </p>\n    </li>\n    <li>\n      <strong>Data Binding</strong>\n      <p>\n        Angular templates allow for easy data binding between components and the view, reducing boilerplate code and making it easier to manage application state.\n      </p>\n    </li>\n    <li>\n      <strong>Declarative Syntax</strong>\n      <p>\n        Angular templates use a declarative syntax, making it easier to write concise and readable code that is self-explanatory.\n      </p>\n    </li>\n    <li>\n      <strong>Testability</strong>\n      <p>\n        Angular templates are testable, making it easier to write and run unit tests for individual components and the application as a whole.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Complexity</strong>\n      <p>\n        Angular templates can become complex as applications grow, making it harder to manage and maintain code.\n      </p>\n    </li>\n    <li>\n      <strong>Template Bloat</strong>\n      <p>\n        Angular templates can become bloated with repeated or duplicated code, leading to a larger application size and reduced performance.\n      </p>\n    </li>\n    <li>\n      <strong>Limited Logic</strong>\n      <p>\n        Angular templates have limited logic capabilities, which can make it difficult to create complex data transformations or business logic.\n      </p>\n    </li>\n    <li>\n      <strong>Tight Coupling</strong>\n      <p>\n        Angular templates can create tight coupling between components and the view, making it harder to reuse and decouple code.\n      </p>\n    </li>\n    <li>\n      <strong>Performance</strong>\n      <p>\n        Angular templates can have an impact on application performance, particularly in larger or more complex applications. Techniques such as lazy loading and optimization can help mitigate this issue.\n      </p>\n    </li>\n  </ol>\n\n  <br>\n\n  <p>\n    Overall, Angular templates offer a powerful and flexible way to create dynamic and interactive user interfaces. While they do have some potential downsides, these can be mitigated with careful planning and use of best practices.\n  </p>\n\n  </ng-template>\n\n\n\n  <ng-template #topicsRef>\n    <p>\n      Some related topics to Angular templates:\n    </p>\n\n    <br>\n\n    <ol class=\"list-decimal px-10 text-sm\">\n      <li>\n        <strong>Directives</strong>\n        <p>\n          Angular templates use directives to add behavior to HTML elements. Directives can be structural, like *ngIf and *ngFor, or attribute-based, like [ngClass] and [ngStyle].\n        </p>\n      </li>\n      <li>\n        <strong>Template Syntax</strong>\n        <p>\n          Angular templates use a combination of HTML, Angular-specific syntax, and expressions to create dynamic views. Template syntax includes interpolation , property binding, event binding , two-way binding, and structural directives.\n        </p>\n      </li>\n      <li>\n        <strong>Template Reference Variables</strong>\n        <p>\n          Angular templates allow you to create references to elements and components using template reference variables. These variables are defined using the # symbol, and can be used to reference elements in event binding and two-way binding expressions.\n        </p>\n      </li>\n      <li>\n        <strong>Template-driven Forms</strong>\n        <p>\n          Angular templates can be used to create forms using the template-driven approach. Template-driven forms use Angular directives and template syntax to create form controls and handle user input.\n        </p>\n      </li>\n      <li>\n        <strong>Template Inheritance</strong>\n        <p>\n          Angular templates can be inherited by child components to create a consistent UI across an application. Template inheritance allows you to define a base template and extend it in child components.\n        </p>\n      </li>\n      <li>\n        <strong>Template Rendering</strong>\n        <p>\n          Angular templates are rendered by the browser using the DOM. The Angular compiler parses the template and generates the corresponding DOM elements, which are then inserted into the browser's rendering engine.\n        </p>\n      </li>\n      <li>\n        <strong>Performance Considerations</strong>\n        <p>\n          Angular templates can have an impact on application performance. Techniques such as lazy loading, change detection strategies, and optimization of expressions can help improve template rendering performance.\n        </p>\n      </li>\n    </ol>\n\n    <br>\n\n    <p>\n      Overall, Angular templates are a critical part of building Angular applications, and understanding their syntax and behavior is key to building effective and performant user interfaces.\n    </p>\n\n  </ng-template>\n","import { CommonModule } from '@angular/common';\nimport { Component, ViewChild, TemplateRef } from '@angular/core';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-universal',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './universal.component.html',\n  styleUrls: ['./universal.component.scss']\n})\nexport class UniversalComponent extends UnsubscribeService {\n  selectedTab = 'notes';\n\n  @ViewChild('notesTemplate', { static: true }) notesTemplate!: TemplateRef<any>;\n  @ViewChild('bestPracticesTemplate', { static: true }) bestPracticesTemplate!: TemplateRef<any>;\n  @ViewChild('prosConsTemplate', { static: true }) prosConsTemplate!: TemplateRef<any>;\n  @ViewChild('relatedTopicsTemplate', { static: true }) relatedTopicsTemplate!: TemplateRef<any>;\n\n  setupCode = `// Install Angular Universal\nng add @nguniversal/express-engine\n\n// This creates the following files:\n// - server.ts (Express server)\n// - main.server.ts (Entry point for server-side app)\n// - app.server.module.ts (Server module configuration)\n// - tsconfig.server.json (TypeScript config for server)`;\n\n  buildRunCode = `# Build the application for server-side rendering\nng build\nng run your-app-name:server\n\n# Run the server\nnode dist/your-app-name/server/main.js`;\n\n  serverModuleCode = `// app.server.module.ts\nimport { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}`;\n\n  angularJsonCode = `// angular.json (partial)\n{\n  \"projects\": {\n    \"your-app-name\": {\n      \"architect\": {\n        \"build\": { ... },\n        \"server\": {\n          \"builder\": \"@angular-devkit/build-angular:server\",\n          \"options\": {\n            \"outputPath\": \"dist/your-app-name/server\",\n            \"main\": \"server.ts\",\n            \"tsConfig\": \"tsconfig.server.json\"\n          }\n        }\n      }\n    }\n  }\n}`;\n\n  isBrowserCode = `// Check if code is running in browser or server\nimport { isPlatformBrowser } from '@angular/common';\nimport { Component, Inject, PLATFORM_ID } from '@angular/core';\n\n@Component({...})\nexport class MyComponent {\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {\n    if (isPlatformBrowser(this.platformId)) {\n      // Browser-only code (e.g., accessing window, localStorage)\n      console.log('Running in browser');\n    } else {\n      // Server-only code\n      console.log('Running on server');\n    }\n  }\n}`;\n\n  transferStateCode = `// Using TransferState to avoid duplicate HTTP requests\nimport { Component, OnInit, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\n\nconst USER_KEY = makeStateKey<any>('user');\n\n@Component({...})\nexport class UserComponent implements OnInit {\n  private http = inject(HttpClient);\n  private transferState = inject(TransferState);\n\n  user: any;\n\n  ngOnInit() {\n    // Try to get the state from server transfer\n    if (this.transferState.hasKey(USER_KEY)) {\n      this.user = this.transferState.get(USER_KEY, null);\n      // We've used the transferred state, so remove it\n      this.transferState.remove(USER_KEY);\n    } else {\n      // If not available in transfer state, make the API call\n      this.http.get('/api/user').subscribe(user => {\n        this.user = user;\n        // On server side, this will be transferred to the client\n        this.transferState.set(USER_KEY, user);\n      });\n    }\n  }\n}`;\n}\n","<div class=\"container\">\n  <h1>Angular Universal</h1>\n  <p>\n    Angular Universal is a technology that enables server-side rendering (SSR) for Angular applications. It allows your app to render on the server before sending HTML to the client, providing better performance, SEO, and user experience.\n  </p>\n\n  <div class=\"tab-navigation\">\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'notes'\"\n      (click)=\"selectedTab = 'notes'\">\n      Notes\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'bestPractices'\"\n      (click)=\"selectedTab = 'bestPractices'\">\n      Best Practices\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'prosCons'\"\n      (click)=\"selectedTab = 'prosCons'\">\n      Pros and Cons\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'relatedTopics'\"\n      (click)=\"selectedTab = 'relatedTopics'\">\n      Related Topics\n    </button>\n  </div>\n\n  <ng-container [ngSwitch]=\"selectedTab\">\n    <ng-container *ngSwitchCase=\"'notes'\">\n      <ng-container *ngTemplateOutlet=\"notesTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'bestPractices'\">\n      <ng-container *ngTemplateOutlet=\"bestPracticesTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'prosCons'\">\n      <ng-container *ngTemplateOutlet=\"prosConsTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'relatedTopics'\">\n      <ng-container *ngTemplateOutlet=\"relatedTopicsTemplate\"></ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n\n<ng-template #notesTemplate>\n  <h2>Overview</h2>\n  <p>\n    Angular Universal renders your Angular application on the server, generating static HTML that's sent to the browser. This approach combines the benefits of server-side rendering with Angular's client-side capabilities.\n  </p>\n\n  <h3>Benefits of Angular Universal</h3>\n  <ul class=\"benefits-list\">\n    <li>\n      <strong>Improved SEO:</strong> Search engines can crawl and index the fully rendered HTML content.\n    </li>\n    <li>\n      <strong>Faster First Contentful Paint:</strong> Users see rendered content quickly before the JavaScript bundles load.\n    </li>\n    <li>\n      <strong>Better Performance on Low-Power Devices:</strong> Less client-side processing required initially.\n    </li>\n    <li>\n      <strong>Improved Social Media Sharing:</strong> Proper preview images and metadata for social media platforms.\n    </li>\n  </ul>\n\n  <h3>How Angular Universal Works</h3>\n  <p>\n    The workflow of an Angular Universal application:\n  </p>\n  <div class=\"workflow-diagram\">\n    <h4>Request Flow:</h4>\n    <ol>\n      <li>User requests your application URL</li>\n      <li>Request is received by the server (Node.js with Express typically)</li>\n      <li>Angular Universal renders your application on the server</li>\n      <li>Server responds with fully rendered HTML</li>\n      <li>Browser displays the HTML immediately</li>\n      <li>Angular JavaScript bundles load in the background</li>\n      <li>Once loaded, Angular \"hydrates\" the application, taking over interaction handling</li>\n    </ol>\n  </div>\n\n  <h3>Setup and Installation</h3>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"setupCode\" [languages]=\"['bash']\"></code></pre>\n  </div>\n\n  <h3>Building and Running</h3>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"buildRunCode\" [languages]=\"['bash']\"></code></pre>\n  </div>\n\n  <h3>Server Module Configuration</h3>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"serverModuleCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Angular Configuration</h3>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"angularJsonCode\" [languages]=\"['json']\"></code></pre>\n  </div>\n</ng-template>\n\n<ng-template #bestPracticesTemplate>\n  <h2>Best Practices</h2>\n\n  <h3>Browser/Server Code Differentiation</h3>\n  <p>\n    Use platform detection to handle browser-specific code:\n  </p>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"isBrowserCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Managing State Transfer</h3>\n  <p>\n    Use TransferState to avoid duplicate data fetching:\n  </p>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"transferStateCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Additional Best Practices</h3>\n  <ul>\n    <li>\n      <strong>Avoid Browser-Only APIs:</strong> Window, document, localStorage, and other browser-specific APIs aren't available during server rendering. Use conditional checks or Angular abstractions.\n    </li>\n    <li>\n      <strong>Optimize for Time-to-First-Byte (TTFB):</strong> Keep server rendering efficient to minimize delays.\n    </li>\n    <li>\n      <strong>Implement Proper Caching:</strong> Use response caching strategies to reduce server load and improve performance.\n    </li>\n    <li>\n      <strong>Use Relative URLs:</strong> For API requests and asset references to ensure they work both on server and client.\n    </li>\n    <li>\n      <strong>Implement Pre-rendering for Static Content:</strong> Consider pre-rendering routes with static content during build time.\n    </li>\n    <li>\n      <strong>Optimize Bundle Size:</strong> Smaller bundles lead to quicker hydration after the initial server-rendered view.\n    </li>\n    <li>\n      <strong>Use Angular's Meta and Title Services:</strong> Ensure proper metadata for SEO and social sharing.\n    </li>\n  </ul>\n</ng-template>\n\n<ng-template #prosConsTemplate>\n  <h2>Pros and Cons</h2>\n\n  <h3>Advantages</h3>\n  <ul>\n    <li><strong>SEO Benefits:</strong> Better indexing by search engines</li>\n    <li><strong>Improved Performance:</strong> Faster initial rendering and Time to Interactive</li>\n    <li><strong>Progressive Enhancement:</strong> Content available before JavaScript loads</li>\n    <li><strong>Better Accessibility:</strong> Content available to users with JavaScript disabled</li>\n    <li><strong>Social Media Sharing:</strong> Proper preview cards on social platforms</li>\n  </ul>\n\n  <h3>Challenges and Limitations</h3>\n  <ul>\n    <li><strong>Increased Complexity:</strong> More complex architecture and deployment</li>\n    <li><strong>Server Requirements:</strong> Need for Node.js server infrastructure</li>\n    <li><strong>Development Overhead:</strong> Must account for both client and server environments</li>\n    <li><strong>Potential for Double HTTP Requests:</strong> If not using TransferState properly</li>\n    <li><strong>Additional Build/Deploy Steps:</strong> More complex CI/CD pipelines</li>\n  </ul>\n\n  <h3>Comparison: SSR vs CSR vs Pre-rendering</h3>\n  <table class=\"comparison-table\">\n    <thead>\n      <tr>\n        <th>Feature</th>\n        <th>Server-Side Rendering (SSR)</th>\n        <th>Client-Side Rendering (CSR)</th>\n        <th>Static Pre-rendering</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Initial Load Time</td>\n        <td>Fast (HTML ready)</td>\n        <td>Slower (wait for JS)</td>\n        <td>Fastest (pre-built HTML)</td>\n      </tr>\n      <tr>\n        <td>SEO</td>\n        <td>Good</td>\n        <td>Limited</td>\n        <td>Excellent</td>\n      </tr>\n      <tr>\n        <td>Server Load</td>\n        <td>High (per request)</td>\n        <td>Low</td>\n        <td>Build-time only</td>\n      </tr>\n      <tr>\n        <td>Dynamic Content</td>\n        <td>Supported</td>\n        <td>Supported</td>\n        <td>Limited (build-time only)</td>\n      </tr>\n      <tr>\n        <td>Development Complexity</td>\n        <td>Higher</td>\n        <td>Lower</td>\n        <td>Medium</td>\n      </tr>\n      <tr>\n        <td>Infrastructure</td>\n        <td>Node.js server</td>\n        <td>Static hosting</td>\n        <td>Static hosting</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #relatedTopicsTemplate>\n  <h2>Related Topics</h2>\n\n  <ul>\n    <li>\n      <strong>Server-Side Rendering (SSR):</strong> The underlying concept behind Angular Universal\n    </li>\n    <li>\n      <strong>Hydration:</strong> Process of attaching event listeners to server-rendered HTML\n    </li>\n    <li>\n      <strong>Partial Hydration:</strong> Selectively hydrating only parts of your application\n    </li>\n    <li>\n      <strong>TransferState:</strong> API for transferring state from server to client\n    </li>\n    <li>\n      <strong>Pre-rendering:</strong> Generating static HTML at build time rather than per request\n    </li>\n    <li>\n      <strong>App Shell:</strong> Minimal UI shown during app loading\n    </li>\n    <li>\n      <strong>SEO (Search Engine Optimization):</strong> Improving discoverability in search results\n    </li>\n    <li>\n      <strong>Express.js:</strong> Common Node.js framework used with Angular Universal\n    </li>\n  </ul>\n\n  <h3>Recent Angular Universal Updates</h3>\n  <p>\n    Angular 19 brings several improvements to Universal:\n  </p>\n  <ul>\n    <li>Improved performance for server-side rendering</li>\n    <li>Better integration with Angular signals</li>\n    <li>Enhanced hydration capabilities</li>\n    <li>Support for partial hydration</li>\n    <li>More streamlined setup process</li>\n  </ul>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { Component, ViewChild, TemplateRef } from '@angular/core';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-view-hierarchy',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './view-hierarchy.component.html',\n  styleUrls: ['./view-hierarchy.component.scss']\n})\nexport class ViewHierarchyComponent extends UnsubscribeService {\n  selectedTab = 'notes';\n\n  @ViewChild('notesTemplate', { static: true }) notesTemplate!: TemplateRef<any>;\n  @ViewChild('bestPracticesTemplate', { static: true }) bestPracticesTemplate!: TemplateRef<any>;\n  @ViewChild('prosConsTemplate', { static: true }) prosConsTemplate!: TemplateRef<any>;\n  @ViewChild('relatedTopicsTemplate', { static: true }) relatedTopicsTemplate!: TemplateRef<any>;\n\n  componentExampleCode = `@Component({\n  selector: 'app-parent',\n  template: \\`\n    <h1>Parent Component</h1>\n    <app-child></app-child>\n  \\`\n})\nexport class ParentComponent {}\n\n@Component({\n  selector: 'app-child',\n  template: \\`\n    <h2>Child Component</h2>\n    <app-grandchild></app-grandchild>\n  \\`\n})\nexport class ChildComponent {}\n\n@Component({\n  selector: 'app-grandchild',\n  template: \\`<h3>Grandchild Component</h3>\\`\n})\nexport class GrandchildComponent {}`\n\n  viewTreeCode = `// Component View Tree Example\n<app-parent> <!-- HostView for ParentComponent -->\n  #shadow-root (open)\n    <h1>Parent Component</h1> <!-- ElementNode -->\n    <app-child> <!-- ElementNode & Host for ChildComponent -->\n      #shadow-root (open)\n        <h2>Child Component</h2> <!-- ElementNode -->\n        <app-grandchild> <!-- ElementNode & Host for GrandchildComponent -->\n          #shadow-root (open)\n            <h3>Grandchild Component</h3> <!-- ElementNode -->\n        </app-grandchild>\n    </app-child>\n</app-parent>`;\n\n  embeddedViewsCode = `@Component({\n  selector: 'app-example',\n  template: \\`\n    <h1>View Container Example</h1>\n\n    <!-- Host View (Component View) -->\n\n    <!-- Embedded View 1: Created from structural directive -->\n    <div *ngIf=\"showContent\">\n      <p>This content is conditionally shown</p>\n    </div>\n\n    <!-- Embedded View 2: Created from ng-template -->\n    <ng-container *ngTemplateOutlet=\"myTemplate\"></ng-container>\n\n    <ng-template #myTemplate>\n      <p>This content comes from a template</p>\n    </ng-template>\n\n    <!-- Dynamic Container -->\n    <div #container></div>\n  \\`\n})\nexport class ExampleComponent implements AfterViewInit {\n  @ViewChild('container', { read: ViewContainerRef })\n  container!: ViewContainerRef;\n\n  @ViewChild('myTemplate') myTemplate!: TemplateRef<any>;\n\n  showContent = true;\n\n  ngAfterViewInit() {\n    // Programmatically create and insert an embedded view\n    const embeddedView = this.myTemplate.createEmbeddedView(null);\n    this.container.insert(embeddedView);\n  }\n}`\n\n  viewContainerRefCode = `import { Component, ViewChild, ViewContainerRef,\n  TemplateRef, ComponentFactoryResolver } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-content',\n  template: \\`\n    <div class=\"container\">\n      <button (click)=\"loadTemplate()\">Load Template</button>\n      <button (click)=\"loadComponent()\">Load Component</button>\n\n      <!-- This div will be our view container -->\n      <div #dynamicContainer></div>\n\n      <ng-template #sampleTemplate>\n        <div class=\"template-content\">\n          <h3>Dynamic Template Content</h3>\n          <p>This content was loaded dynamically.</p>\n        </div>\n      </ng-template>\n    </div>\n  \\`\n})\nexport class DynamicContentComponent {\n  @ViewChild('dynamicContainer', { read: ViewContainerRef })\n  container!: ViewContainerRef;\n\n  @ViewChild('sampleTemplate')\n  template!: TemplateRef<any>;\n\n  constructor(private cfr: ComponentFactoryResolver) {}\n\n  loadTemplate() {\n    // Clear previous content\n    this.container.clear();\n\n    // Create an embedded view from the template\n    const view = this.template.createEmbeddedView(null);\n\n    // Insert the view into the container\n    this.container.insert(view);\n  }\n\n  loadComponent() {\n    // Clear previous content\n    this.container.clear();\n\n    // Create component factory and component instance\n    const factory = this.cfr.resolveComponentFactory(DynamicComponent);\n    const componentRef = this.container.createComponent(factory);\n\n    // We can interact with the component instance\n    componentRef.instance.message = 'Hello from parent!';\n  }\n}`\n}\n","<div class=\"container\">\n  <h1>View Hierarchy in Angular</h1>\n  <p>\n    Angular's view hierarchy defines how components, templates, and DOM elements are organized and rendered. Understanding this hierarchy is crucial for effective component composition and dynamic content rendering.\n  </p>\n\n  <div class=\"tab-navigation\">\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'notes'\"\n      (click)=\"selectedTab = 'notes'\">\n      Notes\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'bestPractices'\"\n      (click)=\"selectedTab = 'bestPractices'\">\n      Best Practices\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'prosCons'\"\n      (click)=\"selectedTab = 'prosCons'\">\n      Pros and Cons\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'relatedTopics'\"\n      (click)=\"selectedTab = 'relatedTopics'\">\n      Related Topics\n    </button>\n  </div>\n\n  <ng-container [ngSwitch]=\"selectedTab\">\n    <ng-container *ngSwitchCase=\"'notes'\">\n      <ng-container *ngTemplateOutlet=\"notesTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'bestPractices'\">\n      <ng-container *ngTemplateOutlet=\"bestPracticesTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'prosCons'\">\n      <ng-container *ngTemplateOutlet=\"prosConsTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'relatedTopics'\">\n      <ng-container *ngTemplateOutlet=\"relatedTopicsTemplate\"></ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n\n<ng-template #notesTemplate>\n  <h2>Understanding View Hierarchy</h2>\n  <p>\n    In Angular, a view is the fundamental rendering unit that represents a portion of the UI. The view hierarchy is the tree-like structure of these UI components and their relationships.\n  </p>\n\n  <h3>Types of Views in Angular</h3>\n  <ul>\n    <li>\n      <strong>Host Views:</strong> Created for components. When you create a component, Angular creates a host view that hosts the component's template.\n    </li>\n    <li>\n      <strong>Embedded Views:</strong> Created from templates using structural directives like *ngIf, *ngFor, or from TemplateRef.\n    </li>\n  </ul>\n\n  <h3>Component Hierarchy Example</h3>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"componentExampleCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Resulting View Tree</h3>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"viewTreeCode\" [languages]=\"['html']\"></code></pre>\n  </div>\n\n  <div class=\"hierarchy-diagram\">\n    <div class=\"component level-1\">\n      <span class=\"view-type host\">Host View</span> ParentComponent\n      <div class=\"component level-2\">\n        <span class=\"view-type host\">Host View</span> ChildComponent\n        <div class=\"component level-3\">\n          <span class=\"view-type host\">Host View</span> GrandchildComponent\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <h3>Embedded Views & ViewContainerRef</h3>\n  <p>\n    Embedded views are created from templates using structural directives or manually through the ViewContainerRef API.\n  </p>\n\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"embeddedViewsCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Dynamic Content with ViewContainerRef</h3>\n  <p>\n    The ViewContainerRef is a powerful API for managing views dynamically, allowing for insertion, movement, and removal of views.\n  </p>\n\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"viewContainerRefCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n</ng-template>\n\n<ng-template #bestPracticesTemplate>\n  <h2>Best Practices</h2>\n\n  <h3>Component Design</h3>\n  <ul>\n    <li>\n      <strong>Keep component hierarchies shallow:</strong> Deep component trees can lead to performance issues. Consider flattening your component tree when possible.\n    </li>\n    <li>\n      <strong>Maintain logical component boundaries:</strong> Components should have a single responsibility and represent a coherent part of the UI.\n    </li>\n    <li>\n      <strong>Use content projection strategically:</strong> For reusable components that need to accept varying content.\n    </li>\n    <li>\n      <strong>Design for reusability:</strong> Components should be designed to be reused in different contexts when appropriate.\n    </li>\n  </ul>\n\n  <h3>View Management</h3>\n  <ul>\n    <li>\n      <strong>Avoid deep nesting of *ngIf and *ngFor:</strong> This creates many embedded views and can affect performance.\n    </li>\n    <li>\n      <strong>Clean up dynamically created views:</strong> Always call clear() on ViewContainerRef when components are destroyed to prevent memory leaks.\n    </li>\n    <li>\n      <strong>Use trackBy with *ngFor:</strong> This helps Angular identify which items have changed and need to be re-rendered.\n    </li>\n    <li>\n      <strong>Limit DOM manipulations:</strong> Excessive DOM manipulations can lead to performance issues, especially in complex applications.\n    </li>\n  </ul>\n\n  <h3>Performance Considerations</h3>\n  <ul>\n    <li>\n      <strong>Use OnPush change detection:</strong> This can significantly improve performance by reducing unnecessary change detection cycles.\n    </li>\n    <li>\n      <strong>Lazy load components:</strong> Load components only when needed to improve initial loading time.\n    </li>\n    <li>\n      <strong>Consider virtual scrolling:</strong> For lists with many items, virtual scrolling can greatly improve performance.\n    </li>\n    <li>\n      <strong>Optimize change detection:</strong> Use appropriate lifecycle hooks and avoid unnecessary data binding.\n    </li>\n  </ul>\n\n  <div class=\"diagram\">\n    <h4>Recommended View Hierarchy Pattern:</h4>\n    <ol>\n      <li>Smart/Container components at the top level (handle data and logic)</li>\n      <li>Presentation/UI components in the middle (display data, emit events)</li>\n      <li>Reusable UI elements at the bottom (buttons, inputs, etc.)</li>\n    </ol>\n  </div>\n</ng-template>\n\n<ng-template #prosConsTemplate>\n  <h2>Pros and Cons</h2>\n\n  <h3>Advantages of Angular's View Hierarchy</h3>\n  <ul>\n    <li><strong>Component-Based Architecture:</strong> Encourages reusable, modular code</li>\n    <li><strong>Clear Separation of Concerns:</strong> Components have well-defined responsibilities</li>\n    <li><strong>Powerful Rendering Control:</strong> Fine-grained control over how and when content is rendered</li>\n    <li><strong>Dynamic Content Capabilities:</strong> Views can be created and manipulated at runtime</li>\n    <li><strong>Change Detection Optimization:</strong> View hierarchy enables efficient change detection strategies</li>\n  </ul>\n\n  <h3>Challenges and Limitations</h3>\n  <ul>\n    <li><strong>Learning Curve:</strong> Understanding view manipulation APIs can be challenging</li>\n    <li><strong>Performance Overhead:</strong> Deep component hierarchies can impact performance</li>\n    <li><strong>Complexity:</strong> Dynamic view manipulation can lead to complex and hard-to-maintain code</li>\n    <li><strong>Memory Management:</strong> Improper view handling can lead to memory leaks</li>\n    <li><strong>Debugging Difficulty:</strong> Issues in dynamic views can be harder to debug</li>\n  </ul>\n\n  <h3>View Types Comparison</h3>\n  <table class=\"comparison-table\">\n    <thead>\n      <tr>\n        <th>Feature</th>\n        <th>Host Views</th>\n        <th>Embedded Views</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Creation</td>\n        <td>Created for components</td>\n        <td>Created from templates</td>\n      </tr>\n      <tr>\n        <td>Lifecycle Hooks</td>\n        <td>Has component lifecycle hooks</td>\n        <td>No component lifecycle hooks</td>\n      </tr>\n      <tr>\n        <td>Change Detection</td>\n        <td>Can use OnPush strategy</td>\n        <td>Follows parent's strategy</td>\n      </tr>\n      <tr>\n        <td>Dynamic Creation</td>\n        <td>ComponentFactoryResolver</td>\n        <td>TemplateRef.createEmbeddedView</td>\n      </tr>\n      <tr>\n        <td>Typical Use Cases</td>\n        <td>Standalone UI elements</td>\n        <td>Conditional content, lists</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #relatedTopicsTemplate>\n  <h2>Related Topics</h2>\n\n  <ul>\n    <li>\n      <strong>Components:</strong> The building blocks of Angular applications that create host views\n    </li>\n    <li>\n      <strong>Templates:</strong> Define the HTML and bindings that Angular renders\n    </li>\n    <li>\n      <strong>Content Projection:</strong> Allows components to accept content from their parent\n    </li>\n    <li>\n      <strong>Structural Directives:</strong> Create embedded views conditionally (*ngIf, *ngFor)\n    </li>\n    <li>\n      <strong>ViewChild/ViewChildren:</strong> Query child elements within a component's view\n    </li>\n    <li>\n      <strong>ContentChild/ContentChildren:</strong> Query projected content\n    </li>\n    <li>\n      <strong>Change Detection:</strong> How Angular determines when to update the DOM\n    </li>\n    <li>\n      <strong>Dynamic Component Loading:</strong> Creating components programmatically\n    </li>\n    <li>\n      <strong>Zones:</strong> Angular's mechanism for detecting changes\n    </li>\n    <li>\n      <strong>Rendering Pipeline:</strong> How Angular processes templates and updates the DOM\n    </li>\n  </ul>\n\n  <h3>Modern Angular Features Related to View Hierarchy</h3>\n  <ul>\n    <li>\n      <strong>Standalone Components:</strong> Simplifies component organization without NgModules\n    </li>\n    <li>\n      <strong>Signal-based Rendering:</strong> More efficient change detection with fine-grained reactivity\n    </li>\n    <li>\n      <strong>Deferrable Views:</strong> Load components lazily within templates\n    </li>\n    <li>\n      <strong>Hydration:</strong> Reusing server-rendered DOM instead of recreating it\n    </li>\n  </ul>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { Component, ViewChild, TemplateRef } from '@angular/core';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-view-transitions',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './view-transitions.component.html',\n  styleUrls: ['./view-transitions.component.scss']\n})\nexport class ViewTransitionsComponent extends UnsubscribeService {\n  selectedTab = 'notes';\n\n  @ViewChild('notesTemplate', { static: true }) notesTemplate!: TemplateRef<any>;\n  @ViewChild('bestPracticesTemplate', { static: true }) bestPracticesTemplate!: TemplateRef<any>;\n  @ViewChild('prosConsTemplate', { static: true }) prosConsTemplate!: TemplateRef<any>;\n  @ViewChild('relatedTopicsTemplate', { static: true }) relatedTopicsTemplate!: TemplateRef<any>;\n\n  basicExampleCode = `// In the component\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  animations: [\n    trigger('viewTransition', [\n      transition('* => *', [\n        style({ opacity: 0 }),\n        animate('300ms', style({ opacity: 1 }))\n      ])\n    ])\n  ]\n})\nexport class AppComponent {\n  // Component code\n}\n\n// In the template\n<div [@viewTransition]=\"currentRoute\">\n  <router-outlet></router-outlet>\n</div>`;\n\n  routerExampleCode = `// app-routing.module.ts\nimport { provideRouter, withViewTransitions } from '@angular/router';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(\n      routes,\n      withViewTransitions() // Enable view transitions\n    )\n  ]\n};`;\n\n  customTransitionsCode = `// app-routing.module.ts\nimport { provideRouter, withViewTransitions } from '@angular/router';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(\n      routes,\n      withViewTransitions({\n        skipInitialTransition: true, // Skip transition on initial load\n        onViewTransitionCreated: (transitionInfo) => {\n          // Custom logic when transition is created\n          console.log('View transition created:', transitionInfo);\n        }\n      })\n    )\n  ]\n};`;\n\n  targetedTransitionsCode = `// In component\nimport { Component } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: \\`\n    <div class=\"container\">\n      <a routerLink=\"/page1\"\n         [viewTransition]=\"'slide-right'\">Page 1</a>\n      <a routerLink=\"/page2\"\n         [viewTransition]=\"'slide-left'\">Page 2</a>\n\n      <router-outlet />\n    </div>\n  \\`,\n  standalone: true,\n  imports: [RouterOutlet, RouterLink]\n})\nexport class AppComponent {}`\n}\n","<div class=\"container\">\n  <h1>View Transitions API in Angular</h1>\n  <p>\n    Angular 19 introduces integration with the Web View Transitions API, which provides a standardized way to create smooth, animated transitions between different views and states in your web applications.\n  </p>\n\n  <div class=\"tab-navigation\">\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'notes'\"\n      (click)=\"selectedTab = 'notes'\">\n      Notes\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'bestPractices'\"\n      (click)=\"selectedTab = 'bestPractices'\">\n      Best Practices\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'prosCons'\"\n      (click)=\"selectedTab = 'prosCons'\">\n      Pros and Cons\n    </button>\n    <button\n      type=\"button\"\n      [class.active]=\"selectedTab === 'relatedTopics'\"\n      (click)=\"selectedTab = 'relatedTopics'\">\n      Related Topics\n    </button>\n  </div>\n\n  <ng-container [ngSwitch]=\"selectedTab\">\n    <ng-container *ngSwitchCase=\"'notes'\">\n      <ng-container *ngTemplateOutlet=\"notesTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'bestPractices'\">\n      <ng-container *ngTemplateOutlet=\"bestPracticesTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'prosCons'\">\n      <ng-container *ngTemplateOutlet=\"prosConsTemplate\"></ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'relatedTopics'\">\n      <ng-container *ngTemplateOutlet=\"relatedTopicsTemplate\"></ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n\n<ng-template #notesTemplate>\n  <h2>Overview</h2>\n  <p>\n    The View Transitions API provides a standardized way to animate changes in your web application, making page and state transitions more visually appealing and improving user experience.\n  </p>\n\n  <h3>Key Features:</h3>\n  <ul>\n    <li>Smooth transitions between routes</li>\n    <li>API integration with Angular Router</li>\n    <li>Control over transition timing and effects</li>\n    <li>Support for cross-fade, slide, and custom transitions</li>\n    <li>Browser-native implementation for performance</li>\n  </ul>\n\n  <h3>Basic Example:</h3>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"basicExampleCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Integration with Angular Router</h3>\n  <p>\n    Angular 19 provides built-in integration with the Router through the <code>withViewTransitions</code> feature:\n  </p>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"routerExampleCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Customizing Transitions</h3>\n  <p>\n    You can customize how transitions work with configuration options:\n  </p>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"customTransitionsCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n\n  <h3>Targeted Transitions</h3>\n  <p>\n    Angular allows you to specify different transitions for different links:\n  </p>\n  <div class=\"code-container\">\n    <pre><code [highlight]=\"targetedTransitionsCode\" [languages]=\"['typescript']\"></code></pre>\n  </div>\n</ng-template>\n\n<ng-template #bestPracticesTemplate>\n  <h2>Best Practices</h2>\n\n  <ul>\n    <li>\n      <strong>Keep transitions short:</strong> Aim for transitions that are 300ms or less. Anything longer can make your app feel sluggish.\n    </li>\n    <li>\n      <strong>Use appropriate easing:</strong> Different easings communicate different feelings. For most UI transitions, use ease-out or ease-in-out.\n    </li>\n    <li>\n      <strong>Consider reduced motion preferences:</strong> Respect user preferences for reduced motion using media queries.\n    </li>\n    <li>\n      <strong>Test across browsers:</strong> View Transitions API has varying levels of support across browsers.\n    </li>\n    <li>\n      <strong>Provide fallbacks:</strong> Have CSS-only fallbacks for browsers that don't support View Transitions API.\n    </li>\n    <li>\n      <strong>Don't overuse:</strong> Transitions should enhance UX, not distract from it. Use them purposefully.\n    </li>\n    <li>\n      <strong>Consider performance:</strong> Transition complex UIs carefully to avoid janky animations.\n    </li>\n  </ul>\n\n  <h3>Implementation Patterns</h3>\n  <ol>\n    <li>\n      <strong>Route Transitions:</strong> Use with router navigation to transition between pages.\n    </li>\n    <li>\n      <strong>Component State Transitions:</strong> Apply when component's internal state changes significantly.\n    </li>\n    <li>\n      <strong>List Item Transitions:</strong> Use when items are added/removed from lists.\n    </li>\n    <li>\n      <strong>Form Feedback Transitions:</strong> Apply subtle transitions for form validations and submissions.\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsTemplate>\n  <h2>Pros and Cons</h2>\n\n  <h3>Advantages</h3>\n  <ul>\n    <li><strong>Native Performance:</strong> Uses browser's native capabilities for smooth animations</li>\n    <li><strong>Easy Integration:</strong> Simple to add to existing Angular applications</li>\n    <li><strong>Better UX:</strong> Improves user experience by providing visual continuity</li>\n    <li><strong>Angular Integration:</strong> Built-in support with Router and declarative syntax</li>\n    <li><strong>Standardized:</strong> Uses web standards rather than framework-specific solutions</li>\n  </ul>\n\n  <h3>Limitations</h3>\n  <ul>\n    <li><strong>Browser Support:</strong> Not fully supported in all browsers</li>\n    <li><strong>Complex Transitions:</strong> Advanced transitions may require additional work</li>\n    <li><strong>Performance Overhead:</strong> Can introduce performance issues if overused</li>\n    <li><strong>Accessibility Concerns:</strong> Need to consider users who prefer reduced motion</li>\n  </ul>\n\n  <h3>Comparison with Other Animation Approaches</h3>\n  <table class=\"comparison-table\">\n    <thead>\n      <tr>\n        <th>Feature</th>\n        <th>View Transitions API</th>\n        <th>Angular Animations</th>\n        <th>CSS Transitions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Performance</td>\n        <td>Excellent (browser-native)</td>\n        <td>Good</td>\n        <td>Very Good</td>\n      </tr>\n      <tr>\n        <td>Complexity</td>\n        <td>Medium</td>\n        <td>High</td>\n        <td>Low</td>\n      </tr>\n      <tr>\n        <td>Control</td>\n        <td>Medium</td>\n        <td>High</td>\n        <td>Limited</td>\n      </tr>\n      <tr>\n        <td>Browser Support</td>\n        <td>Limited</td>\n        <td>Excellent</td>\n        <td>Excellent</td>\n      </tr>\n      <tr>\n        <td>Integration with Router</td>\n        <td>Built-in with Angular 19</td>\n        <td>Yes, with setup</td>\n        <td>Requires manual integration</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #relatedTopicsTemplate>\n  <h2>Related Topics</h2>\n\n  <ul>\n    <li>\n      <strong>Angular Router:</strong> Works closely with the Router for page transitions\n    </li>\n    <li>\n      <strong>Angular Animations:</strong> Can be used alongside View Transitions for more complex animations\n    </li>\n    <li>\n      <strong>CSS Animations:</strong> Used as fallbacks for browsers without View Transitions support\n    </li>\n    <li>\n      <strong>Server-Side Rendering (SSR):</strong> View Transitions can enhance user experience in SSR applications\n    </li>\n    <li>\n      <strong>Performance Optimization:</strong> Understanding browser rendering to optimize transitions\n    </li>\n    <li>\n      <strong>Accessibility:</strong> Ensuring transitions don't affect users with motion sensitivity\n    </li>\n  </ul>\n\n  <h3>Further Reading</h3>\n  <ul>\n    <li>\n      <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API\" target=\"_blank\">MDN Web Docs: View Transitions API</a>\n    </li>\n    <li>\n      <a href=\"https://angular.dev/guide/animations\" target=\"_blank\">Angular Animations Guide</a>\n    </li>\n    <li>\n      <a href=\"https://angular.dev/guide/routing\" target=\"_blank\">Angular Routing & Navigation</a>\n    </li>\n  </ul>\n</ng-template>\n","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-zoneless-applications',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './zoneless-applications.component.html',\n  styleUrls: ['./zoneless-applications.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ZonelessApplicationsComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Template references for the tabs\n  @ViewChild('notesRef') notesRef!: TemplateRef<any>;\n  @ViewChild('bestRef') bestRef!: TemplateRef<any>;\n  @ViewChild('prosConsRef') prosConsRef!: TemplateRef<any>;\n  @ViewChild('topicsRef') topicsRef!: TemplateRef<any>;\n\n  // Code examples for zoneless applications\n  basicZonelessAppCode = `// main.ts - Bootstrap without Zone.js\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\n\n// Configure the application without Zone.js\nbootstrapApplication(AppComponent, {\n  ...appConfig,\n  providers: [\n    ...appConfig.providers,\n    { provide: NgZone, useValue: new NoopNgZone() }\n  ]\n}).catch(err => console.error(err));`;\n\n  manualChangeDetectionCode = `// Component using manual change detection\nimport { Component, ChangeDetectorRef, inject } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  standalone: true,\n  template: \\`\n    <div>\n      <h2>Counter: {{ count }}</h2>\n      <button (click)=\"increment()\">Increment</button>\n    </div>\n  \\`\n})\nexport class CounterComponent {\n  count = 0;\n  private cdr = inject(ChangeDetectorRef);\n\n  increment() {\n    this.count++;\n\n    // Manually trigger change detection after updating state\n    this.cdr.detectChanges();\n  }\n}`;\n\n  signalBasedZonelessCode = `// Signal-based component in zoneless application\nimport { Component, signal, computed, effect, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  template: \\`\n    <div>\n      <h2>User Profile</h2>\n      @if (isLoading()) {\n        <p>Loading...</p>\n      } @else {\n        <div>\n          <h3>{{ userName() }}</h3>\n          <p>Email: {{ userEmail() }}</p>\n        </div>\n      }\n      <button (click)=\"refresh()\">Refresh</button>\n    </div>\n  \\`\n})\nexport class UserProfileComponent {\n  private http = inject(HttpClient);\n\n  // State signals\n  private userData = signal<any>(null);\n  isLoading = signal(true);\n\n  // Derived state with computed signals\n  userName = computed(() => this.userData()?.name || 'Unknown');\n  userEmail = computed(() => this.userData()?.email || 'No email');\n\n  constructor() {\n    // Load initial data\n    this.loadUserData();\n  }\n\n  loadUserData() {\n    this.isLoading.set(true);\n\n    this.http.get('https://api.example.com/user/1')\n      .subscribe({\n        next: (data) => {\n          this.userData.set(data);\n          this.isLoading.set(false);\n        },\n        error: (err) => {\n          console.error('Failed to load user data', err);\n          this.isLoading.set(false);\n        }\n      });\n  }\n\n  refresh() {\n    this.loadUserData();\n  }\n}`;\n\n  v19EnhancementsCode = `// Angular 19 Zoneless Enhancements\n\n// 1. Application config with zoneless setup\nimport { ApplicationConfig } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { provideHttpClient } from '@angular/common/http';\nimport { provideZonelessChangeDetection } from '@angular/core';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter([/* routes */]),\n    provideHttpClient(),\n    // New in Angular 19: Easy zoneless setup\n    provideZonelessChangeDetection()\n  ]\n};\n\n// 2. Component with automatic change detection via signals\nimport { Component, signal, computed, effect } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  template: \\`\n    <div>\n      <h1>Dashboard</h1>\n      <p>Status: {{ status() }}</p>\n      <button (click)=\"updateStatus()\">Update</button>\n\n      <!-- Automatic rendering with control flow -->\n      @for (item of items(); track item.id) {\n        <div>{{ item.name }}</div>\n      }\n    </div>\n  \\`\n})\nexport class DashboardComponent {\n  // State managed with signals\n  status = signal('Online');\n  items = signal([\n    { id: 1, name: 'Item 1' },\n    { id: 2, name: 'Item 2' }\n  ]);\n\n  // Signal-based methods trigger automatic UI updates\n  updateStatus() {\n    this.status.set('Updated: ' + new Date().toLocaleTimeString());\n\n    // Add a new item\n    this.items.update(items => [\n      ...items,\n      { id: items.length + 1, name: \\`Item \\${items.length + 1}\\` }\n    ]);\n\n    // No manual change detection needed!\n  }\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Load code examples from files if needed\n    // Currently using inline examples\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Zoneless Applications\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Zoneless Applications</span>\n      in Angular 19 introduce a paradigm shift in how change detection works. By removing the dependency on Zone.js, these applications provide superior performance through optimized rendering cycles, reduced memory footprint, and better integration with signals for fine-grained reactivity.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What are Zoneless Applications?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>No Zone.js Dependency</strong>:\n      Angular applications that run without Zone.js, eliminating the automatic change detection it provides.\n    </li>\n    <li>\n      <strong>Explicit Change Detection</strong>:\n      Applications where change detection must be triggered explicitly or through reactive primitives like signals.\n    </li>\n    <li>\n      <strong>Performance Benefits</strong>:\n      Improved performance through fewer change detection cycles, reduced bundle size, and lower memory usage.\n    </li>\n    <li>\n      <strong>Modern Angular Pattern</strong>:\n      Part of Angular's modern architecture focusing on fine-grained reactivity and developer control.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Basic Zoneless Application Setup</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"basicZonelessAppCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Manual Change Detection in Zoneless Apps</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"manualChangeDetectionCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Signal-Based Reactivity in Zoneless Apps</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"signalBasedZonelessCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Zoneless Enhancements</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19EnhancementsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Key Features of Zoneless Applications in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Simplified Setup</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>New <code>provideZonelessChangeDetection()</code> function for easy zoneless application configuration</li>\n        <li>Automatic integration with Angular's build tools to exclude Zone.js from the bundle</li>\n        <li>Clear error messages when attempting to use Zone-dependent features in zoneless mode</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signals Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Seamless integration with Signal-based components for automatic UI updates</li>\n        <li>Support for signal-based inputs, outputs, and view queries in zoneless applications</li>\n        <li>Optimized change propagation paths that minimize unnecessary DOM updates</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimizations</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Smaller bundle size without Zone.js (~45KB reduction)</li>\n        <li>Lower memory usage due to fewer event listeners and change detection cycles</li>\n        <li>Improved startup time without Zone.js initialization overhead</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Experience</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved debugging experience with clearer component update tracking</li>\n        <li>DevTools support for visualizing signal-based updates in zoneless applications</li>\n        <li>Better TypeScript integration with type-safe signal APIs</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration with Other Angular 19 Features</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Works perfectly with built-in control flow for reactive template updates</li>\n        <li>Compatible with partial hydration for optimized server-rendered applications</li>\n        <li>Can be combined with deferrable views for maximum performance optimizations</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Performance Comparison: Zoneless vs Zone-based Applications</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Metric</th>\n        <th class=\"py-3 px-4 text-left\">Zoneless Apps</th>\n        <th class=\"py-3 px-4 text-left\">Zone-based Apps</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Bundle Size</td>\n        <td class=\"py-3 px-4\">Smaller (~45KB less)</td>\n        <td class=\"py-3 px-4\">Larger (includes Zone.js)</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Initial Load Time</td>\n        <td class=\"py-3 px-4\">15-25% faster</td>\n        <td class=\"py-3 px-4\">Slower due to Zone setup</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Memory Usage</td>\n        <td class=\"py-3 px-4\">Up to 30% lower</td>\n        <td class=\"py-3 px-4\">Higher due to Zone tracking</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Change Detection</td>\n        <td class=\"py-3 px-4\">Explicit, fine-grained</td>\n        <td class=\"py-3 px-4\">Automatic, but often redundant</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Use Signal-Based Components</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Prefer Signal Components</strong>:\n          Use signal-based components for automatic UI updates without Zone.js.\n        </li>\n        <li>\n          <strong>Input/Output Signals</strong>:\n          Use input and output signals for component communication.\n        </li>\n        <li>\n          <strong>Computed for Derived State</strong>:\n          Use computed signals for derived state to avoid manual calculations.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Manage Change Detection Carefully</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Be Explicit</strong>:\n          For non-signal components, always be explicit about when change detection needs to run.\n        </li>\n        <li>\n          <strong>Batch Updates</strong>:\n          Group related state changes to trigger change detection only once.\n        </li>\n        <li>\n          <strong>Use DetectChanges Strategically</strong>:\n          Call detectChanges() only when necessary and at the right component level.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize for Zoneless Mode</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Avoid Zone-dependent APIs</strong>:\n          Stay away from APIs that rely on Zone.js like NgZone.run().\n        </li>\n        <li>\n          <strong>Replace setTimeout/setInterval</strong>:\n          Use signal-based alternatives or manual change detection with these APIs.\n        </li>\n        <li>\n          <strong>HTTP Request Handling</strong>:\n          Explicitly update UI after HTTP requests complete.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Combine with Other Performance Techniques</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use with OnPush</strong>:\n          Combine zoneless applications with OnPush strategy for maximum performance.\n        </li>\n        <li>\n          <strong>Implement Partial Hydration</strong>:\n          Use partial hydration with zoneless applications for optimized SSR performance.\n        </li>\n        <li>\n          <strong>Leverage Deferrable Views</strong>:\n          Use deferrable views to further optimize loading performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Testing and Debugging</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>ComponentFixture.detectChanges</strong>:\n          Use ComponentFixture.detectChanges() explicitly in tests.\n        </li>\n        <li>\n          <strong>Angular DevTools</strong>:\n          Use Angular DevTools to visualize component updates in zoneless mode.\n        </li>\n        <li>\n          <strong>Performance Monitoring</strong>:\n          Regularly measure performance metrics to ensure zoneless mode provides benefits.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Performance Improvements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Smaller Bundle Size</span>:\n          Removing Zone.js reduces the application bundle by approximately 45KB.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Memory Usage</span>:\n          Less memory consumption without Zone.js's event tracking overhead.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Faster Startup Time</span>:\n          Applications initialize more quickly without Zone.js setup time.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Fine-Grained Change Detection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Explicit Control</span>:\n          Precise control over when change detection runs, eliminating unnecessary cycles.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Signal-Based Updates</span>:\n          When using signals, only affected parts of the UI update, not the entire component tree.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Optimized Rendering</span>:\n          Reduced work for the browser with fewer DOM updates and style recalculations.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular 19 Specific Benefits</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Easy Configuration</span>:\n          New <code>provideZonelessChangeDetection()</code> makes setup simpler.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Signal Component Integration</span>:\n          Seamless integration with signal-based components for automatic UI updates.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Built-in Control Flow</span>:\n          Works perfectly with Angular's new control flow directives for reactive templates.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Clearer Mental Model</span>:\n          Explicit change detection creates a more predictable application behavior.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better Debugging</span>:\n          Easier to debug UI updates as they happen only when explicitly triggered.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Improved Tooling</span>:\n          Enhanced DevTools support for visualizing signal-based updates.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">New Mental Model</span>:\n          Requires a different approach to thinking about change detection.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Explicit Updates</span>:\n          Developers must remember to trigger change detection where needed.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Migration Effort</span>:\n          Converting existing Zone-based applications requires careful refactoring.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Third-Party Libraries</span>:\n          Some libraries may assume Zone.js is present and require adaptation.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Event Handling</span>:\n          Non-Angular event handlers need manual change detection calls.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Asynchronous Operations</span>:\n          Operations like setTimeout or AJAX calls need explicit UI updates.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Pitfalls</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Missing Updates</span>:\n          Forgetting to trigger change detection leads to stale UI.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Excessive Manual Calls</span>:\n          Overcompensating with too many detectChanges() calls hurts performance.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Debugging Complexity</span>:\n          When updates are missing, finding where change detection should have been triggered can be challenging.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Team Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Training Requirements</span>:\n          Team members need to understand zoneless principles for effective development.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Codebase Consistency</span>:\n          Maintaining consistent patterns for change detection across the codebase.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Transition Period</span>:\n          During migration, managing both Zone-based and zoneless components can be complex.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Zone.js</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          A library that intercepts and keeps track of asynchronous operations, enabling automatic change detection in Angular.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Zoneless</strong>:\n          Zoneless applications completely remove this dependency, requiring explicit change detection instead.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Change Detection</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's mechanism for updating the DOM based on changes to component data.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Zoneless</strong>:\n          In zoneless applications, change detection must be triggered explicitly or through signals rather than automatically.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal-Based Components</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Components built using Angular's signals system for fine-grained reactivity.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Zoneless</strong>:\n          Signal-based components work perfectly in zoneless mode, providing automatic UI updates without Zone.js.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Technique to selectively hydrate server-rendered components based on need.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Zoneless</strong>:\n          Partial hydration works well with zoneless applications for maximum server-side rendering performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Built-in Control Flow</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's new template syntax for conditional rendering, loops, and deferred content.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Zoneless</strong>:\n          Control flow directives integrate seamlessly with signal-based zoneless applications for reactive templates.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimization</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Techniques to improve application speed, responsiveness, and resource usage.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Zoneless</strong>:\n          Zoneless applications are primarily about performance optimization, reducing bundle size and execution overhead.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Server-Side Rendering (SSR)</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Pre-rendering Angular applications on the server for improved initial load.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Zoneless</strong>:\n          Zoneless applications can significantly improve SSR performance by reducing JavaScript execution time.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, filter, map, Observable, take } from 'rxjs';\n\nexport interface AppState {\n  // users: User[];\n  // selectedUser: User;\n  bottomPills: {name: string}[];\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  private _state = new BehaviorSubject<AppState>({\n    bottomPills: []\n  });\n  state$ = this._state.asObservable();\n  state = {};\n\n  constructor() {\n    this.state$.subscribe(state => {\n      console.log('state', state);\n      this.state = state;\n    });\n   }\n\n  private setState(newState: Partial<AppState>) {\n    const currentState = this._state.getValue();\n    this._state.next({ ...currentState, ...newState });\n  }\n\n  getBottomPills(): Observable<{name: string}[]> {\n    return this.state$.pipe(\n      filter(state => !!state.bottomPills),\n      map(state => state.bottomPills)\n    );\n  }\n\n  addBottomPills(pill: {name: string}) {\n    console.log('addBottomPills:', pill)\n    this.getBottomPills()\n      .pipe(take(1))\n      .subscribe(statePills => {\n        console.log('statePills:', statePills)\n        // this.setState({ bottomPills: [...statePills, pill] });\n\n        if (statePills.includes(pill)) return;\n\n        if (statePills.length > 5) statePills.pop();\n        this.setState({ bottomPills: [ ...statePills, pill ] });\n      });\n  }\n\n  removeBottomPills(pillId: string) {\n    console.log('removeBottomPills:', pillId);\n    this.getBottomPills()\n      .pipe(take(1))\n      .subscribe((statePills: {name: string}[]) => {\n        console.log('statePills:', statePills)\n\n        // if (statePills.length <= 5) {\n        //   statePills.pop();\n        //   this.setState({ bottomPills: [ ...statePills, pill ] });\n        // }\n      });\n  }\n}\n","export const glossaryItems = [\n  {\n    \"name\": \"ahead-of-time (AOT) compilation\",\n    \"file_location\": \"components/aot\",\n    \"hashtags\": [\n      ''\n    ]\n  },\n  {\n    \"name\": \"Angular element\"\n  },\n  {\n    \"name\": \"Angular package format (APF)\"\n  },\n  {\n    \"name\": \"annotation\"\n  },\n  {\n    \"name\": \"app-shell\"\n  },\n  {\n    \"name\": \"Architect\"\n  },\n  {\n    \"name\": \"attribute directive\"\n  },\n  {\n    \"name\": \"binding\"\n  },\n  {\n    \"name\": \"bootstrap\"\n  },\n  {\n    \"name\": \"builder\"\n  },\n  {\n    \"name\": \"case types\"\n  },\n  {\n    \"name\": \"change detection\"\n  },\n  {\n    \"name\": \"class decorator\"\n  },\n  {\n    \"name\": \"class field decorator\"\n  },\n  {\n    \"name\": \"collection\"\n  },\n  {\n    \"name\": \"command-line interface (CLI)\"\n  },\n  {\n    \"name\": \"component\"\n  },\n  {\n    \"name\": \"configuration\"\n  },\n  {\n    \"name\": \"content projection\"\n  },\n  {\n    \"name\": \"custom element\"\n  },\n  {\n    \"name\": \"data binding\"\n  },\n  {\n    \"name\": \"declarable\"\n  },\n  {\n    \"name\": \"decorator | decoration\"\n  },\n  {\n    \"name\": \"dependency injection (DI)\"\n  },\n  {\n    \"name\": \"DI token\"\n  },\n  {\n    \"name\": \"directive\"\n  },\n  {\n    \"name\": \"domain-specific language (DSL)\"\n  },\n  {\n    \"name\": \"dynamic component loading\"\n  },\n  {\n    \"name\": \"eager loading\"\n  },\n  {\n    \"name\": \"ECMAScript\"\n  },\n  {\n    \"name\": \"element\"\n  },\n  {\n    \"name\": \"entry point\"\n  },\n  {\n    \"name\": \"form control\"\n  },\n  {\n    \"name\": \"form model\"\n  },\n  {\n    \"name\": \"form validation\"\n  },\n  {\n    \"name\": \"immutability\"\n  },\n  {\n    \"name\": \"injectable\"\n  },\n  {\n    \"name\": \"injector\"\n  },\n  {\n    \"name\": \"input\"\n  },\n  {\n    \"name\": \"interpolation\"\n  },\n  {\n    \"name\": \"Ivy\"\n  },\n  {\n    \"name\": \"JavaScript\"\n  },\n  {\n    \"name\": \"just-in-time (JIT) compilation\"\n  },\n  {\n    \"name\": \"lazy loading\"\n  },\n  {\n    \"name\": \"library\"\n  },\n  {\n    \"name\": \"lifecycle hook\"\n  },\n  {\n    \"name\": \"module\"\n  },\n  {\n    \"name\": \"NgModule\"\n  },\n  {\n    \"name\": \"npm package\"\n  },\n  {\n    \"name\": \"ngc\"\n  },\n  {\n    \"name\": \"observable\"\n  },\n  {\n    \"name\": \"observer\"\n  },\n  {\n    \"name\": \"output\"\n  },\n  {\n    \"name\": \"pipe\"\n  },\n  {\n    \"name\": \"platform\"\n  },\n  {\n    \"name\": \"polyfill\"\n  },\n  {\n    \"name\": \"project\"\n  },\n  {\n    \"name\": \"provider\"\n  },\n  {\n    \"name\": \"reactive forms\"\n  },\n  {\n    \"name\": \"resolver\"\n  },\n  {\n    \"name\": \"route guard\"\n  },\n  {\n    \"name\": \"router\"\n  },\n  {\n    \"name\": \"router outlet\"\n  },\n  {\n    \"name\": \"routing component\"\n  },\n  {\n    \"name\": \"rule\"\n  },\n  {\n    \"name\": \"schematic\"\n  },\n  {\n    \"name\": \"Schematics CLI\"\n  },\n  {\n    \"name\": \"scoped package\"\n  },\n  {\n    \"name\": \"server-side rendering\"\n  },\n  {\n    \"name\": \"service\"\n  },\n  {\n    \"name\": \"standalone\"\n  },\n  {\n    \"name\": \"structural directive\"\n  },\n  {\n    \"name\": \"subscriber\"\n  },\n  {\n    \"name\": \"target\"\n  },\n  {\n    \"name\": \"template\"\n  },\n  {\n    \"name\": \"template-driven forms\"\n  },\n  {\n    \"name\": \"template expression\"\n  },\n  {\n    \"name\": \"template reference variable\"\n  },\n  {\n    \"name\": \"template input variable\"\n  },\n  {\n    \"name\": \"token\"\n  },\n  {\n    \"name\": \"transpile\"\n  },\n  {\n    \"name\": \"tree\"\n  },\n  {\n    \"name\": \"TypeScript\"\n  },\n  {\n    \"name\": \"TypeScript configuration file\"\n  },\n  {\n    \"name\": \"unidirectional data flow\"\n  },\n  {\n    \"name\": \"Server-side rendering\"\n  },\n  {\n    \"name\": \"view\"\n  },\n  {\n    \"name\": \"View Engine\"\n  },\n  {\n    \"name\": \"view hierarchy\"\n  },\n  {\n    \"name\": \"web component\"\n  },\n  {\n    \"name\": \"workspace\"\n  },\n  {\n    \"name\": \"workspace configuration\"\n  },\n  {\n    \"name\": \"zone\"\n  },\n];\n\nexport const angular = {\n  \"name\": \"angular\",\n  \"url\": \"angular\",\n  \"items\": {\n    \"Introduction\": {\n      \"introduction\": {\n        \"name\": \"Introduction\",\n      }\n    },\n    \"In-depth\": {\n      \"components\": {\n        \"name\": \"Components\",\n      },\n      \"template\": {\n        \"name\": \"Template\",\n      },\n      \"directives\": {\n        \"name\": \"Directives\",\n      },\n      \"di\": {\n        \"name\": \"Dependency Injection\",\n      },\n      \"signals\": {\n        \"name\": \"Signals\",\n      },\n      \"routing\": {\n        \"name\": \"Routing\",\n      },\n      \"forms\": {\n        \"name\": \"Forms\",\n      },\n      \"http-client\": {\n        \"name\": \"HTTP Client\",\n      },\n      \"performance\": {\n        \"name\": \"Performance\",\n      },\n      \"testing\": {\n        \"name\": \"Testing\",\n      },\n      \"internationalization\": {\n        \"name\": \"Internationalization\",\n      },\n      \"animations\": {\n        \"name\": \"Animations\",\n      },\n      \"experimental-features\": {\n        \"name\": \"Experimental features\",\n      },\n\n    },\n    \"Developer Tools\": {\n      \"cli\": {\n        \"name\": \"CLI\",\n      },\n      \"libraries\": {\n        \"name\": \"Libraries\",\n      },\n      \"dev-tools\": {\n        \"name\": \"DevTools\",\n      },\n      \"language-service\": {\n        \"name\": \"Language Service\",\n      },\n    },\n    \"Best Practices\": {\n      \"style-guide\": {\n        \"name\": \"Style Guide\",\n      },\n      \"security\": {\n        \"name\": \"Security\",\n      },\n      \"accessibility\": {\n        \"name\": \"Accessibility\",\n      },\n      \"performance\": {\n        \"name\": \"Performance\",\n      },\n      \"keeping-up-to-date\": {\n        \"name\": \"Keeping up-to-date\",\n      },\n    },\n    \"Extended Ecosystem\": {\n      \"service-workers-pwa\": {\n        \"name\": \"Service Workers & PWAs\",\n      },\n      \"web-workers\": {\n        \"name\": \"Web workers\",\n      },\n      \"angular-fire\": {\n        \"name\": \"Angular Fire\",\n      },\n      \"google-maps\": {\n        \"name\": \"Google Maps\",\n      },\n      \"google-pay\": {\n        \"name\": \"Google Pay\",\n      },\n      \"youtube-player\": {\n        \"name\": \"YouTube Player\",\n      },\n      \"angular-cdk\": {\n        \"name\": \"Angular CDK\",\n      },\n      \"angular-material\": {\n        \"name\": \"Angular Material\",\n      },\n    },\n    \"Reference\": {\n      \"glossary\": {\n        \"name\": \"Glossary\",\n        \"items\": glossaryItems\n      },\n      \"api\": {\n        \"name\": \"API\",\n      },\n      \"cli\": {\n        \"name\": \"CLI\",\n      },\n      \"error-encyclopedia\": {\n        \"name\": \"Error Encyclopedia\",\n      },\n      \"extended-diagnostic\": {\n        \"name\": \"Extended Diagnostic\",\n      },\n      \"versioning-and-releases\": {\n        \"name\": \"Versioning and releases\",\n      },\n      \"version compatibility\": {\n        \"name\": \"Version compatibility\",\n      },\n      \"update guide\": {\n        \"name\": \"Update guide\",\n      },\n      \"configurations\": {\n        \"name\": \"Configurations\",\n      },\n      \"migrations\": {\n        \"name\": \"Migrations\",\n      },\n      \"concepts\": {\n        \"name\": \"Concepts\",\n      },\n    },\n  }\n};\n\n\n\n","<!-- <div class=\"flex flex-row m-1\">\n  <div></div>\n  <div class=\"flex flex-row justify-end\">\n    <button class=\"p-1\">Line</button>\n    <button class=\"p-1\">Spread</button>\n  </div>\n</div> -->\n\n\n<div class=\"flex flex-row  pt-10 \">\n  <section class=\"relative overflow-y-auto h-screen\" style=\"width: 30%;\">\n    <app-glossary></app-glossary>\n  </section>\n\n\n  <section class=\"relative  bg-[#303030] overflow-y-auto h-screen rounded-md\" style=\"width: 70%;\">\n    <router-outlet></router-outlet>\n  </section>\n</div>\n\n\n\n\n\n<div class=\"invisible bg-gray-700 w-screen absolute h-8 bottom-0 right-0 grid grid-cols-6 gap-1 justify-between\">\n\n  <button appBoxWidget [appBoxWidgetData]=\"item\" [appBoxWidgetIsClosed]=\"appBoxWidgetIsClosed\"\n    (click)=\"closeBox(i)\"\n    *ngFor=\"let item of (bottomPills$ | async); let i = index\"\n    [id]=\"i\"\n    class=\"mx-1 px-2 w-72 text-white z-40\">\n    {{ item.name }}\n    <!-- <span class=\"box-pop-{{i}}\"></span> -->\n  </button>\n</div>\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BoxWidgetDirective } from 'src/app/utils/directives/box-widget.directive';\nimport { StateService } from '../../data-access/state.service';\n\n@Component({\n  selector: 'app-glossary-page',\n  templateUrl: './glossary-page.component.html',\n  styleUrls: ['./glossary-page.component.scss']\n})\nexport class GlossaryPageComponent {\n  // @ViewChild('appBoxWidgetRef', { static: false }) appBoxWidgetRef!: BoxWidgetDirective;\n\n  appBoxWidgetIsClosed!: number;\n  bottomPills$!: Observable<{name: string}[]>;\n\n  constructor(\n    private stateService: StateService\n  ) {\n    this.bottomPills$ = this.stateService.getBottomPills()\n  }\n\n  closeBox(id: number) {\n\n    this.appBoxWidgetIsClosed = id;\n    console.log('close')\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appBoxWidget]'\n})\nexport class BoxWidgetDirective {\n  // @Input() set text(value: string) {\n  //   const html = `\n  //     <span>\n  //       <strong class=\"text-sky-600 text-xl\">${value.charAt(0).toUpperCase()}</strong>${value.slice(1).trim()}\n  //     </span>\n  //   `;\n  //   this.renderer.setProperty(this.el.nativeElement, 'innerHTML', html);\n  // };\n\n  @Input() appBoxWidgetData!: {name: string};\n\n  // @Input() appBoxWidgetIsClosed!: boolean;\n  @Input() set appBoxWidgetIsClosed(id: number) {\n    console.log('asdf:',id)\n    // if (!id) return;\n    // console.log('this.el.nativeElement.id:', this.el.nativeElement.id)\n\n\n\n    // const boxPop = this.el.nativeElement.querySelector(`.box-pop-${id}`);\n    // if (boxPop) this.renderer.setProperty(boxPop, 'innerHTML', '');\n\n\n\n\n\n  //   console.log('box:', truthy);\n  //   if (!truthy) return;\n\n  //   this.renderer.setProperty(this.el.nativeElement.querySelector('.box-pop'), 'innerHTML', '');\n  };\n\n\n\n  constructor(\n    private readonly el: ElementRef,\n    private readonly renderer: Renderer2,\n  ) {\n\n\n  }\n\n  // ngOnChanges(): void {\n\n  // }\n\n  ngAfterViewInit(): void {\n    const html = (id: number) =>  `\n      <div\n        style=\"left: ${this.el.nativeElement.getBoundingClientRect().left}px\"\n        class=\"box-pop-${id} flex flex-row justify-between bg-white text-rose-400 absolute z-50 w-[312px] h-64 mb-8 bottom-0  border-2 border-indigo-500/100\">\n\n        <span>${this.appBoxWidgetData.name}</span>\n        <span id=\"close\">close</span>\n\n      </div>\n    `;\n    // this.renderer.setProperty(this.el.nativeElement.querySelector(`.box-pop-${this.el.nativeElement.id}`), 'innerHTML', html);\n    // const hostElement = this.el.nativeElement.querySelector('[appBoxWidget]');\n\n    // console.log('hostElement:', hostElement)\n    const parentElement = this.renderer.parentNode(this.el.nativeElement);\n\n    console.log('parentElement:', parentElement);\n\n    const id = this.el.nativeElement.id;\n\n    if (parentElement) {\n      const box = parentElement.querySelector(`.box-pop-${id}`);\n\n      if (box) return;\n\n      const childEl = this.renderer.createElement('div');\n\n      // this.renderer.addClass(parentElement.querySelector(`.box-pop`), `box-pop-${this.el.nativeElement.id}`);\n      if (childEl) this.renderer.appendChild(childEl, html(id));\n      if (this.el.nativeElement) this.renderer.appendChild(this.el.nativeElement, childEl);\n    }\n\n    // console.log(\"sssss----\",this.el.nativeElement.getBoundingClientRect().left);\n\n\n    // this.renderer.listen(this.el.nativeElement.querySelector('#close'), 'click', () => {\n    //   console.log('Clicked');\n    // });\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[copyToClipboard]'\n})\nexport class CopyDirective {\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    // create the \"copy\" button\n\n  }\n\n  ngAfterViewInit(): void {\n    const button = this.renderer.createElement('button');\n    const buttonText = this.renderer.createText('copy code');\n    this.renderer.appendChild(button, buttonText);\n    this.renderer.addClass(button, 'copy-button');\n    this.renderer.addClass(button, 'p-2');\n    // console.log('this.el.nativeElement:', this.el.nativeElement.innerHTML)\n    this.renderer.appendChild(this.el.nativeElement.querySelector('.copy-button-wrapper'), button);\n\n    // attach the click event handler to the \"copy\" button\n    this.renderer.listen(button, 'click', () => {\n      const text = this.el.nativeElement.querySelector('code').textContent.trim();\n      navigator.clipboard.writeText(text).then(() => {\n        console.log('Text copied to clipboard');\n        this.renderer.setValue(buttonText, 'copied 👍');\n        setTimeout(() => {\n          this.renderer.setValue(buttonText, 'copy code');\n        }, 2000);\n      }, (err) => {\n        console.error('Failed to copy text: ', err);\n      });\n    });\n  }\n\n}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appFirstLetterColor]'\n})\nexport class FirstLetterColorDirective {\n  @Input() set text(value: string) {\n    const html = `\n      <span>\n        <strong class=\"text-sky-600 text-xl\">${value.charAt(0).toUpperCase()}</strong>${value.slice(1).trim()}\n      </span>\n    `;\n    this.renderer.setProperty(this.el.nativeElement, 'innerHTML', html);\n  };\n\n  constructor(\n    private readonly el: ElementRef,\n    private readonly renderer: Renderer2,\n  ) {}\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bypassStringIndex'\n})\nexport class BypassStringIndexPipe implements PipeTransform {\n\n  transform(obj: {}, item: string): any {\n    console.log(obj)\n    console.log(item)\n    return (obj as any)[item];\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'objToArr'\n})\nexport class ObjToArrPipe implements PipeTransform {\n\n  transform(obj: any = {}): string[] {\n    return Object.keys({...obj});\n  }\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnsubscribeService implements OnDestroy {\n  protected toUnsubscribe$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  ngOnDestroy(): void {\n    this.toUnsubscribe();\n  }\n\n  toUnsubscribe(): void {\n    if (!this.toUnsubscribe$) return;\n\n    this.toUnsubscribe$?.next(true);\n    this.toUnsubscribe$?.unsubscribe();\n  }\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","AotComponent","AttributeDirectiveComponent","CaseTypesComponent","ChangeDetectionComponent","DependencyInjectionComponent","DirectiveComponent","DynamicComponentLoadingComponent","EagerLoadingComponent","EcmascriptComponent","ElementComponent","FormControlComponent","FormModelComponent","FormValidationComponent","ImmutabilityComponent","InjectableComponent","InjectorComponent","LazyLoadingComponent","LifecycleHookComponent","ObservableComponent","PipeComponent","ReactiveFormComponent","ResolverComponent","RouteGuardComponent","RouterOutletComponent","RouterComponent","RoutingComponentComponent","StructuralDirectiveComponent","SubscriberComponent","TemplateFormComponent","TemplateComponent","GlossaryPageComponent","AngularElementComponent","AfterNextRenderComponent","AfterRenderComponent","AngularDevToolsComponent","AnnotationComponent","AppShellComponent","ArchitectComponent","BindingComponent","BootstrapComponent","ControlFlowComponent","BuilderComponent","CustomElementComponent","DeferrableViewsComponent","HydrationComponent","InputTransformComponent","PartialHydrationComponent","SignalComponentsComponent","SsrComponent","StyleUrlComponent","ZonelessApplicationsComponent","ClassDecoratorComponent","SignalsComponent","ViewTransitionsComponent","UniversalComponent","ViewHierarchyComponent","StandaloneComponent","ContentProjectionComponent","ClassFieldDecoratorComponent","CollectionComponent","CliComponent","ComponentComponent","ConfigurationComponent","DataBindingComponent","DeclarableComponent","DecoratorComponent","DiTokenComponent","DslComponent","EntryPointComponent","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","consts","template","i0","BrowserModule","FirstLetterColorDirective","NavbarComponent","GlossaryComponent","SidebarComponent","CommonModule","ObjToArrPipe","BypassStringIndexPipe","BoxWidgetDirective","ApfComponent","HighlightModule","HIGHLIGHT_OPTIONS","HighlightPlusModule","CopyDirective","CustomElementModule","DataBindingModule","DeclarableModule","DecoratorModule","AppModule","bootstrap","provide","useValue","fullLibraryLoader","declarations","angular","technologies","name","NavigationEnd","filter","Subject","takeUntil","router","events","pipe","event","unsubscribe$","subscribe","currentRoute","url","console","log","selectedTech","split","items","ngOnDestroy","next","complete","stateService","fn","s","addBottomPills","ngOnInit","components","forEach","item","UnsubscribeService","http","get","responseType","toUnsubscribe$","data","code_1","code_2","code_3","code_4","code_5","features","standalone","encapsulation","code_19","codeb_1","codeb_2","codeb_3","viewQuery","themeGithub","themeAndroidStudio","code_6","code_7","code_8","code_9_1","code_9_2","code_10","code_11","code_14","code_15","code_16","code_17","code_18","code_20","code_21","getCode","code_9","code_12","code_13","codeb_4","codeb_5","codeb_6","codeb_7","codeb_8","codeb_9","styles","changeDetection","unsub","initializeCodeExamples","ngAfterViewInit","toggleBasicExample","showBasicExample","toggleUsageExample","showUsageExample","toggleContentChildExample","showContentChildExample","toggleNgContainerExample","showNgContainerExample","basicExample","usageExample","contentChildExample","ngContainerExample","catchError","of","code","code_3_1","code_3_2","code_3_3","hidden","code_1_r","code_2_r","code_3_r","code_6_1","code_6_2","code_6_3","code_6_4","code_10_1","code_2_1","code_11_1","BehaviorSubject","map","take","StateService","bottomPills","_state","asObservable","state$","state","setState","newState","currentState","getValue","getBottomPills","pill","statePills","includes","length","pop","removeBottomPills","pillId","factory","providedIn","glossaryItems","bottomPills$","closeBox","id","appBoxWidgetIsClosed","el","renderer","html","nativeElement","getBoundingClientRect","left","appBoxWidgetData","parentElement","parentNode","box","querySelector","childEl","createElement","appendChild","inputs","button","buttonText","createText","addClass","listen","text","textContent","trim","navigator","clipboard","writeText","then","setValue","setTimeout","err","error","value","charAt","toUpperCase","slice","setProperty","transform","obj","pure","Object","keys","ReplaySubject","toUnsubscribe","unsubscribe","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}