"use strict";(self.webpackChunktailwind=self.webpackChunktailwind||[]).push([[49],{4049:(x,s,a)=>{a.r(s),a.d(s,{ViewHierarchyComponent:()=>r});var c=a(6895),p=a(827),d=a(8512),e=a(8256);const g=["notesTemplate"],m=["bestPracticesTemplate"],u=["prosConsTemplate"],h=["relatedTopicsTemplate"];function _(n,o){1&n&&e.GkF(0)}function Z(n,o){if(1&n&&(e.ynx(0),e.YNc(1,_,1,0,"ng-container",9),e.BQk()),2&n){e.oxw();const t=e.MAs(20);e.xp6(1),e.Q6J("ngTemplateOutlet",t)}}function T(n,o){1&n&&e.GkF(0)}function C(n,o){if(1&n&&(e.ynx(0),e.YNc(1,T,1,0,"ng-container",9),e.BQk()),2&n){e.oxw();const t=e.MAs(22);e.xp6(1),e.Q6J("ngTemplateOutlet",t)}}function A(n,o){1&n&&e.GkF(0)}function f(n,o){if(1&n&&(e.ynx(0),e.YNc(1,A,1,0,"ng-container",9),e.BQk()),2&n){e.oxw();const t=e.MAs(24);e.xp6(1),e.Q6J("ngTemplateOutlet",t)}}function w(n,o){1&n&&e.GkF(0)}function U(n,o){if(1&n&&(e.ynx(0),e.YNc(1,w,1,0,"ng-container",9),e.BQk()),2&n){e.oxw();const t=e.MAs(26);e.xp6(1),e.Q6J("ngTemplateOutlet",t)}}const l=function(){return["typescript"]},y=function(){return["html"]};function q(n,o){if(1&n&&(e.TgZ(0,"h2"),e._uU(1,"Understanding View Hierarchy"),e.qZA(),e.TgZ(2,"p"),e._uU(3," In Angular, a view is the fundamental rendering unit that represents a portion of the UI. The view hierarchy is the tree-like structure of these UI components and their relationships. "),e.qZA(),e.TgZ(4,"h3"),e._uU(5,"Types of Views in Angular"),e.qZA(),e.TgZ(6,"ul")(7,"li")(8,"strong"),e._uU(9,"Host Views:"),e.qZA(),e._uU(10," Created for components. When you create a component, Angular creates a host view that hosts the component's template. "),e.qZA(),e.TgZ(11,"li")(12,"strong"),e._uU(13,"Embedded Views:"),e.qZA(),e._uU(14," Created from templates using structural directives like *ngIf, *ngFor, or from TemplateRef. "),e.qZA()(),e.TgZ(15,"h3"),e._uU(16,"Component Hierarchy Example"),e.qZA(),e.TgZ(17,"div",10)(18,"pre"),e._UZ(19,"code",11),e.qZA()(),e.TgZ(20,"h3"),e._uU(21,"Resulting View Tree"),e.qZA(),e.TgZ(22,"div",10)(23,"pre"),e._UZ(24,"code",11),e.qZA()(),e.TgZ(25,"div",12)(26,"div",13)(27,"span",14),e._uU(28,"Host View"),e.qZA(),e._uU(29," ParentComponent "),e.TgZ(30,"div",15)(31,"span",14),e._uU(32,"Host View"),e.qZA(),e._uU(33," ChildComponent "),e.TgZ(34,"div",16)(35,"span",14),e._uU(36,"Host View"),e.qZA(),e._uU(37," GrandchildComponent "),e.qZA()()()(),e.TgZ(38,"h3"),e._uU(39,"Embedded Views & ViewContainerRef"),e.qZA(),e.TgZ(40,"p"),e._uU(41," Embedded views are created from templates using structural directives or manually through the ViewContainerRef API. "),e.qZA(),e.TgZ(42,"div",10)(43,"pre"),e._UZ(44,"code",11),e.qZA()(),e.TgZ(45,"h3"),e._uU(46,"Dynamic Content with ViewContainerRef"),e.qZA(),e.TgZ(47,"p"),e._uU(48," The ViewContainerRef is a powerful API for managing views dynamically, allowing for insertion, movement, and removal of views. "),e.qZA(),e.TgZ(49,"div",10)(50,"pre"),e._UZ(51,"code",11),e.qZA()()),2&n){const t=e.oxw();e.xp6(19),e.Q6J("highlight",t.componentExampleCode)("languages",e.DdM(8,l)),e.xp6(5),e.Q6J("highlight",t.viewTreeCode)("languages",e.DdM(9,y)),e.xp6(20),e.Q6J("highlight",t.embeddedViewsCode)("languages",e.DdM(10,l)),e.xp6(7),e.Q6J("highlight",t.viewContainerRefCode)("languages",e.DdM(11,l))}}function v(n,o){1&n&&(e.TgZ(0,"h2"),e._uU(1,"Best Practices"),e.qZA(),e.TgZ(2,"h3"),e._uU(3,"Component Design"),e.qZA(),e.TgZ(4,"ul")(5,"li")(6,"strong"),e._uU(7,"Keep component hierarchies shallow:"),e.qZA(),e._uU(8," Deep component trees can lead to performance issues. Consider flattening your component tree when possible. "),e.qZA(),e.TgZ(9,"li")(10,"strong"),e._uU(11,"Maintain logical component boundaries:"),e.qZA(),e._uU(12," Components should have a single responsibility and represent a coherent part of the UI. "),e.qZA(),e.TgZ(13,"li")(14,"strong"),e._uU(15,"Use content projection strategically:"),e.qZA(),e._uU(16," For reusable components that need to accept varying content. "),e.qZA(),e.TgZ(17,"li")(18,"strong"),e._uU(19,"Design for reusability:"),e.qZA(),e._uU(20," Components should be designed to be reused in different contexts when appropriate. "),e.qZA()(),e.TgZ(21,"h3"),e._uU(22,"View Management"),e.qZA(),e.TgZ(23,"ul")(24,"li")(25,"strong"),e._uU(26,"Avoid deep nesting of *ngIf and *ngFor:"),e.qZA(),e._uU(27," This creates many embedded views and can affect performance. "),e.qZA(),e.TgZ(28,"li")(29,"strong"),e._uU(30,"Clean up dynamically created views:"),e.qZA(),e._uU(31," Always call clear() on ViewContainerRef when components are destroyed to prevent memory leaks. "),e.qZA(),e.TgZ(32,"li")(33,"strong"),e._uU(34,"Use trackBy with *ngFor:"),e.qZA(),e._uU(35," This helps Angular identify which items have changed and need to be re-rendered. "),e.qZA(),e.TgZ(36,"li")(37,"strong"),e._uU(38,"Limit DOM manipulations:"),e.qZA(),e._uU(39," Excessive DOM manipulations can lead to performance issues, especially in complex applications. "),e.qZA()(),e.TgZ(40,"h3"),e._uU(41,"Performance Considerations"),e.qZA(),e.TgZ(42,"ul")(43,"li")(44,"strong"),e._uU(45,"Use OnPush change detection:"),e.qZA(),e._uU(46," This can significantly improve performance by reducing unnecessary change detection cycles. "),e.qZA(),e.TgZ(47,"li")(48,"strong"),e._uU(49,"Lazy load components:"),e.qZA(),e._uU(50," Load components only when needed to improve initial loading time. "),e.qZA(),e.TgZ(51,"li")(52,"strong"),e._uU(53,"Consider virtual scrolling:"),e.qZA(),e._uU(54," For lists with many items, virtual scrolling can greatly improve performance. "),e.qZA(),e.TgZ(55,"li")(56,"strong"),e._uU(57,"Optimize change detection:"),e.qZA(),e._uU(58," Use appropriate lifecycle hooks and avoid unnecessary data binding. "),e.qZA()(),e.TgZ(59,"div",17)(60,"h4"),e._uU(61,"Recommended View Hierarchy Pattern:"),e.qZA(),e.TgZ(62,"ol")(63,"li"),e._uU(64,"Smart/Container components at the top level (handle data and logic)"),e.qZA(),e.TgZ(65,"li"),e._uU(66,"Presentation/UI components in the middle (display data, emit events)"),e.qZA(),e.TgZ(67,"li"),e._uU(68,"Reusable UI elements at the bottom (buttons, inputs, etc.)"),e.qZA()()())}function b(n,o){1&n&&(e.TgZ(0,"h2"),e._uU(1,"Pros and Cons"),e.qZA(),e.TgZ(2,"h3"),e._uU(3,"Advantages of Angular's View Hierarchy"),e.qZA(),e.TgZ(4,"ul")(5,"li")(6,"strong"),e._uU(7,"Component-Based Architecture:"),e.qZA(),e._uU(8," Encourages reusable, modular code"),e.qZA(),e.TgZ(9,"li")(10,"strong"),e._uU(11,"Clear Separation of Concerns:"),e.qZA(),e._uU(12," Components have well-defined responsibilities"),e.qZA(),e.TgZ(13,"li")(14,"strong"),e._uU(15,"Powerful Rendering Control:"),e.qZA(),e._uU(16," Fine-grained control over how and when content is rendered"),e.qZA(),e.TgZ(17,"li")(18,"strong"),e._uU(19,"Dynamic Content Capabilities:"),e.qZA(),e._uU(20," Views can be created and manipulated at runtime"),e.qZA(),e.TgZ(21,"li")(22,"strong"),e._uU(23,"Change Detection Optimization:"),e.qZA(),e._uU(24," View hierarchy enables efficient change detection strategies"),e.qZA()(),e.TgZ(25,"h3"),e._uU(26,"Challenges and Limitations"),e.qZA(),e.TgZ(27,"ul")(28,"li")(29,"strong"),e._uU(30,"Learning Curve:"),e.qZA(),e._uU(31," Understanding view manipulation APIs can be challenging"),e.qZA(),e.TgZ(32,"li")(33,"strong"),e._uU(34,"Performance Overhead:"),e.qZA(),e._uU(35," Deep component hierarchies can impact performance"),e.qZA(),e.TgZ(36,"li")(37,"strong"),e._uU(38,"Complexity:"),e.qZA(),e._uU(39," Dynamic view manipulation can lead to complex and hard-to-maintain code"),e.qZA(),e.TgZ(40,"li")(41,"strong"),e._uU(42,"Memory Management:"),e.qZA(),e._uU(43," Improper view handling can lead to memory leaks"),e.qZA(),e.TgZ(44,"li")(45,"strong"),e._uU(46,"Debugging Difficulty:"),e.qZA(),e._uU(47," Issues in dynamic views can be harder to debug"),e.qZA()(),e.TgZ(48,"h3"),e._uU(49,"View Types Comparison"),e.qZA(),e.TgZ(50,"table",18)(51,"thead")(52,"tr")(53,"th"),e._uU(54,"Feature"),e.qZA(),e.TgZ(55,"th"),e._uU(56,"Host Views"),e.qZA(),e.TgZ(57,"th"),e._uU(58,"Embedded Views"),e.qZA()()(),e.TgZ(59,"tbody")(60,"tr")(61,"td"),e._uU(62,"Creation"),e.qZA(),e.TgZ(63,"td"),e._uU(64,"Created for components"),e.qZA(),e.TgZ(65,"td"),e._uU(66,"Created from templates"),e.qZA()(),e.TgZ(67,"tr")(68,"td"),e._uU(69,"Lifecycle Hooks"),e.qZA(),e.TgZ(70,"td"),e._uU(71,"Has component lifecycle hooks"),e.qZA(),e.TgZ(72,"td"),e._uU(73,"No component lifecycle hooks"),e.qZA()(),e.TgZ(74,"tr")(75,"td"),e._uU(76,"Change Detection"),e.qZA(),e.TgZ(77,"td"),e._uU(78,"Can use OnPush strategy"),e.qZA(),e.TgZ(79,"td"),e._uU(80,"Follows parent's strategy"),e.qZA()(),e.TgZ(81,"tr")(82,"td"),e._uU(83,"Dynamic Creation"),e.qZA(),e.TgZ(84,"td"),e._uU(85,"ComponentFactoryResolver"),e.qZA(),e.TgZ(86,"td"),e._uU(87,"TemplateRef.createEmbeddedView"),e.qZA()(),e.TgZ(88,"tr")(89,"td"),e._uU(90,"Typical Use Cases"),e.qZA(),e.TgZ(91,"td"),e._uU(92,"Standalone UI elements"),e.qZA(),e.TgZ(93,"td"),e._uU(94,"Conditional content, lists"),e.qZA()()()())}function V(n,o){1&n&&(e.TgZ(0,"h2"),e._uU(1,"Related Topics"),e.qZA(),e.TgZ(2,"ul")(3,"li")(4,"strong"),e._uU(5,"Components:"),e.qZA(),e._uU(6," The building blocks of Angular applications that create host views "),e.qZA(),e.TgZ(7,"li")(8,"strong"),e._uU(9,"Templates:"),e.qZA(),e._uU(10," Define the HTML and bindings that Angular renders "),e.qZA(),e.TgZ(11,"li")(12,"strong"),e._uU(13,"Content Projection:"),e.qZA(),e._uU(14," Allows components to accept content from their parent "),e.qZA(),e.TgZ(15,"li")(16,"strong"),e._uU(17,"Structural Directives:"),e.qZA(),e._uU(18," Create embedded views conditionally (*ngIf, *ngFor) "),e.qZA(),e.TgZ(19,"li")(20,"strong"),e._uU(21,"ViewChild/ViewChildren:"),e.qZA(),e._uU(22," Query child elements within a component's view "),e.qZA(),e.TgZ(23,"li")(24,"strong"),e._uU(25,"ContentChild/ContentChildren:"),e.qZA(),e._uU(26," Query projected content "),e.qZA(),e.TgZ(27,"li")(28,"strong"),e._uU(29,"Change Detection:"),e.qZA(),e._uU(30," How Angular determines when to update the DOM "),e.qZA(),e.TgZ(31,"li")(32,"strong"),e._uU(33,"Dynamic Component Loading:"),e.qZA(),e._uU(34," Creating components programmatically "),e.qZA(),e.TgZ(35,"li")(36,"strong"),e._uU(37,"Zones:"),e.qZA(),e._uU(38," Angular's mechanism for detecting changes "),e.qZA(),e.TgZ(39,"li")(40,"strong"),e._uU(41,"Rendering Pipeline:"),e.qZA(),e._uU(42," How Angular processes templates and updates the DOM "),e.qZA()(),e.TgZ(43,"h3"),e._uU(44,"Modern Angular Features Related to View Hierarchy"),e.qZA(),e.TgZ(45,"ul")(46,"li")(47,"strong"),e._uU(48,"Standalone Components:"),e.qZA(),e._uU(49," Simplifies component organization without NgModules "),e.qZA(),e.TgZ(50,"li")(51,"strong"),e._uU(52,"Signal-based Rendering:"),e.qZA(),e._uU(53," More efficient change detection with fine-grained reactivity "),e.qZA(),e.TgZ(54,"li")(55,"strong"),e._uU(56,"Deferrable Views:"),e.qZA(),e._uU(57," Load components lazily within templates "),e.qZA(),e.TgZ(58,"li")(59,"strong"),e._uU(60,"Hydration:"),e.qZA(),e._uU(61," Reusing server-rendered DOM instead of recreating it "),e.qZA()())}class r extends d.Y{constructor(){super(...arguments),this.selectedTab="notes",this.componentExampleCode="@Component({\n  selector: 'app-parent',\n  template: `\n    <h1>Parent Component</h1>\n    <app-child></app-child>\n  `\n})\nexport class ParentComponent {}\n\n@Component({\n  selector: 'app-child',\n  template: `\n    <h2>Child Component</h2>\n    <app-grandchild></app-grandchild>\n  `\n})\nexport class ChildComponent {}\n\n@Component({\n  selector: 'app-grandchild',\n  template: `<h3>Grandchild Component</h3>`\n})\nexport class GrandchildComponent {}",this.viewTreeCode="// Component View Tree Example\n<app-parent> \x3c!-- HostView for ParentComponent --\x3e\n  #shadow-root (open)\n    <h1>Parent Component</h1> \x3c!-- ElementNode --\x3e\n    <app-child> \x3c!-- ElementNode & Host for ChildComponent --\x3e\n      #shadow-root (open)\n        <h2>Child Component</h2> \x3c!-- ElementNode --\x3e\n        <app-grandchild> \x3c!-- ElementNode & Host for GrandchildComponent --\x3e\n          #shadow-root (open)\n            <h3>Grandchild Component</h3> \x3c!-- ElementNode --\x3e\n        </app-grandchild>\n    </app-child>\n</app-parent>",this.embeddedViewsCode="@Component({\n  selector: 'app-example',\n  template: `\n    <h1>View Container Example</h1>\n\n    \x3c!-- Host View (Component View) --\x3e\n\n    \x3c!-- Embedded View 1: Created from structural directive --\x3e\n    <div *ngIf=\"showContent\">\n      <p>This content is conditionally shown</p>\n    </div>\n\n    \x3c!-- Embedded View 2: Created from ng-template --\x3e\n    <ng-container *ngTemplateOutlet=\"myTemplate\"></ng-container>\n\n    <ng-template #myTemplate>\n      <p>This content comes from a template</p>\n    </ng-template>\n\n    \x3c!-- Dynamic Container --\x3e\n    <div #container></div>\n  `\n})\nexport class ExampleComponent implements AfterViewInit {\n  @ViewChild('container', { read: ViewContainerRef })\n  container!: ViewContainerRef;\n\n  @ViewChild('myTemplate') myTemplate!: TemplateRef<any>;\n\n  showContent = true;\n\n  ngAfterViewInit() {\n    // Programmatically create and insert an embedded view\n    const embeddedView = this.myTemplate.createEmbeddedView(null);\n    this.container.insert(embeddedView);\n  }\n}",this.viewContainerRefCode="import { Component, ViewChild, ViewContainerRef,\n  TemplateRef, ComponentFactoryResolver } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-content',\n  template: `\n    <div class=\"container\">\n      <button (click)=\"loadTemplate()\">Load Template</button>\n      <button (click)=\"loadComponent()\">Load Component</button>\n\n      \x3c!-- This div will be our view container --\x3e\n      <div #dynamicContainer></div>\n\n      <ng-template #sampleTemplate>\n        <div class=\"template-content\">\n          <h3>Dynamic Template Content</h3>\n          <p>This content was loaded dynamically.</p>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class DynamicContentComponent {\n  @ViewChild('dynamicContainer', { read: ViewContainerRef })\n  container!: ViewContainerRef;\n\n  @ViewChild('sampleTemplate')\n  template!: TemplateRef<any>;\n\n  constructor(private cfr: ComponentFactoryResolver) {}\n\n  loadTemplate() {\n    // Clear previous content\n    this.container.clear();\n\n    // Create an embedded view from the template\n    const view = this.template.createEmbeddedView(null);\n\n    // Insert the view into the container\n    this.container.insert(view);\n  }\n\n  loadComponent() {\n    // Clear previous content\n    this.container.clear();\n\n    // Create component factory and component instance\n    const factory = this.cfr.resolveComponentFactory(DynamicComponent);\n    const componentRef = this.container.createComponent(factory);\n\n    // We can interact with the component instance\n    componentRef.instance.message = 'Hello from parent!';\n  }\n}"}}r.\u0275fac=function(){let n;return function(t){return(n||(n=e.n5z(r)))(t||r)}}(),r.\u0275cmp=e.Xpm({type:r,selectors:[["app-view-hierarchy"]],viewQuery:function(o,t){if(1&o&&(e.Gf(g,7),e.Gf(m,7),e.Gf(u,7),e.Gf(h,7)),2&o){let i;e.iGM(i=e.CRH())&&(t.notesTemplate=i.first),e.iGM(i=e.CRH())&&(t.bestPracticesTemplate=i.first),e.iGM(i=e.CRH())&&(t.prosConsTemplate=i.first),e.iGM(i=e.CRH())&&(t.relatedTopicsTemplate=i.first)}},standalone:!0,features:[e.qOj,e.jDz],decls:27,vars:13,consts:[[1,"container"],[1,"tab-navigation"],["type","button",3,"click"],[3,"ngSwitch"],[4,"ngSwitchCase"],["notesTemplate",""],["bestPracticesTemplate",""],["prosConsTemplate",""],["relatedTopicsTemplate",""],[4,"ngTemplateOutlet"],[1,"code-container"],[3,"highlight","languages"],[1,"hierarchy-diagram"],[1,"component","level-1"],[1,"view-type","host"],[1,"component","level-2"],[1,"component","level-3"],[1,"diagram"],[1,"comparison-table"]],template:function(o,t){1&o&&(e.TgZ(0,"div",0)(1,"h1"),e._uU(2,"View Hierarchy in Angular"),e.qZA(),e.TgZ(3,"p"),e._uU(4," Angular's view hierarchy defines how components, templates, and DOM elements are organized and rendered. Understanding this hierarchy is crucial for effective component composition and dynamic content rendering. "),e.qZA(),e.TgZ(5,"div",1)(6,"button",2),e.NdJ("click",function(){return t.selectedTab="notes"}),e._uU(7," Notes "),e.qZA(),e.TgZ(8,"button",2),e.NdJ("click",function(){return t.selectedTab="bestPractices"}),e._uU(9," Best Practices "),e.qZA(),e.TgZ(10,"button",2),e.NdJ("click",function(){return t.selectedTab="prosCons"}),e._uU(11," Pros and Cons "),e.qZA(),e.TgZ(12,"button",2),e.NdJ("click",function(){return t.selectedTab="relatedTopics"}),e._uU(13," Related Topics "),e.qZA()(),e.ynx(14,3),e.YNc(15,Z,2,1,"ng-container",4),e.YNc(16,C,2,1,"ng-container",4),e.YNc(17,f,2,1,"ng-container",4),e.YNc(18,U,2,1,"ng-container",4),e.BQk(),e.qZA(),e.YNc(19,q,52,12,"ng-template",null,5,e.W1O),e.YNc(21,v,69,0,"ng-template",null,6,e.W1O),e.YNc(23,b,95,0,"ng-template",null,7,e.W1O),e.YNc(25,V,62,0,"ng-template",null,8,e.W1O)),2&o&&(e.xp6(6),e.ekj("active","notes"===t.selectedTab),e.xp6(2),e.ekj("active","bestPractices"===t.selectedTab),e.xp6(2),e.ekj("active","prosCons"===t.selectedTab),e.xp6(2),e.ekj("active","relatedTopics"===t.selectedTab),e.xp6(2),e.Q6J("ngSwitch",t.selectedTab),e.xp6(1),e.Q6J("ngSwitchCase","notes"),e.xp6(1),e.Q6J("ngSwitchCase","bestPractices"),e.xp6(1),e.Q6J("ngSwitchCase","prosCons"),e.xp6(1),e.Q6J("ngSwitchCase","relatedTopics"))},dependencies:[c.ez,c.tP,c.RF,c.n9,p._l,p.y$],styles:["p[_ngcontent-%COMP%]{margin:0}.diagram[_ngcontent-%COMP%]{margin:20px 0;padding:15px;background-color:#f8f9fa;border-radius:5px;border-left:4px solid #4285f4}.hierarchy-diagram[_ngcontent-%COMP%]{max-width:600px;margin:20px auto}.hierarchy-diagram[_ngcontent-%COMP%]   .component[_ngcontent-%COMP%]{padding:15px;margin:10px 0;border-radius:5px;border:1px solid #ddd}.hierarchy-diagram[_ngcontent-%COMP%]   .level-1[_ngcontent-%COMP%]{background-color:#e3f2fd}.hierarchy-diagram[_ngcontent-%COMP%]   .level-2[_ngcontent-%COMP%]{background-color:#e8f5e9;margin-left:30px}.hierarchy-diagram[_ngcontent-%COMP%]   .level-3[_ngcontent-%COMP%]{background-color:#fff3e0;margin-left:60px}.view-type[_ngcontent-%COMP%]{display:inline-block;padding:3px 8px;border-radius:12px;font-size:12px;font-weight:700;margin-right:8px}.view-type.host[_ngcontent-%COMP%]{background-color:#bbdefb;color:#0d47a1}.view-type.embedded[_ngcontent-%COMP%]{background-color:#c8e6c9;color:#1b5e20}"]})}}]);