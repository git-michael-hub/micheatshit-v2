"use strict";(self.webpackChunktailwind=self.webpackChunktailwind||[]).push([[976],{5976:(M,u,a)=>{a.r(u),a.d(u,{SsrComponent:()=>l});var s=a(6895),c=a(827),d=a(8512),e=a(8256),g=a(529);const _=["notesRef"],Z=["bestRef"],m=["prosConsRef"],A=["topicsRef"];function f(t,r){1&t&&e.GkF(0)}function U(t,r){if(1&t&&(e.TgZ(0,"div"),e.YNc(1,f,1,0,"ng-container",15),e.qZA()),2&t){e.oxw();const n=e.MAs(28);e.xp6(1),e.Q6J("ngTemplateOutlet",n)}}function h(t,r){1&t&&e.GkF(0)}function v(t,r){if(1&t&&(e.TgZ(0,"div"),e.YNc(1,h,1,0,"ng-container",15),e.qZA()),2&t){e.oxw();const n=e.MAs(30);e.xp6(1),e.Q6J("ngTemplateOutlet",n)}}function T(t,r){1&t&&e.GkF(0)}function q(t,r){if(1&t&&(e.TgZ(0,"div"),e.YNc(1,T,1,0,"ng-container",15),e.qZA()),2&t){e.oxw();const n=e.MAs(32);e.xp6(1),e.Q6J("ngTemplateOutlet",n)}}function S(t,r){1&t&&e.GkF(0)}function b(t,r){if(1&t&&(e.TgZ(0,"div"),e.YNc(1,S,1,0,"ng-container",15),e.qZA()),2&t){e.oxw();const n=e.MAs(26);e.xp6(1),e.Q6J("ngTemplateOutlet",n)}}const p=function(){return["typescript"]},y=function(){return["json"]};function C(t,r){if(1&t){const n=e.EpF();e.TgZ(0,"p"),e._uU(1,"What is Server-Side Rendering?"),e.qZA(),e.TgZ(2,"ul",16)(3,"li")(4,"strong"),e._uU(5,"Pre-Rendered HTML"),e.qZA(),e._uU(6,": Angular SSR pre-renders the application on the server, sending complete HTML to the client, rather than just the app shell. "),e.qZA(),e.TgZ(7,"li")(8,"strong"),e._uU(9,"Client Hydration"),e.qZA(),e._uU(10,': After the initial HTML is delivered, the client-side Angular application "hydrates" the content, making it interactive. '),e.qZA(),e.TgZ(11,"li")(12,"strong"),e._uU(13,"SEO Benefits"),e.qZA(),e._uU(14,": Search engines receive fully-rendered HTML, improving SEO performance for Angular applications. "),e.qZA(),e.TgZ(15,"li")(16,"strong"),e._uU(17,"Performance"),e.qZA(),e._uU(18,": Users see meaningful content faster, especially on slower devices or networks. "),e.qZA()(),e._UZ(19,"br")(20,"br"),e.TgZ(21,"p"),e._uU(22,"Angular 19 SSR Improvements"),e.qZA(),e.TgZ(23,"ol",17)(24,"li")(25,"strong"),e._uU(26,"Partial Hydration"),e.qZA(),e._uU(27,": "),e.TgZ(28,"ul",18)(29,"li"),e._uU(30,"Angular 19 introduces fine-grained control over which components get hydrated, allowing non-interactive components to remain static."),e.qZA(),e.TgZ(31,"li"),e._uU(32,"Components can be marked for hydration with different modes: 'full', 'lazy', or 'none'."),e.qZA(),e.TgZ(33,"li"),e._uU(34,"This results in smaller bundle sizes and faster interactivity for critical parts of the application."),e.qZA()()(),e.TgZ(35,"li")(36,"strong"),e._uU(37,"Performance Optimizations"),e.qZA(),e._uU(38,": "),e.TgZ(39,"ul",18)(40,"li"),e._uU(41,"Improved serialization between server and client for faster state transfer."),e.qZA(),e.TgZ(42,"li"),e._uU(43,"Enhanced hydration algorithm that reduces content flicker during rehydration."),e.qZA(),e.TgZ(44,"li"),e._uU(45,"Optimized component detection to prevent double-rendering during hydration."),e.qZA()()(),e.TgZ(46,"li")(47,"strong"),e._uU(48,"Integration with Signal-Based Components"),e.qZA(),e._uU(49,": "),e.TgZ(50,"ul",18)(51,"li"),e._uU(52,"Signal-based components work seamlessly with SSR and hydration."),e.qZA(),e.TgZ(53,"li"),e._uU(54,"Signal state can be preserved during transfer from server to client."),e.qZA(),e.TgZ(55,"li"),e._uU(56,"Fine-grained reactivity improves hydration performance."),e.qZA()()(),e.TgZ(57,"li")(58,"strong"),e._uU(59,"Simplified Developer Experience"),e.qZA(),e._uU(60,": "),e.TgZ(61,"ul",18)(62,"li"),e._uU(63,"New "),e.TgZ(64,"code"),e._uU(65,"ng add @angular/ssr"),e.qZA(),e._uU(66," command for easy setup in new or existing projects."),e.qZA(),e.TgZ(67,"li"),e._uU(68,"Auto-detection of common SSR issues during development and build process."),e.qZA(),e.TgZ(69,"li"),e._uU(70,"Better error messaging for debugging server/client mismatches."),e.qZA()()(),e.TgZ(71,"li")(72,"strong"),e._uU(73,"Enhanced Testing Support"),e.qZA(),e._uU(74,": "),e.TgZ(75,"ul",18)(76,"li"),e._uU(77,"Improved testing utilities for SSR applications."),e.qZA(),e.TgZ(78,"li"),e._uU(79,"Test helpers to simulate server and client environments."),e.qZA(),e.TgZ(80,"li"),e._uU(81,"Methods to test partial hydration behavior."),e.qZA()()()(),e._UZ(82,"br")(83,"br"),e.TgZ(84,"p"),e._uU(85,"Basic SSR Setup in Angular"),e.qZA(),e.TgZ(86,"button",19),e.NdJ("click",function(){e.CHM(n);const o=e.MAs(89);return e.KtG(o.hidden=!o.hidden)}),e._uU(87,"code"),e.qZA(),e.TgZ(88,"span",20,21)(90,"div",22)(91,"span"),e._uU(92,"typescript"),e.qZA(),e._UZ(93,"span",23),e.qZA(),e.TgZ(94,"pre"),e._uU(95,"      "),e.TgZ(96,"code",24),e._uU(97,"\n      "),e.qZA(),e._uU(98,"\n    "),e.qZA()(),e._UZ(99,"br")(100,"br"),e.TgZ(101,"p"),e._uU(102,"Angular.json Configuration for SSR"),e.qZA(),e.TgZ(103,"button",19),e.NdJ("click",function(){e.CHM(n);const o=e.MAs(106);return e.KtG(o.hidden=!o.hidden)}),e._uU(104,"code"),e.qZA(),e.TgZ(105,"span",20,25)(107,"div",22)(108,"span"),e._uU(109,"json"),e.qZA(),e._UZ(110,"span",23),e.qZA(),e.TgZ(111,"pre"),e._uU(112,"      "),e.TgZ(113,"code",24),e._uU(114,"\n      "),e.qZA(),e._uU(115,"\n    "),e.qZA()(),e._UZ(116,"br")(117,"br"),e.TgZ(118,"p"),e._uU(119,"Angular 19 SSR Setup with Partial Hydration"),e.qZA(),e.TgZ(120,"button",19),e.NdJ("click",function(){e.CHM(n);const o=e.MAs(123);return e.KtG(o.hidden=!o.hidden)}),e._uU(121,"code"),e.qZA(),e.TgZ(122,"span",20,26)(124,"div",22)(125,"span"),e._uU(126,"typescript"),e.qZA(),e._UZ(127,"span",23),e.qZA(),e.TgZ(128,"pre"),e._uU(129,"      "),e.TgZ(130,"code",24),e._uU(131,"\n      "),e.qZA(),e._uU(132,"\n    "),e.qZA()(),e._UZ(133,"br")(134,"br"),e.TgZ(135,"p"),e._uU(136,"Partial Hydration in Components"),e.qZA(),e.TgZ(137,"button",19),e.NdJ("click",function(){e.CHM(n);const o=e.MAs(140);return e.KtG(o.hidden=!o.hidden)}),e._uU(138,"code"),e.qZA(),e.TgZ(139,"span",20,27)(141,"div",22)(142,"span"),e._uU(143,"typescript"),e.qZA(),e._UZ(144,"span",23),e.qZA(),e.TgZ(145,"pre"),e._uU(146,"      "),e.TgZ(147,"code",24),e._uU(148,"\n      "),e.qZA(),e._uU(149,"\n    "),e.qZA()(),e._UZ(150,"br")(151,"br"),e.TgZ(152,"p"),e._uU(153,"Server vs. Browser Environment Detection"),e.qZA(),e.TgZ(154,"button",19),e.NdJ("click",function(){e.CHM(n);const o=e.MAs(157);return e.KtG(o.hidden=!o.hidden)}),e._uU(155,"code"),e.qZA(),e.TgZ(156,"span",20,28)(158,"div",22)(159,"span"),e._uU(160,"typescript"),e.qZA(),e._UZ(161,"span",23),e.qZA(),e.TgZ(162,"pre"),e._uU(163,"      "),e.TgZ(164,"code",24),e._uU(165,"\n      "),e.qZA(),e._uU(166,"\n    "),e.qZA()(),e._UZ(167,"br")(168,"br"),e.TgZ(169,"p"),e._uU(170,"SSR Build Commands"),e.qZA(),e.TgZ(171,"table",29)(172,"thead")(173,"tr",30)(174,"th",31),e._uU(175,"Command"),e.qZA(),e.TgZ(176,"th",31),e._uU(177,"Description"),e.qZA()()(),e.TgZ(178,"tbody")(179,"tr",32)(180,"td",33)(181,"code"),e._uU(182,"ng add @angular/ssr"),e.qZA()(),e.TgZ(183,"td",33),e._uU(184,"Add SSR capabilities to an Angular application with Angular 19's new simplified setup."),e.qZA()(),e.TgZ(185,"tr",34)(186,"td",33)(187,"code"),e._uU(188,"ng serve --ssr"),e.qZA()(),e.TgZ(189,"td",33),e._uU(190,"Serve the application with SSR enabled during development."),e.qZA()(),e.TgZ(191,"tr",32)(192,"td",33)(193,"code"),e._uU(194,"ng build && ng run my-app:server && ng run my-app:prerender"),e.qZA()(),e.TgZ(195,"td",33),e._uU(196,"Build the client app, server app, and prerender specific routes."),e.qZA()(),e.TgZ(197,"tr",35)(198,"td",33)(199,"code"),e._uU(200,"npm run dev:ssr"),e.qZA()(),e.TgZ(201,"td",33),e._uU(202,"Run the SSR application in development mode after setup."),e.qZA()()()()}if(2&t){const n=e.oxw();e.xp6(96),e.Q6J("highlight",n.ssrSetupCode)("languages",e.DdM(10,p)),e.xp6(17),e.Q6J("highlight",n.angularJsonCode)("languages",e.DdM(11,y)),e.xp6(17),e.Q6J("highlight",n.v19SetupCode)("languages",e.DdM(12,p)),e.xp6(17),e.Q6J("highlight",n.partialHydrationCode)("languages",e.DdM(13,p)),e.xp6(17),e.Q6J("highlight",n.isBrowserCode)("languages",e.DdM(14,p))}}function w(t,r){1&t&&(e.TgZ(0,"ol",36)(1,"li")(2,"strong",37),e._uU(3,"Strategic Partial Hydration"),e.qZA(),e.TgZ(4,"ul",18)(5,"li")(6,"strong"),e._uU(7,"Identify Critical Components"),e.qZA(),e._uU(8,": Prioritize hydration for components that require immediate interactivity, keeping others static to improve initial load time. "),e.qZA(),e.TgZ(9,"li")(10,"strong"),e._uU(11,"Use Lazy Hydration"),e.qZA(),e._uU(12,": For components below the fold, use lazy hydration to defer their interactive initialization until they become visible. "),e.qZA(),e.TgZ(13,"li")(14,"strong"),e._uU(15,"No Hydration for Static Content"),e.qZA(),e._uU(16,": Use "),e.TgZ(17,"code"),e._uU(18),e.qZA(),e._uU(19," for purely static components that don't need interactivity. "),e.qZA()()(),e.TgZ(20,"li")(21,"strong",37),e._uU(22,"State Transfer Optimization"),e.qZA(),e.TgZ(23,"ul",18)(24,"li")(25,"strong"),e._uU(26,"Minimize State Transfer Size"),e.qZA(),e._uU(27,": Only transfer essential state from server to client to reduce payload size and improve hydration speed. "),e.qZA(),e.TgZ(28,"li")(29,"strong"),e._uU(30,"Use the Transfer State API"),e.qZA(),e._uU(31,": Leverage Angular's "),e.TgZ(32,"code"),e._uU(33,"TransferState"),e.qZA(),e._uU(34," to avoid duplicate data fetching on the client. "),e.qZA(),e.TgZ(35,"li")(36,"strong"),e._uU(37,"Plan API Calls Carefully"),e.qZA(),e._uU(38,": For data-heavy components, consider if data should be fetched on server, client, or both. "),e.qZA()()(),e.TgZ(39,"li")(40,"strong",37),e._uU(41,"Environment-Aware Code"),e.qZA(),e.TgZ(42,"ul",18)(43,"li")(44,"strong"),e._uU(45,"Check Execution Environment"),e.qZA(),e._uU(46,": Always use "),e.TgZ(47,"code"),e._uU(48,"isPlatformBrowser"),e.qZA(),e._uU(49," or "),e.TgZ(50,"code"),e._uU(51,"isPlatformServer"),e.qZA(),e._uU(52," before accessing browser or server-specific APIs. "),e.qZA(),e.TgZ(53,"li")(54,"strong"),e._uU(55,"Abstract Browser APIs"),e.qZA(),e._uU(56,": Create abstraction services for browser-specific functionality to avoid SSR errors. "),e.qZA(),e.TgZ(57,"li")(58,"strong"),e._uU(59,"Use SERVER_APP_ID Token"),e.qZA(),e._uU(60,": Use Angular's built-in tokens to adjust behavior between server and client environments. "),e.qZA()()(),e.TgZ(61,"li")(62,"strong",37),e._uU(63,"Performance Considerations"),e.qZA(),e.TgZ(64,"ul",18)(65,"li")(66,"strong"),e._uU(67,"Keep Server Rendering Fast"),e.qZA(),e._uU(68,": Optimize server-side code to render quickly, avoiding unnecessary delays for initial HTML delivery. "),e.qZA(),e.TgZ(69,"li")(70,"strong"),e._uU(71,"Cache Aggressively"),e.qZA(),e._uU(72,": Implement server-side caching for rendered pages to reduce server load and improve response times. "),e.qZA(),e.TgZ(73,"li")(74,"strong"),e._uU(75,"Monitor Server Resources"),e.qZA(),e._uU(76,": SSR increases server load, so monitor memory usage and CPU to ensure stability under load. "),e.qZA()()(),e.TgZ(77,"li")(78,"strong",37),e._uU(79,"Integration with Other Angular 19 Features"),e.qZA(),e.TgZ(80,"ul",18)(81,"li")(82,"strong"),e._uU(83,"Use Signal-Based Components"),e.qZA(),e._uU(84,": Signal-based components integrate well with SSR and partial hydration in Angular 19. "),e.qZA(),e.TgZ(85,"li")(86,"strong"),e._uU(87,"Combine with App Shell"),e.qZA(),e._uU(88,": For complex applications, use App Shell with SSR to provide immediate visual feedback. "),e.qZA(),e.TgZ(89,"li")(90,"strong"),e._uU(91,"Leverage Defer Blocks"),e.qZA(),e._uU(92,": Use Angular's defer blocks to complement partial hydration strategies for lazy-loading content. "),e.qZA()()()()),2&t&&(e.xp6(18),e.AsE("hydration: ","{"," mode: 'none' ","}",""))}function R(t,r){1&t&&(e.TgZ(0,"strong",37),e._uU(1," Pros: "),e.qZA(),e._UZ(2,"br"),e.TgZ(3,"ol",38)(4,"li")(5,"strong"),e._uU(6,"Improved Initial Load Experience"),e.qZA(),e.TgZ(7,"ul",18)(8,"li")(9,"span",3),e._uU(10,"Faster First Contentful Paint"),e.qZA(),e._uU(11,": Users see meaningful content more quickly as the server delivers fully rendered HTML. "),e.qZA(),e.TgZ(12,"li")(13,"span",3),e._uU(14,"Reduced Loading Flicker"),e.qZA(),e._uU(15,": Eliminates the blank screen or loading spinner typical of client-side-only applications. "),e.qZA(),e.TgZ(16,"li")(17,"span",3),e._uU(18,"Better User Experience on Slow Devices"),e.qZA(),e._uU(19,": Less JavaScript parsing and execution required on the client before displaying content. "),e.qZA()()(),e.TgZ(20,"li")(21,"strong"),e._uU(22,"SEO Benefits"),e.qZA(),e.TgZ(23,"ul",18)(24,"li")(25,"span",3),e._uU(26,"Search Engine Indexability"),e.qZA(),e._uU(27,": Search engines receive complete HTML rather than an empty shell, improving content indexing. "),e.qZA(),e.TgZ(28,"li")(29,"span",3),e._uU(30,"Social Media Sharing"),e.qZA(),e._uU(31,": Enables proper metadata for social media platforms that don't execute JavaScript. "),e.qZA(),e.TgZ(32,"li")(33,"span",3),e._uU(34,"Structured Data Support"),e.qZA(),e._uU(35,": Server-rendered markup can include structured data for rich search results. "),e.qZA()()(),e.TgZ(36,"li")(37,"strong"),e._uU(38,"Performance Optimizations"),e.qZA(),e.TgZ(39,"ul",18)(40,"li")(41,"span",3),e._uU(42,"Partial Hydration"),e.qZA(),e._uU(43,": Angular 19's fine-grained hydration reduces client-side JavaScript execution for faster interactivity. "),e.qZA(),e.TgZ(44,"li")(45,"span",3),e._uU(46,"Reduced Time to Interactive"),e.qZA(),e._uU(47,": Critical interactive elements can be prioritized in hydration order. "),e.qZA(),e.TgZ(48,"li")(49,"span",3),e._uU(50,"Smaller Client Bundle"),e.qZA(),e._uU(51,": With partial hydration, components that don't require interactivity can be excluded from client JS bundles. "),e.qZA()()(),e.TgZ(52,"li")(53,"strong"),e._uU(54,"Enhanced Developer Experience"),e.qZA(),e.TgZ(55,"ul",18)(56,"li")(57,"span",3),e._uU(58,"Simplified Setup"),e.qZA(),e._uU(59,": Angular 19 streamlines SSR configuration with improved CLI commands and schematics. "),e.qZA(),e.TgZ(60,"li")(61,"span",3),e._uU(62,"Better Debugging Tools"),e.qZA(),e._uU(63,": Enhanced error messages and improved tooling for identifying SSR-specific issues. "),e.qZA(),e.TgZ(64,"li")(65,"span",3),e._uU(66,"Component-Level Control"),e.qZA(),e._uU(67,": Developers can fine-tune hydration behavior at the component level for optimal performance. "),e.qZA()()()(),e._UZ(68,"br")(69,"br"),e.TgZ(70,"strong",37),e._uU(71," Cons: "),e.qZA(),e._UZ(72,"br"),e.TgZ(73,"ol",38)(74,"li")(75,"strong"),e._uU(76,"Increased Complexity"),e.qZA(),e.TgZ(77,"ul",18)(78,"li")(79,"span",3),e._uU(80,"Server Environment Requirements"),e.qZA(),e._uU(81,": Requires Node.js runtime on the server, which may complicate deployment environments. "),e.qZA(),e.TgZ(82,"li")(83,"span",3),e._uU(84,"Universal Code Constraints"),e.qZA(),e._uU(85,": Code must work in both server and browser environments, requiring careful consideration of APIs used. "),e.qZA(),e.TgZ(86,"li")(87,"span",3),e._uU(88,"Hydration Management"),e.qZA(),e._uU(89,": Developers need to understand and manage hydration strategies for optimal performance. "),e.qZA()()(),e.TgZ(90,"li")(91,"strong"),e._uU(92,"Server Resources"),e.qZA(),e.TgZ(93,"ul",18)(94,"li")(95,"span",3),e._uU(96,"Higher Server Load"),e.qZA(),e._uU(97,": Rendering on the server requires more CPU and memory resources compared to serving static files. "),e.qZA(),e.TgZ(98,"li")(99,"span",3),e._uU(100,"Scaling Considerations"),e.qZA(),e._uU(101,": High-traffic applications may require more robust server infrastructure to handle rendering load. "),e.qZA(),e.TgZ(102,"li")(103,"span",3),e._uU(104,"Cold Start Issues"),e.qZA(),e._uU(105,": Serverless deployments may experience cold start delays for server rendering. "),e.qZA()()(),e.TgZ(106,"li")(107,"strong"),e._uU(108,"Development Challenges"),e.qZA(),e.TgZ(109,"ul",18)(110,"li")(111,"span",3),e._uU(112,"Browser API Limitations"),e.qZA(),e._uU(113,": Browser-specific APIs (localStorage, window, etc.) are unavailable during server rendering. "),e.qZA(),e.TgZ(114,"li")(115,"span",3),e._uU(116,"State Management Complexity"),e.qZA(),e._uU(117,": Transferring initial state from server to client adds complexity to application architecture. "),e.qZA(),e.TgZ(118,"li")(119,"span",3),e._uU(120,"Debugging Difficulty"),e.qZA(),e._uU(121,": Debugging server-client hydration issues can be challenging due to environment differences. "),e.qZA()()(),e.TgZ(122,"li")(123,"strong"),e._uU(124,"Build and Deployment Considerations"),e.qZA(),e.TgZ(125,"ul",18)(126,"li")(127,"span",3),e._uU(128,"Longer Build Times"),e.qZA(),e._uU(129,": SSR requires additional build steps for the server bundle, increasing CI/CD pipeline duration. "),e.qZA(),e.TgZ(130,"li")(131,"span",3),e._uU(132,"Complex Deployments"),e.qZA(),e._uU(133,": Deployment requires both server and client artifacts, complicating deployment pipelines. "),e.qZA(),e.TgZ(134,"li")(135,"span",3),e._uU(136,"Environment Configuration"),e.qZA(),e._uU(137,": Different environments (development, staging, production) may require different SSR configurations. "),e.qZA()()()())}function x(t,r){1&t&&(e.TgZ(0,"ol",38)(1,"li")(2,"strong"),e._uU(3,"Partial Hydration"),e.qZA(),e.TgZ(4,"ul",18)(5,"li")(6,"strong",37),e._uU(7,"Description"),e.qZA(),e._uU(8,": Angular 19's approach to selectively making components interactive after server rendering. "),e.qZA(),e.TgZ(9,"li")(10,"strong",37),e._uU(11,"Relation to SSR"),e.qZA(),e._uU(12,": Builds upon SSR by optimizing the client-side JavaScript execution, only hydrating components that need interactivity. "),e.qZA()()(),e.TgZ(13,"li")(14,"strong"),e._uU(15,"App Shell"),e.qZA(),e.TgZ(16,"ul",18)(17,"li")(18,"strong",37),e._uU(19,"Description"),e.qZA(),e._uU(20,": Minimal HTML, CSS, and JavaScript for displaying a static application shell while content loads. "),e.qZA(),e.TgZ(21,"li")(22,"strong",37),e._uU(23,"Relation to SSR"),e.qZA(),e._uU(24,": Can be combined with SSR, where an App Shell is pre-rendered, and then dynamic content is added through SSR. "),e.qZA()()(),e.TgZ(25,"li")(26,"strong"),e._uU(27,"Prerendering"),e.qZA(),e.TgZ(28,"ul",18)(29,"li")(30,"strong",37),e._uU(31,"Description"),e.qZA(),e._uU(32,": Generating static HTML for routes at build time rather than at request time. "),e.qZA(),e.TgZ(33,"li")(34,"strong",37),e._uU(35,"Relation to SSR"),e.qZA(),e._uU(36,": Uses the same rendering mechanism as SSR but happens during build rather than per request. "),e.qZA()()(),e.TgZ(37,"li")(38,"strong"),e._uU(39,"Transfer State"),e.qZA(),e.TgZ(40,"ul",18)(41,"li")(42,"strong",37),e._uU(43,"Description"),e.qZA(),e._uU(44,": Mechanism to transfer data fetched during server rendering to the client to avoid duplicate requests. "),e.qZA(),e.TgZ(45,"li")(46,"strong",37),e._uU(47,"Relation to SSR"),e.qZA(),e._uU(48,": Enhances SSR performance by eliminating redundant data fetching on the client side. "),e.qZA()()(),e.TgZ(49,"li")(50,"strong"),e._uU(51,"Zone.js and Zoneless Applications"),e.qZA(),e.TgZ(52,"ul",18)(53,"li")(54,"strong",37),e._uU(55,"Description"),e.qZA(),e._uU(56,": Zone.js handles change detection in Angular; zoneless applications use signals instead. "),e.qZA(),e.TgZ(57,"li")(58,"strong",37),e._uU(59,"Relation to SSR"),e.qZA(),e._uU(60,": Zoneless applications with signals can improve SSR performance and hydration efficiency. "),e.qZA()()(),e.TgZ(61,"li")(62,"strong"),e._uU(63,"Angular Universal"),e.qZA(),e.TgZ(64,"ul",18)(65,"li")(66,"strong",37),e._uU(67,"Description"),e.qZA(),e._uU(68,": Angular's server-side rendering platform, now integrated directly into the Angular framework. "),e.qZA(),e.TgZ(69,"li")(70,"strong",37),e._uU(71,"Relation to SSR"),e.qZA(),e._uU(72,": The official implementation of SSR for Angular applications, now simplified in Angular 19. "),e.qZA()()(),e.TgZ(73,"li")(74,"strong"),e._uU(75,"Progressive Web Apps (PWAs)"),e.qZA(),e.TgZ(76,"ul",18)(77,"li")(78,"strong",37),e._uU(79,"Description"),e.qZA(),e._uU(80,": Web applications that use modern web capabilities to deliver app-like experiences. "),e.qZA(),e.TgZ(81,"li")(82,"strong",37),e._uU(83,"Relation to SSR"),e.qZA(),e._uU(84,": SSR can enhance PWA initial load performance while maintaining offline capabilities. "),e.qZA()()()())}class l extends d.Y{constructor(r){super(),this.http=r,this.selectedTab=1,this.ssrSetupCode="// app.server.module.ts\nimport { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule { }",this.angularJsonCode='{\n  "projects": {\n    "my-app": {\n      "architect": {\n        "build": {\n          "options": {\n            "outputPath": "dist/my-app/browser",\n            "index": "src/index.html",\n            "main": "src/main.ts",\n            "browser": "src/main.ts"\n          }\n        },\n        "server": {\n          "builder": "@angular-devkit/build-angular:server",\n          "options": {\n            "outputPath": "dist/my-app/server",\n            "main": "src/main.server.ts"\n          }\n        },\n        "serve-ssr": {\n          "builder": "@nguniversal/builders:ssr-dev-server",\n          "options": {\n            "browserTarget": "my-app:build",\n            "serverTarget": "my-app:server"\n          }\n        },\n        "prerender": {\n          "builder": "@nguniversal/builders:prerender",\n          "options": {\n            "browserTarget": "my-app:build:production",\n            "serverTarget": "my-app:server:production",\n            "routes": [\n              "/",\n              "/about",\n              "/contact"\n            ]\n          }\n        }\n      }\n    }\n  }\n}',this.v19SetupCode="// main.server.ts\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { config } from './app/app.config.server';\n\nconst bootstrap = () => bootstrapApplication(AppComponent, config);\n\nexport default bootstrap;\n\n// app.config.server.ts\nimport { ApplicationConfig, mergeApplicationConfig } from '@angular/core';\nimport { provideServerRendering } from '@angular/platform-server';\nimport { appConfig } from './app.config';\n\nconst serverConfig: ApplicationConfig = {\n  providers: [\n    provideServerRendering()\n  ]\n};\n\nexport const config = mergeApplicationConfig(appConfig, serverConfig);",this.partialHydrationCode="// user-profile.component.ts\nimport { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  template: `\n    <div>\n      <h1>{{ name() }}</h1>\n      <p>{{ bio() }}</p>\n      \x3c!-- This component won't be interactive on the client --\x3e\n    </div>\n  `,\n  hydration: { mode: 'none' } // Options: 'full' (default), 'lazy', 'none'\n})\nexport class UserProfileComponent {\n  name = input<string>('User Name');\n  bio = input<string>('User bio information');\n}\n\n// interactive-component.ts\n@Component({\n  selector: 'app-interactive-component',\n  standalone: true,\n  template: `\n    <button (click)=\"increment()\">Count: {{ count() }}</button>\n  `,\n  hydration: { mode: 'full' } // This component gets fully hydrated immediately\n})\nexport class InteractiveComponent {\n  count = signal(0);\n\n  increment() {\n    this.count.update(v => v + 1);\n  }\n}\n\n// lazy-hydrated.component.ts\n@Component({\n  selector: 'app-lazy-component',\n  standalone: true,\n  template: `<div>This hydrates when visible</div>`,\n  hydration: { mode: 'lazy' } // Hydrates when component becomes visible\n})\nexport class LazyHydratedComponent { }",this.isBrowserCode="// Using DI tokens\nimport { PLATFORM_ID, Inject, Component } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n\n@Component({\n  selector: 'app-platform-aware',\n  template: '<div>Platform Aware Component</div>'\n})\nexport class PlatformAwareComponent {\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {\n    if (isPlatformBrowser(this.platformId)) {\n      // Browser-only code\n      console.log('Running in browser');\n      // Can safely access window, document, localStorage\n      window.addEventListener('resize', this.onResize);\n    }\n\n    if (isPlatformServer(this.platformId)) {\n      // Server-only code\n      console.log('Running on server');\n      // Avoid browser APIs, use only Node/server-compatible code\n    }\n  }\n\n  onResize() {\n    // Handle resize event (browser-only)\n  }\n}"}ngOnInit(){}}l.\u0275fac=function(r){return new(r||l)(e.Y36(g.eN))},l.\u0275cmp=e.Xpm({type:l,selectors:[["app-ssr"]],viewQuery:function(r,n){if(1&r&&(e.Gf(_,5),e.Gf(Z,5),e.Gf(m,5),e.Gf(A,5)),2&r){let i;e.iGM(i=e.CRH())&&(n.notesRef=i.first),e.iGM(i=e.CRH())&&(n.bestRef=i.first),e.iGM(i=e.CRH())&&(n.prosConsRef=i.first),e.iGM(i=e.CRH())&&(n.topicsRef=i.first)}},standalone:!0,features:[e.qOj,e.jDz],decls:33,vars:12,consts:[[1,"p-4","text-sm"],[1,"heading-1","mb-2"],[1,"text-content"],[1,"text-zinc-50","tw-font-medium"],[1,"flex","flex-col"],[1,"flex","border-b","border-gray-200"],[1,"text-sky-400","hover:text-rose-400","font-semibold","py-2","px-4","border-b-2","border-transparent","hover:border-gray-500","focus:outline-none",3,"click"],[1,"p-4"],[3,"ngSwitch"],[4,"ngSwitchCase"],[4,"ngSwitchDefault"],["notesRef",""],["bestRef",""],["prosConsRef",""],["topicsRef",""],[4,"ngTemplateOutlet"],[1,"list-disc","pl-4","text-sm"],[1,"list-decimal","pl-4","text-sm"],[1,"list-disc","pl-4"],[1,"border","border-rose-400","rounded-md","px-1","text-sky-400",3,"click"],["hidden","","copyToClipboard",""],["code1",""],[1,"flex","flex-row","justify-between","items-center","bg-gray-900","px-4","py-2","relative","top-5"],[1,"copy-button-wrapper","bg-gray-700"],[3,"highlight","languages"],["code2",""],["code3",""],["code4",""],["code5",""],[1,"w-full","border-collapse","rounded-lg","overflow-hidden","shadow-md"],[1,"bg-gray-800","text-gray-100"],[1,"py-3","px-4","text-left"],[1,"border-b","border-gray-700","bg-gray-900","hover:bg-gray-800","transition-colors"],[1,"py-3","px-4"],[1,"border-b","border-gray-700","bg-gray-950","hover:bg-gray-800","transition-colors"],[1,"bg-gray-950","hover:bg-gray-800","transition-colors"],[1,"list-decimal","px-4","text-sm"],[1,"text-sky-400"],[1,"list-decimal","px-10","text-sm"]],template:function(r,n){1&r&&(e.TgZ(0,"section",0)(1,"p",1),e._uU(2," Server-Side Rendering (SSR) "),e.qZA(),e.TgZ(3,"div",2)(4,"p")(5,"span",3),e._uU(6,"Server-Side Rendering (SSR)"),e.qZA(),e._uU(7," in Angular 19 enables generating complete HTML pages on the server for each request. This approach improves initial page load performance, enhances SEO, and provides better user experience across devices, with significant enhancements in Angular 19 for partial hydration, performance, and developer experience. "),e.qZA(),e._UZ(8,"br"),e.TgZ(9,"div",4)(10,"div",5)(11,"button",6),e.NdJ("click",function(){return n.selectedTab=1}),e._uU(12," Notes "),e.qZA(),e.TgZ(13,"button",6),e.NdJ("click",function(){return n.selectedTab=2}),e._uU(14," Best Practices "),e.qZA(),e.TgZ(15,"button",6),e.NdJ("click",function(){return n.selectedTab=3}),e._uU(16," Pros and Cons "),e.qZA(),e.TgZ(17,"button",6),e.NdJ("click",function(){return n.selectedTab=4}),e._uU(18," Related Topics "),e.qZA()(),e.TgZ(19,"div",7),e.ynx(20,8),e.YNc(21,U,2,1,"div",9),e.YNc(22,v,2,1,"div",9),e.YNc(23,q,2,1,"div",9),e.YNc(24,b,2,1,"div",10),e.BQk(),e.qZA()()()(),e.YNc(25,C,203,15,"ng-template",null,11,e.W1O),e.YNc(27,w,93,2,"ng-template",null,12,e.W1O),e.YNc(29,R,138,0,"ng-template",null,13,e.W1O),e.YNc(31,x,85,0,"ng-template",null,14,e.W1O)),2&r&&(e.xp6(11),e.ekj("text-rose-300",1===n.selectedTab),e.xp6(2),e.ekj("text-rose-300",2===n.selectedTab),e.xp6(2),e.ekj("text-rose-300",3===n.selectedTab),e.xp6(2),e.ekj("text-rose-300",4===n.selectedTab),e.xp6(3),e.Q6J("ngSwitch",n.selectedTab),e.xp6(1),e.Q6J("ngSwitchCase",2),e.xp6(1),e.Q6J("ngSwitchCase",3),e.xp6(1),e.Q6J("ngSwitchCase",4))},dependencies:[s.ez,s.tP,s.RF,s.n9,s.ED,c._l,c.y$],styles:["p[_ngcontent-%COMP%]{margin:0}"]})}}]);