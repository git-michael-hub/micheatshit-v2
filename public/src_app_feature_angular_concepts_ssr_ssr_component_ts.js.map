{"version":3,"file":"src_app_feature_angular_concepts_ssr_ssr_component_ts.js","mappings":"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","sources":["./src/app/feature/angular/concepts/ssr/ssr.component.ts","./src/app/feature/angular/concepts/ssr/ssr.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, ViewChild, TemplateRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-ssr',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './ssr.component.html',\n  styleUrls: ['./ssr.component.scss']\n})\nexport class SsrComponent extends UnsubscribeService {\n  selectedTab = 1;\n\n  // Template references for the tabs\n  @ViewChild('notesRef') notesRef!: TemplateRef<any>;\n  @ViewChild('bestRef') bestRef!: TemplateRef<any>;\n  @ViewChild('prosConsRef') prosConsRef!: TemplateRef<any>;\n  @ViewChild('topicsRef') topicsRef!: TemplateRef<any>;\n\n  // Code examples for server-side rendering\n  ssrSetupCode: string = `// app.server.module.ts\nimport { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule { }`;\n\n  angularJsonCode: string = `{\n  \"projects\": {\n    \"my-app\": {\n      \"architect\": {\n        \"build\": {\n          \"options\": {\n            \"outputPath\": \"dist/my-app/browser\",\n            \"index\": \"src/index.html\",\n            \"main\": \"src/main.ts\",\n            \"browser\": \"src/main.ts\"\n          }\n        },\n        \"server\": {\n          \"builder\": \"@angular-devkit/build-angular:server\",\n          \"options\": {\n            \"outputPath\": \"dist/my-app/server\",\n            \"main\": \"src/main.server.ts\"\n          }\n        },\n        \"serve-ssr\": {\n          \"builder\": \"@nguniversal/builders:ssr-dev-server\",\n          \"options\": {\n            \"browserTarget\": \"my-app:build\",\n            \"serverTarget\": \"my-app:server\"\n          }\n        },\n        \"prerender\": {\n          \"builder\": \"@nguniversal/builders:prerender\",\n          \"options\": {\n            \"browserTarget\": \"my-app:build:production\",\n            \"serverTarget\": \"my-app:server:production\",\n            \"routes\": [\n              \"/\",\n              \"/about\",\n              \"/contact\"\n            ]\n          }\n        }\n      }\n    }\n  }\n}`;\n\n  v19SetupCode: string = `// main.server.ts\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\nimport { config } from './app/app.config.server';\n\nconst bootstrap = () => bootstrapApplication(AppComponent, config);\n\nexport default bootstrap;\n\n// app.config.server.ts\nimport { ApplicationConfig, mergeApplicationConfig } from '@angular/core';\nimport { provideServerRendering } from '@angular/platform-server';\nimport { appConfig } from './app.config';\n\nconst serverConfig: ApplicationConfig = {\n  providers: [\n    provideServerRendering()\n  ]\n};\n\nexport const config = mergeApplicationConfig(appConfig, serverConfig);`;\n\n  partialHydrationCode: string = `// user-profile.component.ts\nimport { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  standalone: true,\n  template: \\`\n    <div>\n      <h1>{{ name() }}</h1>\n      <p>{{ bio() }}</p>\n      <!-- This component won't be interactive on the client -->\n    </div>\n  \\`,\n  hydration: { mode: 'none' } // Options: 'full' (default), 'lazy', 'none'\n})\nexport class UserProfileComponent {\n  name = input<string>('User Name');\n  bio = input<string>('User bio information');\n}\n\n// interactive-component.ts\n@Component({\n  selector: 'app-interactive-component',\n  standalone: true,\n  template: \\`\n    <button (click)=\"increment()\">Count: {{ count() }}</button>\n  \\`,\n  hydration: { mode: 'full' } // This component gets fully hydrated immediately\n})\nexport class InteractiveComponent {\n  count = signal(0);\n\n  increment() {\n    this.count.update(v => v + 1);\n  }\n}\n\n// lazy-hydrated.component.ts\n@Component({\n  selector: 'app-lazy-component',\n  standalone: true,\n  template: \\`<div>This hydrates when visible</div>\\`,\n  hydration: { mode: 'lazy' } // Hydrates when component becomes visible\n})\nexport class LazyHydratedComponent { }`;\n\n  isBrowserCode: string = `// Using DI tokens\nimport { PLATFORM_ID, Inject, Component } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n\n@Component({\n  selector: 'app-platform-aware',\n  template: '<div>Platform Aware Component</div>'\n})\nexport class PlatformAwareComponent {\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {\n    if (isPlatformBrowser(this.platformId)) {\n      // Browser-only code\n      console.log('Running in browser');\n      // Can safely access window, document, localStorage\n      window.addEventListener('resize', this.onResize);\n    }\n\n    if (isPlatformServer(this.platformId)) {\n      // Server-only code\n      console.log('Running on server');\n      // Avoid browser APIs, use only Node/server-compatible code\n    }\n  }\n\n  onResize() {\n    // Handle resize event (browser-only)\n  }\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Code examples are defined inline in the component\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Server-Side Rendering (SSR)\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Server-Side Rendering (SSR)</span>\n      in Angular 19 enables generating complete HTML pages on the server for each request. This approach improves initial page load performance, enhances SEO, and provides better user experience across devices, with significant enhancements in Angular 19 for partial hydration, performance, and developer experience.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What is Server-Side Rendering?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Pre-Rendered HTML</strong>:\n      Angular SSR pre-renders the application on the server, sending complete HTML to the client, rather than just the app shell.\n    </li>\n    <li>\n      <strong>Client Hydration</strong>:\n      After the initial HTML is delivered, the client-side Angular application \"hydrates\" the content, making it interactive.\n    </li>\n    <li>\n      <strong>SEO Benefits</strong>:\n      Search engines receive fully-rendered HTML, improving SEO performance for Angular applications.\n    </li>\n    <li>\n      <strong>Performance</strong>:\n      Users see meaningful content faster, especially on slower devices or networks.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 SSR Improvements</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Partial Hydration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Angular 19 introduces fine-grained control over which components get hydrated, allowing non-interactive components to remain static.</li>\n        <li>Components can be marked for hydration with different modes: 'full', 'lazy', or 'none'.</li>\n        <li>This results in smaller bundle sizes and faster interactivity for critical parts of the application.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimizations</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved serialization between server and client for faster state transfer.</li>\n        <li>Enhanced hydration algorithm that reduces content flicker during rehydration.</li>\n        <li>Optimized component detection to prevent double-rendering during hydration.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Integration with Signal-Based Components</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Signal-based components work seamlessly with SSR and hydration.</li>\n        <li>Signal state can be preserved during transfer from server to client.</li>\n        <li>Fine-grained reactivity improves hydration performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Simplified Developer Experience</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>New <code>ng add @angular/ssr</code> command for easy setup in new or existing projects.</li>\n        <li>Auto-detection of common SSR issues during development and build process.</li>\n        <li>Better error messaging for debugging server/client mismatches.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Testing Support</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Improved testing utilities for SSR applications.</li>\n        <li>Test helpers to simulate server and client environments.</li>\n        <li>Methods to test partial hydration behavior.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Basic SSR Setup in Angular</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"ssrSetupCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular.json Configuration for SSR</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>json</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"angularJsonCode\"\n        [languages]=\"['json']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular 19 SSR Setup with Partial Hydration</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19SetupCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Partial Hydration in Components</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"partialHydrationCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Server vs. Browser Environment Detection</p>\n  <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code5 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"isBrowserCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>SSR Build Commands</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Command</th>\n        <th class=\"py-3 px-4 text-left\">Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng add @angular/ssr</code></td>\n        <td class=\"py-3 px-4\">Add SSR capabilities to an Angular application with Angular 19's new simplified setup.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng serve --ssr</code></td>\n        <td class=\"py-3 px-4\">Serve the application with SSR enabled during development.</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>ng build && ng run my-app:server && ng run my-app:prerender</code></td>\n        <td class=\"py-3 px-4\">Build the client app, server app, and prerender specific routes.</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\"><code>npm run dev:ssr</code></td>\n        <td class=\"py-3 px-4\">Run the SSR application in development mode after setup.</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Strategic Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Identify Critical Components</strong>:\n          Prioritize hydration for components that require immediate interactivity, keeping others static to improve initial load time.\n        </li>\n        <li>\n          <strong>Use Lazy Hydration</strong>:\n          For components below the fold, use lazy hydration to defer their interactive initialization until they become visible.\n        </li>\n        <li>\n          <strong>No Hydration for Static Content</strong>:\n          Use <code>hydration: {{ '{' }} mode: 'none' {{ '}' }}</code> for purely static components that don't need interactivity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">State Transfer Optimization</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Minimize State Transfer Size</strong>:\n          Only transfer essential state from server to client to reduce payload size and improve hydration speed.\n        </li>\n        <li>\n          <strong>Use the Transfer State API</strong>:\n          Leverage Angular's <code>TransferState</code> to avoid duplicate data fetching on the client.\n        </li>\n        <li>\n          <strong>Plan API Calls Carefully</strong>:\n          For data-heavy components, consider if data should be fetched on server, client, or both.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Environment-Aware Code</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Check Execution Environment</strong>:\n          Always use <code>isPlatformBrowser</code> or <code>isPlatformServer</code> before accessing browser or server-specific APIs.\n        </li>\n        <li>\n          <strong>Abstract Browser APIs</strong>:\n          Create abstraction services for browser-specific functionality to avoid SSR errors.\n        </li>\n        <li>\n          <strong>Use SERVER_APP_ID Token</strong>:\n          Use Angular's built-in tokens to adjust behavior between server and client environments.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Performance Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Keep Server Rendering Fast</strong>:\n          Optimize server-side code to render quickly, avoiding unnecessary delays for initial HTML delivery.\n        </li>\n        <li>\n          <strong>Cache Aggressively</strong>:\n          Implement server-side caching for rendered pages to reduce server load and improve response times.\n        </li>\n        <li>\n          <strong>Monitor Server Resources</strong>:\n          SSR increases server load, so monitor memory usage and CPU to ensure stability under load.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Integration with Other Angular 19 Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Signal-Based Components</strong>:\n          Signal-based components integrate well with SSR and partial hydration in Angular 19.\n        </li>\n        <li>\n          <strong>Combine with App Shell</strong>:\n          For complex applications, use App Shell with SSR to provide immediate visual feedback.\n        </li>\n        <li>\n          <strong>Leverage Defer Blocks</strong>:\n          Use Angular's defer blocks to complement partial hydration strategies for lazy-loading content.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Improved Initial Load Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Faster First Contentful Paint</span>:\n          Users see meaningful content more quickly as the server delivers fully rendered HTML.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Loading Flicker</span>:\n          Eliminates the blank screen or loading spinner typical of client-side-only applications.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better User Experience on Slow Devices</span>:\n          Less JavaScript parsing and execution required on the client before displaying content.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>SEO Benefits</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Search Engine Indexability</span>:\n          Search engines receive complete HTML rather than an empty shell, improving content indexing.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Social Media Sharing</span>:\n          Enables proper metadata for social media platforms that don't execute JavaScript.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Structured Data Support</span>:\n          Server-rendered markup can include structured data for rich search results.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimizations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Partial Hydration</span>:\n          Angular 19's fine-grained hydration reduces client-side JavaScript execution for faster interactivity.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Time to Interactive</span>:\n          Critical interactive elements can be prioritized in hydration order.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Smaller Client Bundle</span>:\n          With partial hydration, components that don't require interactivity can be excluded from client JS bundles.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Developer Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Simplified Setup</span>:\n          Angular 19 streamlines SSR configuration with improved CLI commands and schematics.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better Debugging Tools</span>:\n          Enhanced error messages and improved tooling for identifying SSR-specific issues.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Component-Level Control</span>:\n          Developers can fine-tune hydration behavior at the component level for optimal performance.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Increased Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Server Environment Requirements</span>:\n          Requires Node.js runtime on the server, which may complicate deployment environments.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Universal Code Constraints</span>:\n          Code must work in both server and browser environments, requiring careful consideration of APIs used.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Hydration Management</span>:\n          Developers need to understand and manage hydration strategies for optimal performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Server Resources</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Higher Server Load</span>:\n          Rendering on the server requires more CPU and memory resources compared to serving static files.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Scaling Considerations</span>:\n          High-traffic applications may require more robust server infrastructure to handle rendering load.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Cold Start Issues</span>:\n          Serverless deployments may experience cold start delays for server rendering.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Development Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Browser API Limitations</span>:\n          Browser-specific APIs (localStorage, window, etc.) are unavailable during server rendering.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">State Management Complexity</span>:\n          Transferring initial state from server to client adds complexity to application architecture.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Debugging Difficulty</span>:\n          Debugging server-client hydration issues can be challenging due to environment differences.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Build and Deployment Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Longer Build Times</span>:\n          SSR requires additional build steps for the server bundle, increasing CI/CD pipeline duration.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Complex Deployments</span>:\n          Deployment requires both server and client artifacts, complicating deployment pipelines.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Environment Configuration</span>:\n          Different environments (development, staging, production) may require different SSR configurations.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular 19's approach to selectively making components interactive after server rendering.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          Builds upon SSR by optimizing the client-side JavaScript execution, only hydrating components that need interactivity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>App Shell</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Minimal HTML, CSS, and JavaScript for displaying a static application shell while content loads.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          Can be combined with SSR, where an App Shell is pre-rendered, and then dynamic content is added through SSR.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Prerendering</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Generating static HTML for routes at build time rather than at request time.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          Uses the same rendering mechanism as SSR but happens during build rather than per request.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Transfer State</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Mechanism to transfer data fetched during server rendering to the client to avoid duplicate requests.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          Enhances SSR performance by eliminating redundant data fetching on the client side.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Zone.js and Zoneless Applications</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Zone.js handles change detection in Angular; zoneless applications use signals instead.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          Zoneless applications with signals can improve SSR performance and hydration efficiency.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular Universal</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's server-side rendering platform, now integrated directly into the Angular framework.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          The official implementation of SSR for Angular applications, now simplified in Angular 19.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Progressive Web Apps (PWAs)</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Web applications that use modern web capabilities to deliver app-like experiences.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to SSR</strong>:\n          SSR can enhance PWA initial load performance while maintaining offline capabilities.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n"],"names":["CommonModule","HighlightModule","UnsubscribeService","i0","SsrComponent","constructor","http","ngOnInit","selectors","viewQuery","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}