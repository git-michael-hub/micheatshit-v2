{"version":3,"file":"src_app_feature_angular_concepts_deferrable-views_deferrable-views_component_ts.js","mappings":"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","sources":["./src/app/feature/angular/concepts/deferrable-views/deferrable-views.component.ts","./src/app/feature/angular/concepts/deferrable-views/deferrable-views.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\nimport { takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-deferrable-views',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './deferrable-views.component.html',\n  styleUrls: ['./deferrable-views.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeferrableViewsComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Code examples for deferrable views\n  basicDeferCode = `<!-- Basic @defer syntax -->\n<section>\n  <header>Always rendered content</header>\n\n  @defer {\n    <!-- Heavy component only loaded when needed -->\n    <app-data-visualization [data]=\"complexData\"></app-data-visualization>\n  } @loading {\n    <p>Loading visualization...</p>\n  } @error {\n    <p>Error loading visualization component</p>\n  } @placeholder {\n    <div class=\"placeholder-box\">Visualization will appear here</div>\n  }\n</section>`;\n\n  triggerConditionsCode = `<!-- Different trigger conditions -->\n<!-- Load when element becomes visible -->\n@defer (on viewport) {\n  <app-comments [postId]=\"postId\"></app-comments>\n}\n\n<!-- Load when user interaction occurs -->\n@defer (on interaction) {\n  <app-interactive-map></app-interactive-map>\n}\n\n<!-- Load when specific condition is met -->\n@defer (when isUserLoggedIn) {\n  <app-user-dashboard></app-user-dashboard>\n}\n\n<!-- Load after timer expires -->\n@defer (on timer(2000)) {\n  <app-newsletter-signup></app-newsletter-signup>\n}\n\n<!-- Load during idle browser time -->\n@defer (on idle) {\n  <app-related-posts></app-related-posts>\n}`;\n\n  prefetchingCode = `<!-- Prefetching strategies -->\n<!-- Fetch on idle but render on viewport -->\n@defer (on viewport; prefetch on idle) {\n  <app-product-recommendations></app-product-recommendations>\n}\n\n<!-- Fetch when hovering somewhere, render when in viewport -->\n@defer (on viewport; prefetch on hover(buyButton)) {\n  <app-checkout-options></app-checkout-options>\n}\n\n<!-- Fetch immediately but render only when condition is met -->\n@defer (when isCartFull; prefetch on immediate) {\n  <app-special-offers></app-special-offers>\n}`;\n\n  v19EnhancementsCode = `// Angular 19 Enhanced Deferrable Views Features\n\n// 1. Minimum rendering time to prevent flashing\n@defer (on viewport; minimum 300ms) {\n  <app-content-section></app-content-section>\n}\n\n// 2. Progressive hydration integration\n@defer (on viewport; hydration: partial) {\n  <app-server-rendered-content></app-server-rendered-content>\n}\n\n// 3. Loading skeleton with data access\n@defer {\n  <app-user-profile [data]=\"userData\"></app-user-profile>\n} @loading (minimum 500ms) {\n  <app-profile-skeleton [userName]=\"userData.name\"></app-profile-skeleton>\n}\n\n// 4. Signals integration for dynamic conditions\n@defer (when userPermissions.admin()) {\n  <app-admin-dashboard></app-admin-dashboard>\n}\n\n// 5. Priority hints for browser loading\n@defer (on viewport; priority: high) {\n  <app-critical-content></app-critical-content>\n}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Load code examples from files if needed\n    // Currently using inline examples\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Deferrable Views\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Deferrable Views</span>\n      in Angular 19 provide an enhanced built-in mechanism for lazy loading template fragments. Using the <code>&#64;defer</code> block, developers can optimize initial load times by deferring non-critical content, with improved integration with partial hydration, signals, and enhanced performance metrics.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button  (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button  (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button  (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button  (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef;\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What are Deferrable Views?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Template Fragments</strong>:\n      Portions of templates that can be lazily loaded based on conditions.\n    </li>\n    <li>\n      <strong>&#64;defer Block</strong>:\n      Angular's built-in syntax for declaring deferred content.\n    </li>\n    <li>\n      <strong>Optimized Loading</strong>:\n      Loads content only when needed, improving initial page load times.\n    </li>\n    <li>\n      <strong>Fallback States</strong>:\n      Provides loading, error, and placeholder states for a better user experience.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Basic &#64;defer Syntax</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"basicDeferCode\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Trigger Conditions for Deferrable Content</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"triggerConditionsCode\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Prefetching Strategies</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>html</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"prefetchingCode\"\n        [languages]=\"['html']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>New in Angular 19: Enhanced Deferrable Views</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19EnhancementsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Key Enhancements in Angular 19</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Integrated Partial Hydration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Deferrable views now work seamlessly with Angular's partial hydration system, allowing for finer control over which parts of server-rendered content get hydrated.</li>\n        <li>Content can remain static or be selectively hydrated based on priority and user interaction patterns.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Metrics Integration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Built-in performance tracking for deferred content, with integration into Angular DevTools.</li>\n        <li>Measures key metrics like Time to Interactive for deferred content.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signals-based Trigger Conditions</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Deferred content can be triggered based on signals, providing reactive loading based on state changes.</li>\n        <li>Enables more sophisticated loading strategies tied to application state.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Loading States</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Minimum loading times to prevent \"flashing\" of loading states for fast connections.</li>\n        <li>Ability to access parent scope data within loading and placeholder templates.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Priority Hints</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Support for browser priority hints to indicate the importance of deferred content to the browser's loading mechanisms.</li>\n        <li>Helps optimize browser resource allocation for critical deferred content.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>How Deferrable Views Improve Performance</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Metric</th>\n        <th class=\"py-3 px-4 text-left\">Improvement</th>\n        <th class=\"py-3 px-4 text-left\">Typical Impact</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Initial Load Time</td>\n        <td class=\"py-3 px-4\">Load only essential content initially</td>\n        <td class=\"py-3 px-4\">20-40% faster FCP</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Bundle Size</td>\n        <td class=\"py-3 px-4\">Components loaded on demand</td>\n        <td class=\"py-3 px-4\">15-30% smaller initial bundle</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Rendering Time</td>\n        <td class=\"py-3 px-4\">Less initial rendering work</td>\n        <td class=\"py-3 px-4\">Improved TTI by 25-35%</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Resource Usage</td>\n        <td class=\"py-3 px-4\">Lower CPU/memory initial footprint</td>\n        <td class=\"py-3 px-4\">Reduced by up to 25%</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Choose Appropriate Trigger Conditions</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Viewport Triggers</strong>:\n          Use <code>on viewport</code> for below-the-fold content that's likely to be scrolled to.\n        </li>\n        <li>\n          <strong>Interaction Triggers</strong>:\n          Use <code>on interaction</code> for content that should load after a user interaction, like clicking a tab.\n        </li>\n        <li>\n          <strong>Idle Triggers</strong>:\n          Use <code>on idle</code> for non-critical content that should load when the browser is idle.\n        </li>\n        <li>\n          <strong>Condition Triggers</strong>:\n          Use <code>when</code> with signals for content that depends on application state.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize Prefetching Strategy</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Pair Rendering and Prefetching</strong>:\n          Use different triggers for prefetching vs. rendering for best user experience.\n        </li>\n        <li>\n          <strong>Prefetch Critical Paths</strong>:\n          Prefetch content that users are likely to need based on common navigation patterns.\n        </li>\n        <li>\n          <strong>Balance Resource Usage</strong>:\n          Don't prefetch everything—prioritize based on likelihood of use and resource cost.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Design Meaningful Loading States</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Skeleton UI</strong>:\n          Implement skeleton UI patterns in loading blocks that match the shape of the content.\n        </li>\n        <li>\n          <strong>Avoid Layout Shifts</strong>:\n          Ensure loading, placeholder, and content states have similar dimensions to prevent layout shifts.\n        </li>\n        <li>\n          <strong>Set Minimum Display Times</strong>:\n          Use the minimum time parameter to prevent loading state flashing on fast connections.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Error Handling</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Always Include Error States</strong>:\n          Always include an <code>&#64;error</code> block to handle loading failures gracefully.\n        </li>\n        <li>\n          <strong>Provide Recovery Options</strong>:\n          Include retry functionality in error states when appropriate.\n        </li>\n        <li>\n          <strong>Log Errors</strong>:\n          Implement error logging in error blocks to track loading issues.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Integration with Angular 19 Features</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Combine with Partial Hydration</strong>:\n          Use deferrable views with partial hydration for optimal SSR performance.\n        </li>\n        <li>\n          <strong>Use with Control Flow</strong>:\n          Combine with <code>&#64;if</code>, <code>&#64;for</code>, and <code>&#64;switch</code> blocks for dynamic content control.\n        </li>\n        <li>\n          <strong>Leverage Signals</strong>:\n          Use signals for trigger conditions to create reactive loading patterns.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Performance Improvements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Faster Initial Load</span>:\n          Only essential content is loaded initially, resulting in faster First Contentful Paint and Time to Interactive metrics.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Bundle Size</span>:\n          Components are loaded on demand, reducing the initial JavaScript payload.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Optimized Resource Usage</span>:\n          Lower CPU and memory usage during initial page load, especially important for mobile devices.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced User Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Graceful Loading States</span>:\n          Provides built-in loading, error, and placeholder states for a polished user experience.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Prioritized Content</span>:\n          Critical content appears quickly, with less important content loaded later.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Responsive Interaction</span>:\n          Interface remains responsive while heavy content loads in the background.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Declarative Syntax</span>:\n          Simple, readable syntax that clearly expresses loading intent.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Built-in Framework Feature</span>:\n          No need for third-party libraries or complex setup for lazy loading template fragments.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Fine-grained Control</span>:\n          Multiple trigger options and prefetching strategies for precise loading control.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Angular 19 Enhancements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Partial Hydration Integration</span>:\n          Seamless integration with Angular's partial hydration system for superior SSR performance.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Signals Compatibility</span>:\n          Can use signals for reactive loading conditions, enhancing the reactive programming model.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Performance Metrics</span>:\n          Built-in performance tracking and integration with Angular DevTools for optimization.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Potential for Overuse</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Too Many Defer Blocks</span>:\n          Overuse can lead to too many HTTP requests and actually harm performance.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Complex Loading Patterns</span>:\n          Excessive defer blocks can create complex loading patterns that are hard to predict and debug.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>UX Considerations</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Layout Shifts</span>:\n          If not carefully designed, deferred content can cause layout shifts when it loads.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Loading Flashes</span>:\n          Without minimum time settings, rapid loading/unloading of states can cause visual flashing.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">User Expectation Management</span>:\n          Users may be confused by content that appears after they've already scanned a page.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Testing Challenges</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Complex Test Scenarios</span>:\n          Testing deferred content requires handling multiple loading states and timing conditions.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">E2E Test Timing</span>:\n          End-to-end tests need to account for deferred loading timing, which can be tricky.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Learning Curve</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">New Syntax to Learn</span>:\n          Additional syntax and concepts for team members to master.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Strategic Implementation</span>:\n          Requires understanding of performance optimization principles to use effectively.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Built-in Control Flow</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's new template syntax for conditional rendering (<code>&#64;if</code>), iteration (<code>&#64;for</code>), and branching (<code>&#64;switch</code>).\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          Deferrable views (<code>&#64;defer</code>) are part of the same control flow syntax family and can be nested within other control flow blocks.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Lazy Loading</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          A technique where parts of an application are loaded only when needed, traditionally used for route-level code splitting.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          Deferrable views bring lazy loading to the template fragment level, complementing route-level lazy loading.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Server-Side Rendering (SSR)</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Rendering Angular applications on the server before sending them to the client.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          Deferrable views can be integrated with SSR and partial hydration for more efficient server rendering.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          A technique where only parts of a server-rendered application are \"hydrated\" with JavaScript functionality.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          In Angular 19, deferrable views integrate with partial hydration to allow granular control over hydration.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimization</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Techniques to improve application load times, interactivity, and resource usage.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          Deferrable views are a primary tool for optimizing initial load performance in Angular applications.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's reactive state management primitives introduced in recent versions.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          In Angular 19, deferrable views can use signals for their conditional triggers, enabling reactive loading patterns.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Core Web Vitals</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Google's metrics for measuring user experience quality, including LCP, FID, and CLS.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Deferrable Views</strong>:\n          Deferrable views can significantly improve metrics like Largest Contentful Paint by prioritizing critical content.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n"],"names":["CommonModule","HighlightModule","UnsubscribeService","i0","DeferrableViewsComponent","constructor","http","ngOnInit","selectors","standalone","features","decls","vars","consts","template","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}