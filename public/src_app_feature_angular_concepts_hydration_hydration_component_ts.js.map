{"version":3,"file":"src_app_feature_angular_concepts_hydration_hydration_component_ts.js","mappings":"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","sources":["./src/app/feature/angular/concepts/hydration/hydration.component.ts","./src/app/feature/angular/concepts/hydration/hydration.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightModule } from 'ngx-highlightjs';\nimport { UnsubscribeService } from 'src/app/utils/services/unsubscribe.service';\n\n@Component({\n  selector: 'app-hydration',\n  standalone: true,\n  imports: [CommonModule, HighlightModule],\n  templateUrl: './hydration.component.html',\n  styleUrls: ['./hydration.component.scss']\n})\nexport class HydrationComponent extends UnsubscribeService implements OnInit {\n  selectedTab = 1;\n\n  // Template references\n  @ViewChild('notesRef') notesRef!: TemplateRef<any>;\n  @ViewChild('bestRef') bestRef!: TemplateRef<any>;\n  @ViewChild('prosConsRef') prosConsRef!: TemplateRef<any>;\n  @ViewChild('topicsRef') topicsRef!: TemplateRef<any>;\n\n  // Code examples for hydration\n  basicHydrationCode: string = `// app.config.ts\nimport { ApplicationConfig } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { provideClientHydration } from '@angular/platform-browser';\n\nimport { routes } from './app.routes';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration() // Enable application-wide hydration\n  ]\n};`;\n\n  customHydrationStrategyCode: string = `// custom-hydration-strategy.ts\nimport { HydrationFeature, HydrationStrategy } from '@angular/core';\n\nexport class PrioritizedHydrationStrategy implements HydrationStrategy {\n  // Determine if a component should be hydrated\n  shouldHydrate(componentId: string, descriptor: any): boolean {\n    // Check component priority markers from the descriptor\n    if (descriptor?.priority === 'critical') {\n      return true; // Always hydrate critical components\n    }\n\n    // Delay non-critical components\n    if (descriptor?.priority === 'low') {\n      return false; // Don't hydrate initially\n    }\n\n    return true; // Default to hydrate\n  }\n\n  // Called when the strategy decides not to hydrate a component initially\n  scheduleHydration(componentId: string, descriptor: any): void {\n    if (descriptor?.priority === 'low') {\n      // Schedule low-priority hydration after a delay or on user interaction\n      setTimeout(() => {\n        // Trigger hydration for this component\n        this.hydrateComponent(componentId);\n      }, 3000); // Delay by 3 seconds\n    }\n  }\n\n  // Abstract method - would be implemented by Angular\n  private hydrateComponent(id: string): void {\n    // Angular's internal method to trigger hydration for a specific component\n  }\n}\n\n// In your app.config.ts\nimport { provideHydrationFeatures } from '@angular/core';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    // ... other providers\n    provideClientHydration(\n      provideHydrationFeatures([\n        { strategy: PrioritizedHydrationStrategy }\n      ])\n    )\n  ]\n};`;\n\n  componentLevelHydrationCode: string = `// In Angular 19, you can control hydration at the component level\nimport { Component, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-static-content',\n  standalone: true,\n  template: \\`\n    <div class=\"content\">\n      <h2>{{ title }}</h2>\n      <p>{{ description }}</p>\n    </div>\n  \\`,\n  // This component doesn't need interactivity, so disable hydration\n  hydration: { mode: 'none' }\n})\nexport class StaticContentComponent {\n  title = 'About Our Company';\n  description = 'We provide solutions for modern web applications.';\n}\n\n@Component({\n  selector: 'app-interactive-widget',\n  standalone: true,\n  template: \\`\n    <div class=\"widget\">\n      <button (click)=\"increment()\">Clicks: {{ count() }}</button>\n    </div>\n  \\`,\n  // This component needs immediate interactivity\n  hydration: { mode: 'full' }\n})\nexport class InteractiveWidgetComponent {\n  count = signal(0);\n\n  increment() {\n    this.count.update(v => v + 1);\n  }\n}\n\n@Component({\n  selector: 'app-lazy-content',\n  standalone: true,\n  template: \\`\n    <div class=\"lazy-section\">\n      <div *ngFor=\"let item of items\">\n        <h3>{{ item.title }}</h3>\n        <button (click)=\"selectItem(item)\">Select</button>\n      </div>\n    </div>\n  \\`,\n  // This component will be hydrated when it becomes visible\n  hydration: { mode: 'lazy' }\n})\nexport class LazyContentComponent {\n  items = [...]; // Some data\n\n  selectItem(item: any) {\n    console.log('Selected:', item);\n  }\n}`;\n\n  v19HydrationEnhancementsCode: string = `// Angular 19 Hydration Enhancements\nimport { Component, signal } from '@angular/core';\n\n// 1. Fine-grained hydration strategies\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  template: \\`\n    <!-- Critical UI that needs immediate hydration -->\n    <app-header hydration=\"immediate\"></app-header>\n\n    <!-- Content can be hydrated when visible -->\n    <app-content hydration=\"visible\"></app-content>\n\n    <!-- Static content never needs hydration -->\n    <app-footer hydration=\"none\"></app-footer>\n  \\`\n})\nexport class DashboardComponent {}\n\n// 2. Signal-based selective hydration\n@Component({\n  selector: 'app-signal-aware',\n  standalone: true,\n  template: \\`\n    <!-- Only this part gets hydrated since it uses signals -->\n    <div>Count: {{ count() }}</div>\n\n    <!-- This content doesn't depend on signals and won't be hydrated -->\n    <div>Static content</div>\n  \\`,\n  // New in Angular 19: Smart signal-aware hydration\n  hydration: {\n    mode: 'smart',\n    signalAware: true\n  }\n})\nexport class SignalAwareComponent {\n  count = signal(0);\n}\n\n// 3. Hydration debugging enhancements\n// In your main.ts\nimport { enableDebugTools } from '@angular/platform-browser';\n\nif (environment.development) {\n  enableDebugTools(appRef.components[0], {\n    hydration: true // Enable hydration debugging\n  });\n}\n\n// 4. Automatic hydration optimization with tree-shaking\n@Component({\n  // Angular 19 automatically optimizes the hydration process\n  // by including only the necessary code for hydration\n  hydration: {\n    optimizeBundles: true\n  }\n})\nexport class OptimizedComponent {}`;\n\n  hydrationPerformanceCode: string = `// 1. Measuring hydration performance\nimport { Component, OnInit } from '@angular/core';\nimport { HydrationMetrics } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: \\`<div>App Root</div>\\`\n})\nexport class AppComponent implements OnInit {\n  constructor(private metrics: HydrationMetrics) {}\n\n  ngOnInit() {\n    // Log hydration performance metrics\n    this.metrics.getHydrationStats().then(stats => {\n      console.log('Time to hydrate:', stats.totalTime);\n      console.log('Components hydrated:', stats.componentCount);\n      console.log('DOM nodes reused:', stats.nodesReused);\n      console.log('DOM nodes recreated:', stats.nodesCreated);\n    });\n  }\n}\n\n// 2. Optimizing hydration performance\n@Component({\n  selector: 'app-optimized',\n  template: \\`<div>Optimized Component</div>\\`,\n  // New in Angular 19: Hydration optimization settings\n  hydration: {\n    // Skip hydration for parts that match server-rendered content\n    skipUnchanged: true,\n    // Only preserve DOM nodes that have event listeners\n    preserveInteractive: true,\n    // Set hydration priority (higher numbers are hydrated first)\n    priority: 10\n  }\n})\nexport class OptimizedComponent {}`;\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  ngOnInit() {\n    // Nothing to do here\n  }\n}\n","<section class=\"p-4 text-sm\">\n  <p class=\"heading-1 mb-2\">\n    Hydration\n  </p>\n\n  <div class=\"text-content\">\n    <p>\n      <span class=\"text-zinc-50 tw-font-medium\">Hydration</span>\n      in Angular 19 is the process of attaching event listeners and initializing JavaScript functionality to server-rendered HTML. This technique allows users to see content quickly while making the page interactive as Angular processes the application. Angular 19 features significant enhancements to hydration with fine-grained control, performance improvements, and integration with signals.\n    </p>\n\n    <br>\n\n    <div class=\"flex flex-col\">\n      <div class=\"flex border-b border-gray-200\">\n        <button (click)=\"selectedTab = 1\" [class.text-rose-300]=\"selectedTab===1\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Notes\n        </button>\n        <button (click)=\"selectedTab = 2\" [class.text-rose-300]=\"selectedTab===2\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Best Practices\n        </button>\n        <button (click)=\"selectedTab = 3\" [class.text-rose-300]=\"selectedTab===3\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Pros and Cons\n        </button>\n        <button (click)=\"selectedTab = 4\" [class.text-rose-300]=\"selectedTab===4\" class=\"text-sky-400 hover:text-rose-400 font-semibold py-2 px-4 border-b-2 border-transparent hover:border-gray-500 focus:outline-none\">\n          Related Topics\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <ng-container [ngSwitch]=\"selectedTab\">\n          <div *ngSwitchCase=\"2\">\n            <ng-container *ngTemplateOutlet=\"bestRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"3\">\n            <ng-container *ngTemplateOutlet=\"prosConsRef\"></ng-container>\n          </div>\n          <div *ngSwitchCase=\"4\">\n            <ng-container *ngTemplateOutlet=\"topicsRef\"></ng-container>\n          </div>\n          <div *ngSwitchDefault>\n            <ng-container *ngTemplateOutlet=\"notesRef\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n  </div>\n</section>\n\n<ng-template #notesRef>\n  <p>What is Hydration?</p>\n  <ul class=\"list-disc pl-4 text-sm\">\n    <li>\n      <strong>Server-to-Client Transition</strong>:\n      Hydration connects server-rendered HTML with client-side JavaScript, making static content interactive.\n    </li>\n    <li>\n      <strong>Improved Initial Load Experience</strong>:\n      Users see content immediately while interactivity is progressively added.\n    </li>\n    <li>\n      <strong>DOM Reuse</strong>:\n      Angular reuses existing DOM nodes rather than recreating them, reducing layout shifts and improving performance.\n    </li>\n    <li>\n      <strong>State Preservation</strong>:\n      Application state from server rendering is preserved during client-side hydration.\n    </li>\n  </ul>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Hydration Enhancements</p>\n  <ol class=\"list-decimal pl-4 text-sm\">\n    <li>\n      <strong>Selective Hydration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Fine-grained control over which components are hydrated and when.</li>\n        <li>Ability to set hydration modes ('full', 'lazy', 'none') at the component level.</li>\n        <li>Priority-based hydration for critical UI elements.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal-Aware Hydration</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Intelligent hydration based on signal usage in components.</li>\n        <li>Only parts of components that use signals are hydrated, reducing processing overhead.</li>\n        <li>Better integration with Angular's reactivity system.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Optimizations</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>More efficient DOM node matching algorithms for faster hydration.</li>\n        <li>Reduced memory footprint during the hydration process.</li>\n        <li>Improved metrics and debugging tools for hydration performance.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Advanced Hydration Strategies</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Custom hydration strategy API for tailored hydration behavior.</li>\n        <li>Event-based and visibility-based hydration triggers.</li>\n        <li>Progressive hydration patterns for complex applications.</li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Experience</strong>:\n      <ul class=\"list-disc pl-4\">\n        <li>Enhanced debugging tools for hydration in Angular DevTools.</li>\n        <li>Clear error messages for hydration mismatches.</li>\n        <li>Simplified configuration with sensible defaults.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <p>Basic Hydration Setup</p>\n  <button (click)=\"code1.hidden = !code1.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code1 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"basicHydrationCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Custom Hydration Strategy</p>\n  <button (click)=\"code2.hidden = !code2.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code2 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"customHydrationStrategyCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Component-Level Hydration Control</p>\n  <button (click)=\"code3.hidden = !code3.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code3 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"componentLevelHydrationCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Angular 19 Hydration Enhancements</p>\n  <button (click)=\"code4.hidden = !code4.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code4 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"v19HydrationEnhancementsCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Hydration Performance Optimization</p>\n  <button (click)=\"code5.hidden = !code5.hidden\" class=\"border border-rose-400 rounded-md px-1 text-sky-400\">code</button>\n\n  <span #code5 hidden copyToClipboard>\n    <div class=\"flex flex-row justify-between items-center bg-gray-900 px-4 py-2 relative top-5\">\n      <span>typescript</span>\n      <span class=\"copy-button-wrapper bg-gray-700\"></span>\n    </div>\n\n    <pre>\n      <code\n        [highlight]=\"hydrationPerformanceCode\"\n        [languages]=\"['typescript']\">\n      </code>\n    </pre>\n  </span>\n\n  <br>\n  <br>\n\n  <p>Hydration Performance Comparison</p>\n  <table class=\"w-full border-collapse rounded-lg overflow-hidden shadow-md\">\n    <thead>\n      <tr class=\"bg-gray-800 text-gray-100\">\n        <th class=\"py-3 px-4 text-left\">Technique</th>\n        <th class=\"py-3 px-4 text-left\">Time to Interactive</th>\n        <th class=\"py-3 px-4 text-left\">Bundle Size Impact</th>\n        <th class=\"py-3 px-4 text-left\">Memory Usage</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">No Hydration (CSR only)</td>\n        <td class=\"py-3 px-4\">Slow (blank until JS loads)</td>\n        <td class=\"py-3 px-4\">No additional impact</td>\n        <td class=\"py-3 px-4\">High (rebuilds entire DOM)</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Full Hydration</td>\n        <td class=\"py-3 px-4\">Medium (visible but delayed interactivity)</td>\n        <td class=\"py-3 px-4\">Medium increase</td>\n        <td class=\"py-3 px-4\">Medium (reuses DOM but processes all components)</td>\n      </tr>\n      <tr class=\"border-b border-gray-700 bg-gray-900 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Partial Hydration</td>\n        <td class=\"py-3 px-4\">Fast (critical UI interactive quickly)</td>\n        <td class=\"py-3 px-4\">Small increase</td>\n        <td class=\"py-3 px-4\">Low (processes only what's needed)</td>\n      </tr>\n      <tr class=\"bg-gray-950 hover:bg-gray-800 transition-colors\">\n        <td class=\"py-3 px-4\">Signal-Aware Hydration (Angular 19)</td>\n        <td class=\"py-3 px-4\">Very Fast (optimized for interactive elements)</td>\n        <td class=\"py-3 px-4\">Minimal increase</td>\n        <td class=\"py-3 px-4\">Very Low (targeted hydration based on signals)</td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n\n<ng-template #bestRef>\n  <ol class=\"list-decimal px-4 text-sm\">\n    <li>\n      <strong class=\"text-sky-400\">Implement Selective Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Analyze Component Interactivity Needs</strong>:\n          Categorize components as static (no hydration), interactive (full hydration), or conditionally interactive (lazy hydration).\n        </li>\n        <li>\n          <strong>Prioritize Above-the-Fold Components</strong>:\n          Set higher hydration priority for components visible in the initial viewport.\n        </li>\n        <li>\n          <strong>Use Appropriate Hydration Modes</strong>:\n          Apply the right hydration mode (full, lazy, none) based on component needs using the hydration option in @Component.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Optimize State Transfer</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Minimize Serialized State</strong>:\n          Only transfer essential state needed for hydration to reduce payload size.\n        </li>\n        <li>\n          <strong>Use TransferState API</strong>:\n          Leverage Angular's TransferState to efficiently pass data from server to client.\n        </li>\n        <li>\n          <strong>Structure Data for Efficient Hydration</strong>:\n          Organize application state in a way that allows for partial hydration of only needed segments.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Leverage Signal-Aware Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Signals for Interactive State</strong>:\n          Prefer signals for state that requires immediate hydration.\n        </li>\n        <li>\n          <strong>Isolate Signal Dependencies</strong>:\n          Structure components to isolate signal-dependent parts for more efficient hydration.\n        </li>\n        <li>\n          <strong>Combine with Reactive Patterns</strong>:\n          Integrate signal-based reactivity with hydration for optimal performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Monitor and Debug Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Use Angular DevTools</strong>:\n          Enable hydration debugging in Angular DevTools to visualize hydration status and performance.\n        </li>\n        <li>\n          <strong>Track Hydration Metrics</strong>:\n          Implement metrics collection to measure hydration times and component counts.\n        </li>\n        <li>\n          <strong>Test on Actual Devices</strong>:\n          Verify hydration performance on representative devices, especially lower-powered mobile devices.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong class=\"text-sky-400\">Implement Progressive Enhancement</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong>Design for Non-Hydrated State</strong>:\n          Ensure content is usable even before hydration completes.\n        </li>\n        <li>\n          <strong>Add Visual Indicators</strong>:\n          Provide subtle indicators for elements that will become interactive after hydration.\n        </li>\n        <li>\n          <strong>Handle Hydration Failures Gracefully</strong>:\n          Implement fallback strategies for cases where hydration fails or is delayed.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #prosConsRef>\n  <strong class=\"text-sky-400\">\n    Pros:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Improved User Experience</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Faster Initial Content Display</span>:\n          Users see content immediately while interactivity is progressively added.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced Content Shifting</span>:\n          By reusing server-rendered DOM, hydration minimizes layout shifts during loading.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Smoother Transition to Interactivity</span>:\n          Angular 19 enables seamless transition from static content to interactive application.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Enhanced Performance</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Optimized Bundle Loading</span>:\n          Selective hydration allows smaller initial JavaScript bundles focused on critical functionality.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Reduced CPU Usage</span>:\n          Signal-aware hydration minimizes unnecessary component processing, reducing CPU load.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Lower Memory Consumption</span>:\n          Reusing DOM nodes and selective hydration reduces memory usage compared to full client-side rendering.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Better SEO</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Search Engine Visibility</span>:\n          Server-rendered content is more reliably indexed by search engines.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Improved Social Media Sharing</span>:\n          Ensures properly rendered content for social media platform crawlers.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Accessible to More Crawlers</span>:\n          Content is available to crawlers that may not execute JavaScript.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Developer Control</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Fine-Grained Hydration Control</span>:\n          Angular 19 offers unprecedented control over what gets hydrated and when.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Customizable Strategies</span>:\n          The ability to implement custom hydration strategies tailored to application needs.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Better Debugging Tools</span>:\n          Angular DevTools integration provides visibility into the hydration process.\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <br>\n  <br>\n\n  <strong class=\"text-sky-400\">\n    Cons:\n  </strong>\n\n  <br>\n\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Increased Complexity</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">More Complex Architecture</span>:\n          Requires server-side rendering setup in addition to client-side application.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Hydration Strategy Design</span>:\n          Developers need to carefully plan which components to hydrate and when.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Learning Curve</span>:\n          New concepts and APIs to learn for effective implementation.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Potential Hydration Mismatches</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Server/Client Consistency</span>:\n          Code must ensure server and client rendering produce identical output to avoid hydration errors.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Dynamic Content Challenges</span>:\n          Content that depends on client-specific factors can cause hydration mismatches.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Error Handling Complexity</span>:\n          Debugging hydration errors can be more challenging than standard rendering issues.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Development and Testing Overhead</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Dual-Environment Testing</span>:\n          Applications must be tested in both server and client environments.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Development Setup Complexity</span>:\n          Local development environment must support server-side rendering.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">More Edge Cases</span>:\n          More scenarios to test, including various hydration paths and progressive enhancement.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Resource Requirements</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Server Resources</span>:\n          Server-side rendering requires more server CPU and memory than serving static files.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Initial Setup Investment</span>:\n          More upfront development time to configure SSR and hydration correctly.\n        </li>\n        <li>\n          <span class=\"text-zinc-50 tw-font-medium\">Deployment Complexity</span>:\n          Deployment pipelines need to account for both server and client builds.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n\n<ng-template #topicsRef>\n  <ol class=\"list-decimal px-10 text-sm\">\n    <li>\n      <strong>Server-Side Rendering (SSR)</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          The process of rendering application HTML on the server before sending it to the client.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Hydration builds upon server-rendered content, making it interactive after it's displayed to the user.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Partial Hydration</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Selectively hydrating only parts of an application that need interactivity, rather than the entire application.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          An optimization technique that applies hydration strategically to improve performance.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Islands Architecture</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          A design pattern where interactive \"islands\" exist within largely static content.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Selective hydration enables islands architecture by allowing specific components to be hydrated independently.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Progressive Enhancement</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Building applications that work without JavaScript, then enhancing with JavaScript when available.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Hydration is a form of progressive enhancement, starting with static content and adding interactivity.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Signal-Based Components</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Components built using Angular's signals reactivity system.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Signal-aware hydration optimizes the hydration process for components using signals.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Deferrable Views</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Angular's feature for lazy-loading content based on various triggers.\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Can be combined with hydration strategies for optimal loading and interactivity patterns.\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>Performance Metrics</strong>\n      <ul class=\"list-disc pl-4\">\n        <li>\n          <strong class=\"text-sky-400\">Description</strong>:\n          Measurements like Time to First Contentful Paint (FCP) and Time to Interactive (TTI).\n        </li>\n        <li>\n          <strong class=\"text-sky-400\">Relation to Hydration</strong>:\n          Hydration strategies significantly impact these metrics, especially TTI.\n        </li>\n      </ul>\n    </li>\n  </ol>\n</ng-template>\n"],"names":["CommonModule","HighlightModule","UnsubscribeService","i0","HydrationComponent","constructor","http","ngOnInit","selectors","viewQuery","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}