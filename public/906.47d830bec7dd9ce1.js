"use strict";(self.webpackChunktailwind=self.webpackChunktailwind||[]).push([[906],{4906:(v,u,i)=>{i.r(u),i.d(u,{ClassDecoratorComponent:()=>l});var c=i(6895),d=i(827),g=i(8512),e=i(8256);const p=["componentCodeEl"],Z=["directiveCodeEl"],_=["injectableCodeEl"],m=["pipeCodeEl"],A=["ngModuleCodeEl"],U=["customDecoratorCodeEl"],s=function(){return["typescript"]};function T(r,a){if(1&r){const t=e.EpF();e.TgZ(0,"div")(1,"p"),e._uU(2,"Core Angular Class Decorators"),e.qZA(),e.TgZ(3,"ul",9)(4,"li")(5,"strong"),e._uU(6,"@Component"),e.qZA(),e._uU(7,": Defines a component, connecting a template, styles, and business logic. "),e.TgZ(8,"ul",10)(9,"li"),e._uU(10,"Identifies a class as an Angular component"),e.qZA(),e.TgZ(11,"li"),e._uU(12,"Specifies metadata like the selector, template, styles, and change detection strategy"),e.qZA(),e.TgZ(13,"li"),e._uU(14,"Since Angular 19, standalone components are the preferred approach"),e.qZA(),e.TgZ(15,"button",11),e.NdJ("click",function(){e.CHM(t);const n=e.MAs(18);return e.KtG(n.hidden=!n.hidden)}),e._uU(16,"code"),e.qZA(),e.TgZ(17,"span",12,13)(19,"div",14)(20,"span"),e._uU(21,"typescript"),e.qZA(),e._UZ(22,"span",15),e.qZA(),e.TgZ(23,"pre"),e._uU(24,"                    "),e._UZ(25,"code",16),e._uU(26,"\n                  "),e.qZA()()()(),e.TgZ(27,"li")(28,"strong"),e._uU(29,"@Directive"),e.qZA(),e._uU(30,": Creates a directive that adds behavior to DOM elements without a template. "),e.TgZ(31,"ul",10)(32,"li"),e._uU(33,"Marks a class as an Angular directive"),e.qZA(),e.TgZ(34,"li"),e._uU(35,"Uses a CSS selector to target elements in templates"),e.qZA(),e.TgZ(36,"li"),e._uU(37,"In Angular 19, standalone directives are fully supported"),e.qZA(),e.TgZ(38,"button",11),e.NdJ("click",function(){e.CHM(t);const n=e.MAs(41);return e.KtG(n.hidden=!n.hidden)}),e._uU(39,"code"),e.qZA(),e.TgZ(40,"span",12,17)(42,"div",14)(43,"span"),e._uU(44,"typescript"),e.qZA(),e._UZ(45,"span",15),e.qZA(),e.TgZ(46,"pre"),e._uU(47,"                    "),e._UZ(48,"code",16),e._uU(49,"\n                  "),e.qZA()()()(),e.TgZ(50,"li")(51,"strong"),e._uU(52,"@Injectable"),e.qZA(),e._uU(53,": Marks a class as available for dependency injection. "),e.TgZ(54,"ul",10)(55,"li"),e._uU(56,"Essential for services and other injectable classes"),e.qZA(),e.TgZ(57,"li"),e._uU(58,"Configures provider scope and tree-shakability"),e.qZA(),e.TgZ(59,"li"),e._uU(60,"Angular 19 optimizes DI for better performance"),e.qZA(),e.TgZ(61,"button",11),e.NdJ("click",function(){e.CHM(t);const n=e.MAs(64);return e.KtG(n.hidden=!n.hidden)}),e._uU(62,"code"),e.qZA(),e.TgZ(63,"span",12,18)(65,"div",14)(66,"span"),e._uU(67,"typescript"),e.qZA(),e._UZ(68,"span",15),e.qZA(),e.TgZ(69,"pre"),e._uU(70,"                    "),e._UZ(71,"code",16),e._uU(72,"\n                  "),e.qZA()()()(),e.TgZ(73,"li")(74,"strong"),e._uU(75,"@Pipe"),e.qZA(),e._uU(76,": Defines a transformation function for template expressions. "),e.TgZ(77,"ul",10)(78,"li"),e._uU(79,"Marks a class as an Angular pipe"),e.qZA(),e.TgZ(80,"li"),e._uU(81,"Must implement the PipeTransform interface"),e.qZA(),e.TgZ(82,"li"),e._uU(83,"In Angular 19, standalone pipes are the preferred approach"),e.qZA(),e.TgZ(84,"button",11),e.NdJ("click",function(){e.CHM(t);const n=e.MAs(87);return e.KtG(n.hidden=!n.hidden)}),e._uU(85,"code"),e.qZA(),e.TgZ(86,"span",12,19)(88,"div",14)(89,"span"),e._uU(90,"typescript"),e.qZA(),e._UZ(91,"span",15),e.qZA(),e.TgZ(92,"pre"),e._uU(93,"                    "),e._UZ(94,"code",16),e._uU(95,"\n                  "),e.qZA()()()(),e.TgZ(96,"li")(97,"strong"),e._uU(98,"@NgModule"),e.qZA(),e._uU(99,": Defines a module that encapsulates related components, directives, pipes, and services. "),e.TgZ(100,"ul",10)(101,"li"),e._uU(102,"Less common in Angular 19 with standalone components"),e.qZA(),e.TgZ(103,"li"),e._uU(104,"Still useful for organizing large applications and lazy loading"),e.qZA(),e.TgZ(105,"li"),e._uU(106,"Configures elements, imports, providers, and bootstrap components"),e.qZA(),e.TgZ(107,"button",11),e.NdJ("click",function(){e.CHM(t);const n=e.MAs(110);return e.KtG(n.hidden=!n.hidden)}),e._uU(108,"code"),e.qZA(),e.TgZ(109,"span",12,20)(111,"div",14)(112,"span"),e._uU(113,"typescript"),e.qZA(),e._UZ(114,"span",15),e.qZA(),e.TgZ(115,"pre"),e._uU(116,"                    "),e._UZ(117,"code",16),e._uU(118,"\n                  "),e.qZA()()()()(),e._UZ(119,"br")(120,"br"),e.TgZ(121,"p"),e._uU(122,"Angular 19 Class Decorator Enhancements"),e.qZA(),e.TgZ(123,"ul",9)(124,"li")(125,"strong"),e._uU(126,"Functional Pattern for Decorators"),e.qZA(),e._uU(127,": "),e.TgZ(128,"ul",10)(129,"li"),e._uU(130,"Angular 19 emphasizes functional patterns for better tree-shaking"),e.qZA(),e.TgZ(131,"li"),e._uU(132,"New signal-based components use functional alternatives to decorators"),e.qZA(),e.TgZ(133,"li"),e._uU(134,"Example: "),e.TgZ(135,"code"),e._uU(136,"input()"),e.qZA(),e._uU(137," function instead of "),e.TgZ(138,"code"),e._uU(139,"@Input()"),e.qZA(),e._uU(140," decorator"),e.qZA()()(),e.TgZ(141,"li")(142,"strong"),e._uU(143,"Improved Type Safety"),e.qZA(),e._uU(144,": "),e.TgZ(145,"ul",10)(146,"li"),e._uU(147,"Enhanced type checking for decorator metadata"),e.qZA(),e.TgZ(148,"li"),e._uU(149,"Better TypeScript integration with decorator factories"),e.qZA(),e.TgZ(150,"li"),e._uU(151,"More accurate error messages for decorator-related issues"),e.qZA()()(),e.TgZ(152,"li")(153,"strong"),e._uU(154,"Performance Optimizations"),e.qZA(),e._uU(155,": "),e.TgZ(156,"ul",10)(157,"li"),e._uU(158,"Reduced runtime overhead from decorator processing"),e.qZA(),e.TgZ(159,"li"),e._uU(160,"More efficient metadata storage and retrieval"),e.qZA(),e.TgZ(161,"li"),e._uU(162,"Improved tree-shaking for unused decorators"),e.qZA()()(),e.TgZ(163,"li")(164,"strong"),e._uU(165,"Custom Decorators"),e.qZA(),e._uU(166,": "),e.TgZ(167,"ul",10)(168,"li"),e._uU(169,"Better support for creating custom class decorators"),e.qZA(),e.TgZ(170,"li"),e._uU(171,"Simplified decorator composition patterns"),e.qZA(),e.TgZ(172,"li"),e._uU(173,"Integration with Angular's dependency injection system"),e.qZA(),e.TgZ(174,"button",11),e.NdJ("click",function(){e.CHM(t);const n=e.MAs(177);return e.KtG(n.hidden=!n.hidden)}),e._uU(175,"code"),e.qZA(),e.TgZ(176,"span",12,21)(178,"div",14)(179,"span"),e._uU(180,"typescript"),e.qZA(),e._UZ(181,"span",15),e.qZA(),e.TgZ(182,"pre"),e._uU(183,"                    "),e._UZ(184,"code",16),e._uU(185,"\n                  "),e.qZA()()()()(),e._UZ(186,"br")(187,"br"),e.TgZ(188,"p"),e._uU(189,"Class Decorator Metadata Options"),e.qZA(),e.TgZ(190,"table",22)(191,"thead")(192,"tr",23)(193,"th",24),e._uU(194,"Decorator"),e.qZA(),e.TgZ(195,"th",24),e._uU(196,"Key Metadata Properties"),e.qZA(),e.TgZ(197,"th",24),e._uU(198,"Angular 19 Features"),e.qZA()()(),e.TgZ(199,"tbody")(200,"tr",25)(201,"td",26),e._uU(202,"@Component"),e.qZA(),e.TgZ(203,"td",26),e._uU(204,"selector, template, templateUrl, styles, styleUrls, changeDetection, standalone"),e.qZA(),e.TgZ(205,"td",26),e._uU(206,"Standalone is now default, signal-based alternatives available"),e.qZA()(),e.TgZ(207,"tr",27)(208,"td",26),e._uU(209,"@Injectable"),e.qZA(),e.TgZ(210,"td",26),e._uU(211,"providedIn"),e.qZA(),e.TgZ(212,"td",26),e._uU(213,"Enhanced provider scoping, optimized for DI"),e.qZA()(),e.TgZ(214,"tr",25)(215,"td",26),e._uU(216,"@Directive"),e.qZA(),e.TgZ(217,"td",26),e._uU(218,"selector, standalone, host, providers"),e.qZA(),e.TgZ(219,"td",26),e._uU(220,"Standalone is recommended, improved host binding"),e.qZA()(),e.TgZ(221,"tr",27)(222,"td",26),e._uU(223,"@Pipe"),e.qZA(),e.TgZ(224,"td",26),e._uU(225,"name, pure, standalone"),e.qZA(),e.TgZ(226,"td",26),e._uU(227,"Standalone is default, better optimization for pure pipes"),e.qZA()(),e.TgZ(228,"tr",25)(229,"td",26),e._uU(230,"@NgModule"),e.qZA(),e.TgZ(231,"td",26),e._uU(232,"declarations, imports, exports, providers, bootstrap"),e.qZA(),e.TgZ(233,"td",26),e._uU(234,"Less prominent with standalone components, improved lazy loading"),e.qZA()()()()()}if(2&r){const t=e.oxw();e.xp6(25),e.Q6J("highlight",t.componentCode)("languages",e.DdM(12,s)),e.xp6(23),e.Q6J("highlight",t.directiveCode)("languages",e.DdM(13,s)),e.xp6(23),e.Q6J("highlight",t.injectableCode)("languages",e.DdM(14,s)),e.xp6(23),e.Q6J("highlight",t.pipeCode)("languages",e.DdM(15,s)),e.xp6(23),e.Q6J("highlight",t.ngModuleCode)("languages",e.DdM(16,s)),e.xp6(67),e.Q6J("highlight",t.customDecoratorCode)("languages",e.DdM(17,s))}}function h(r,a){1&r&&(e.TgZ(0,"div")(1,"ol",28)(2,"li")(3,"strong",29),e._uU(4,"Prefer Standalone Components"),e.qZA(),e.TgZ(5,"ul",10)(6,"li"),e._uU(7,"Use standalone: true in @Component, @Directive, and @Pipe decorators"),e.qZA(),e.TgZ(8,"li"),e._uU(9,"Directly import dependencies in the imports array"),e.qZA(),e.TgZ(10,"li"),e._uU(11,"Avoid NgModules when possible for simpler code organization"),e.qZA(),e.TgZ(12,"li"),e._uU(13,"Take advantage of improved tree-shaking with standalone components"),e.qZA()()(),e.TgZ(14,"li")(15,"strong",29),e._uU(16,"Optimize @Injectable Configuration"),e.qZA(),e.TgZ(17,"ul",10)(18,"li"),e._uU(19,"Use providedIn: 'root' for singleton services across the application"),e.qZA(),e.TgZ(20,"li"),e._uU(21,"Use providedIn: 'platform' only for truly application-wide services"),e.qZA(),e.TgZ(22,"li"),e._uU(23,"Use providedIn: 'any' for multi-instance lazy-loaded modules"),e.qZA(),e.TgZ(24,"li"),e._uU(25,"Consider using providedIn: SomeModule for module-scoped services"),e.qZA(),e.TgZ(26,"li"),e._uU(27,"Use explicit providers arrays for component-level services"),e.qZA()()(),e.TgZ(28,"li")(29,"strong",29),e._uU(30,"Write Clean, Focused Components"),e.qZA(),e.TgZ(31,"ul",10)(32,"li"),e._uU(33,"Each component should have a single responsibility"),e.qZA(),e.TgZ(34,"li"),e._uU(35,"Keep templates and styles simple and maintainable"),e.qZA(),e.TgZ(36,"li"),e._uU(37,"Use OnPush change detection strategy for better performance"),e.qZA(),e.TgZ(38,"li"),e._uU(39,"Prefer composition over inheritance for component reuse"),e.qZA(),e.TgZ(40,"li"),e._uU(41,"Consider using signal-based components for optimal reactivity"),e.qZA()()(),e.TgZ(42,"li")(43,"strong",29),e._uU(44,"Make Decorators Readable"),e.qZA(),e.TgZ(45,"ul",10)(46,"li"),e._uU(47,"Use consistent formatting for decorator metadata"),e.qZA(),e.TgZ(48,"li"),e._uU(49,"Organize properties alphabetically or by importance"),e.qZA(),e.TgZ(50,"li"),e._uU(51,"Split complex decorators across multiple lines for readability"),e.qZA(),e.TgZ(52,"li"),e._uU(53,"Add comments for non-obvious decorator configurations"),e.qZA(),e.TgZ(54,"li"),e._uU(55,"Consider extracting complex configuration to constants"),e.qZA()()(),e.TgZ(56,"li")(57,"strong",29),e._uU(58,"Embrace Modern Patterns"),e.qZA(),e.TgZ(59,"ul",10)(60,"li"),e._uU(61,"Consider signal-based alternatives to traditional decorators"),e.qZA(),e.TgZ(62,"li"),e._uU(63,"Use functional patterns when appropriate for better tree-shaking"),e.qZA(),e.TgZ(64,"li"),e._uU(65,"Take advantage of type inference improvements in Angular 19"),e.qZA(),e.TgZ(66,"li"),e._uU(67,"Use explicit typing for decorator metadata where needed"),e.qZA(),e.TgZ(68,"li"),e._uU(69,"Consider custom decorators for cross-cutting concerns"),e.qZA()()()()())}function f(r,a){1&r&&(e.TgZ(0,"div")(1,"div",30)(2,"p",31),e._uU(3,"Advantages of Class Decorators"),e.qZA(),e.TgZ(4,"ul",32)(5,"li")(6,"strong"),e._uU(7,"Declarative Syntax"),e.qZA(),e._uU(8,": Makes it clear what a class's role is in the Angular ecosystem"),e.qZA(),e.TgZ(9,"li")(10,"strong"),e._uU(11,"Metadata Definition"),e.qZA(),e._uU(12,": Provides a clean way to attach configuration to classes"),e.qZA(),e.TgZ(13,"li")(14,"strong"),e._uU(15,"Framework Integration"),e.qZA(),e._uU(16,": Enables Angular to discover and process classes correctly"),e.qZA(),e.TgZ(17,"li")(18,"strong"),e._uU(19,"Separation of Concerns"),e.qZA(),e._uU(20,": Keeps configuration separate from implementation"),e.qZA(),e.TgZ(21,"li")(22,"strong"),e._uU(23,"IDE Support"),e.qZA(),e._uU(24,": Modern editors provide excellent autocompletion and validation"),e.qZA(),e.TgZ(25,"li")(26,"strong"),e._uU(27,"Testability"),e.qZA(),e._uU(28,": Decorators make classes easier to mock and test"),e.qZA(),e.TgZ(29,"li")(30,"strong"),e._uU(31,"Code Organization"),e.qZA(),e._uU(32,": Helps maintain a consistent structure across the codebase"),e.qZA()(),e.TgZ(33,"p",31),e._uU(34,"Challenges with Class Decorators"),e.qZA(),e.TgZ(35,"ul",32)(36,"li")(37,"strong"),e._uU(38,"TypeScript Limitations"),e.qZA(),e._uU(39,": Decorators are still technically experimental in TypeScript"),e.qZA(),e.TgZ(40,"li")(41,"strong"),e._uU(42,"Learning Curve"),e.qZA(),e._uU(43,": Understanding all decorator options requires time"),e.qZA(),e.TgZ(44,"li")(45,"strong"),e._uU(46,"Runtime Overhead"),e.qZA(),e._uU(47,": Decorators add some processing cost during application startup"),e.qZA(),e.TgZ(48,"li")(49,"strong"),e._uU(50,"Debugging Complexity"),e.qZA(),e._uU(51,": Errors in decorators can be harder to trace"),e.qZA(),e.TgZ(52,"li")(53,"strong"),e._uU(54,"Limited Type Safety"),e.qZA(),e._uU(55,": Some decorator metadata isn't fully type-checked"),e.qZA(),e.TgZ(56,"li")(57,"strong"),e._uU(58,"Code Size"),e.qZA(),e._uU(59,": Heavy use of decorators can increase bundle size"),e.qZA(),e.TgZ(60,"li")(61,"strong"),e._uU(62,"Migration Challenges"),e.qZA(),e._uU(63,": Moving to new patterns requires refactoring"),e.qZA()(),e.TgZ(64,"p",31),e._uU(65,"Traditional vs. Modern Angular 19 Patterns"),e.qZA(),e.TgZ(66,"table",33)(67,"thead")(68,"tr",23)(69,"th",24),e._uU(70,"Traditional Pattern"),e.qZA(),e.TgZ(71,"th",24),e._uU(72,"Angular 19 Modern Pattern"),e.qZA()()(),e.TgZ(73,"tbody")(74,"tr",34)(75,"td",26),e._uU(76,"@Component with NgModule"),e.qZA(),e.TgZ(77,"td",26),e._uU(78,"Standalone @Component with direct imports"),e.qZA()(),e.TgZ(79,"tr",35)(80,"td",26),e._uU(81,"@Input() property decorator"),e.qZA(),e.TgZ(82,"td",26),e._uU(83,"input() signal function"),e.qZA()(),e.TgZ(84,"tr",34)(85,"td",26),e._uU(86,"@Output() with EventEmitter"),e.qZA(),e.TgZ(87,"td",26),e._uU(88,"output() signal function"),e.qZA()(),e.TgZ(89,"tr",35)(90,"td",26),e._uU(91,"Two-way binding with @Input/@Output"),e.qZA(),e.TgZ(92,"td",26),e._uU(93,"model() signal function"),e.qZA()(),e.TgZ(94,"tr",34)(95,"td",26),e._uU(96,"@Injectable provided in array"),e.qZA(),e.TgZ(97,"td",26),e._uU(98,"@Injectable with providedIn configuration"),e.qZA()()()()()())}function q(r,a){1&r&&(e.TgZ(0,"div")(1,"div",30)(2,"p",31),e._uU(3,"Related Angular Concepts"),e.qZA(),e.TgZ(4,"ul",32)(5,"li")(6,"strong"),e._uU(7,"TypeScript Decorators"),e.qZA(),e._uU(8,": The language feature that enables Angular decorators"),e.qZA(),e.TgZ(9,"li")(10,"strong"),e._uU(11,"Metadata Reflection"),e.qZA(),e._uU(12,": How Angular uses decorators to generate metadata"),e.qZA(),e.TgZ(13,"li")(14,"strong"),e._uU(15,"Dependency Injection"),e.qZA(),e._uU(16,": The system that leverages @Injectable decorators"),e.qZA(),e.TgZ(17,"li")(18,"strong"),e._uU(19,"Standalone Components"),e.qZA(),e._uU(20,": Modern approach to component definition"),e.qZA(),e.TgZ(21,"li")(22,"strong"),e._uU(23,"Signal-Based APIs"),e.qZA(),e._uU(24,": Functional alternatives to property decorators"),e.qZA()(),e.TgZ(25,"p",31),e._uU(26,"Class Decorator FAQ"),e.qZA(),e.TgZ(27,"ul",32)(28,"li")(29,"strong"),e._uU(30,"Q: When should I use NgModules vs. standalone components?"),e.qZA(),e._UZ(31,"br"),e._uU(32," A: In Angular 19, prefer standalone components for most use cases. NgModules are still useful for organizing large applications and legacy code. "),e.qZA(),e.TgZ(33,"li")(34,"strong"),e._uU(35,"Q: What's the difference between providedIn: 'root' and providedIn: 'platform'?"),e.qZA(),e._UZ(36,"br"),e._uU(37," A: 'root' creates a singleton for the current application, while 'platform' creates a singleton shared across multiple Angular applications that might be running on the same page. "),e.qZA(),e.TgZ(38,"li")(39,"strong"),e._uU(40,"Q: Should I migrate from property decorators to signal-based APIs?"),e.qZA(),e._UZ(41,"br"),e._uU(42," A: For new components, use signal-based APIs. For existing components, consider migrating during major refactors rather than all at once. "),e.qZA(),e.TgZ(43,"li")(44,"strong"),e._uU(45,"Q: Can I create my own custom class decorators?"),e.qZA(),e._UZ(46,"br"),e._uU(47," A: Yes, but they won't integrate with Angular's core functionality automatically. Custom decorators are useful for cross-cutting concerns like logging and validation. "),e.qZA(),e.TgZ(48,"li")(49,"strong"),e._uU(50,"Q: How do decorators affect performance?"),e.qZA(),e._UZ(51,"br"),e._uU(52," A: Decorators add some overhead during application startup but have minimal impact on runtime performance. Angular 19 has optimized decorator processing considerably. "),e.qZA()(),e.TgZ(53,"p",31),e._uU(54,"Useful Resources"),e.qZA(),e.TgZ(55,"ul",10)(56,"li")(57,"a",36),e._uU(58,"Angular Component Guide"),e.qZA()(),e.TgZ(59,"li")(60,"a",37),e._uU(61,"Angular Dependency Injection Guide"),e.qZA()(),e.TgZ(62,"li")(63,"a",38),e._uU(64,"Directive Composition API"),e.qZA()(),e.TgZ(65,"li")(66,"a",39),e._uU(67,"Angular Signals Guide"),e.qZA()(),e.TgZ(68,"li")(69,"a",40),e._uU(70,"TypeScript Decorators Documentation"),e.qZA()()()()())}class l extends g.Y{constructor(){super(...arguments),this.selectedTab=1,this.componentCode="@Component({\n  selector: 'app-example',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <h1>{{ title }}</h1>\n    <p>{{ description }}</p>\n  `,\n  styles: [`\n    h1 { color: #336699; }\n    p { font-size: 16px; }\n  `]\n})\nexport class ExampleComponent {\n  title = 'Example Component';\n  description = 'This is a simple component using the @Component decorator';\n}",this.directiveCode="@Directive({\n  selector: '[appHighlight]',\n  standalone: true\n})\nexport class HighlightDirective {\n  @Input() appHighlight = '';\n  @Input() defaultColor = 'yellow';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.highlight(this.appHighlight || this.defaultColor);\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.highlight('');\n  }\n\n  private highlight(color: string) {\n    this.el.nativeElement.style.backgroundColor = color;\n  }\n}",this.injectableCode="@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private data: string[] = [];\n\n  addItem(item: string): void {\n    this.data.push(item);\n  }\n\n  getItems(): string[] {\n    return [...this.data];\n  }\n}",this.pipeCode="@Pipe({\n  name: 'truncate',\n  standalone: true\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: string, limit: number = 25, completeWords: boolean = false, ellipsis: string = '...'): string {\n    if (!value) return '';\n\n    if (value.length <= limit) {\n      return value;\n    }\n\n    if (completeWords) {\n      limit = value.substring(0, limit).lastIndexOf(' ');\n    }\n\n    return value.substring(0, limit) + ellipsis;\n  }\n}",this.ngModuleCode="@NgModule({\n  declarations: [\n    // Components, directives, and pipes that belong to this module\n    AppComponent,\n    HomeComponent,\n    NavbarComponent\n  ],\n  imports: [\n    // Other modules this module depends on\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [\n    // Services and other providers\n    AuthService,\n    { provide: API_URL, useValue: 'https://api.example.com' }\n  ],\n  bootstrap: [AppComponent] // Root component to bootstrap\n})\nexport class AppModule { }",this.customDecoratorCode="// Creating a custom class decorator\nexport function LogClass() {\n  return function(target: any) {\n    // Original constructor\n    const original = target;\n\n    // New constructor function\n    const newConstructor: any = function(...args: any[]) {\n      console.log(`Creating instance of ${target.name}`);\n      return new original(...args);\n    }\n\n    // Copy prototype\n    newConstructor.prototype = original.prototype;\n\n    // Return modified constructor\n    return newConstructor;\n  };\n}\n\n// Using the custom decorator\n@LogClass()\nexport class LoggedClass {\n  constructor() {\n    console.log('LoggedClass instance created');\n  }\n\n  doSomething() {\n    console.log('Doing something');\n  }\n}"}ngOnInit(){}}l.\u0275fac=function(){let r;return function(t){return(r||(r=e.n5z(l)))(t||l)}}(),l.\u0275cmp=e.Xpm({type:l,selectors:[["app-class-decorator"]],viewQuery:function(a,t){if(1&a&&(e.Gf(p,5),e.Gf(Z,5),e.Gf(_,5),e.Gf(m,5),e.Gf(A,5),e.Gf(U,5)),2&a){let o;e.iGM(o=e.CRH())&&(t.componentCodeEl=o.first),e.iGM(o=e.CRH())&&(t.directiveCodeEl=o.first),e.iGM(o=e.CRH())&&(t.injectableCodeEl=o.first),e.iGM(o=e.CRH())&&(t.pipeCodeEl=o.first),e.iGM(o=e.CRH())&&(t.ngModuleCodeEl=o.first),e.iGM(o=e.CRH())&&(t.customDecoratorCodeEl=o.first)}},standalone:!0,features:[e.qOj,e.jDz],decls:24,vars:12,consts:[[1,"p-4","text-sm"],[1,"heading-1","mb-2"],[1,"text-content"],[1,"text-zinc-50","tw-font-medium"],[1,"flex","flex-col"],[1,"flex","border-b","border-gray-200"],[1,"text-sky-400","hover:text-rose-400","font-semibold","py-2","px-4","border-b-2","border-transparent","hover:border-gray-500","focus:outline-none",3,"click"],[1,"p-4"],[4,"ngIf"],[1,"list-disc","pl-4","text-sm"],[1,"list-disc","pl-4"],[1,"border","border-rose-400","rounded-md","px-1","text-sky-400",3,"click"],["hidden","","copyToClipboard",""],["componentCodeEl",""],[1,"flex","flex-row","justify-between","items-center","bg-gray-900","px-4","py-2","relative","top-5"],[1,"copy-button-wrapper","bg-gray-700"],[3,"highlight","languages"],["directiveCodeEl",""],["injectableCodeEl",""],["pipeCodeEl",""],["ngModuleCodeEl",""],["customDecoratorCodeEl",""],[1,"w-full","border-collapse","rounded-lg","overflow-hidden","shadow-md"],[1,"bg-gray-800","text-gray-100"],[1,"py-3","px-4","text-left"],[1,"border-b","border-gray-700","bg-gray-900","hover:bg-gray-800","transition-colors"],[1,"py-3","px-4"],[1,"border-b","border-gray-700","bg-gray-950","hover:bg-gray-800","transition-colors"],[1,"list-decimal","pl-4","text-sm"],[1,"text-sky-400"],[1,"text-sm"],[1,"font-semibold","text-sky-400","mb-2"],[1,"list-disc","pl-4","mb-6"],[1,"w-full","border-collapse","rounded-lg","overflow-hidden","shadow-md","mb-4"],[1,"border-b","border-gray-700","bg-gray-900"],[1,"border-b","border-gray-700","bg-gray-950"],["href","https://angular.dev/guide/components",1,"text-sky-400","hover:underline"],["href","https://angular.dev/guide/di/dependency-injection",1,"text-sky-400","hover:underline"],["href","https://angular.dev/guide/directives/directive-composition-api",1,"text-sky-400","hover:underline"],["href","https://angular.dev/guide/signals",1,"text-sky-400","hover:underline"],["href","https://www.typescriptlang.org/docs/handbook/decorators.html",1,"text-sky-400","hover:underline"]],template:function(a,t){1&a&&(e.TgZ(0,"section",0)(1,"p",1),e._uU(2," Class Decorators in Angular "),e.qZA(),e.TgZ(3,"div",2)(4,"p")(5,"span",3),e._uU(6,"Class Decorators"),e.qZA(),e._uU(7," in Angular 19 are TypeScript decorators that add metadata to classes, enabling Angular to understand their intended role and behavior. These decorators are essential building blocks that define components, directives, services, and other core features of Angular applications. "),e.qZA(),e._UZ(8,"br"),e.TgZ(9,"div",4)(10,"div",5)(11,"button",6),e.NdJ("click",function(){return t.selectedTab=1}),e._uU(12," Notes "),e.qZA(),e.TgZ(13,"button",6),e.NdJ("click",function(){return t.selectedTab=2}),e._uU(14," Best Practices "),e.qZA(),e.TgZ(15,"button",6),e.NdJ("click",function(){return t.selectedTab=3}),e._uU(16," Pros and Cons "),e.qZA(),e.TgZ(17,"button",6),e.NdJ("click",function(){return t.selectedTab=4}),e._uU(18," Related Topics "),e.qZA()(),e.TgZ(19,"div",7),e.YNc(20,T,235,18,"div",8),e.YNc(21,h,70,0,"div",8),e.YNc(22,f,99,0,"div",8),e.YNc(23,q,71,0,"div",8),e.qZA()()()()),2&a&&(e.xp6(11),e.ekj("text-rose-300",1===t.selectedTab),e.xp6(2),e.ekj("text-rose-300",2===t.selectedTab),e.xp6(2),e.ekj("text-rose-300",3===t.selectedTab),e.xp6(2),e.ekj("text-rose-300",4===t.selectedTab),e.xp6(3),e.Q6J("ngIf",1===t.selectedTab),e.xp6(1),e.Q6J("ngIf",2===t.selectedTab),e.xp6(1),e.Q6J("ngIf",3===t.selectedTab),e.xp6(1),e.Q6J("ngIf",4===t.selectedTab))},dependencies:[c.ez,c.O5,d._l,d.y$],changeDetection:0})}}]);