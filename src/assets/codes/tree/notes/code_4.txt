// Example of Angular 19's improved dependency tracking for tree shaking

// feature-module.ts - Before dependency tracking optimization
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FeatureComponent } from './feature.component';
import { UtilModule } from '../shared/util.module';  // Importing entire utility module

@NgModule({
  declarations: [FeatureComponent],
  imports: [
    CommonModule,
    UtilModule  // Importing entire utility module with many components
  ],
  exports: [FeatureComponent]
})
export class FeatureModule { }

// util.module.ts - Before optimization
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DateFormatterComponent } from './date-formatter.component';
import { CurrencyFormatterComponent } from './currency-formatter.component';
import { AddressFormatterComponent } from './address-formatter.component';
import { PhoneFormatterComponent } from './phone-formatter.component';
// ...and many more components

@NgModule({
  imports: [CommonModule],
  declarations: [
    DateFormatterComponent,
    CurrencyFormatterComponent,
    AddressFormatterComponent,
    PhoneFormatterComponent,
    // ...and many more components
  ],
  exports: [
    DateFormatterComponent,
    CurrencyFormatterComponent,
    AddressFormatterComponent,
    PhoneFormatterComponent,
    // ...and many more components
  ]
})
export class UtilModule { }

// feature.component.ts - Only uses DateFormatterComponent
import { Component } from '@angular/core';

@Component({
  selector: 'app-feature',
  template: `
    <h1>Feature</h1>
    <app-date-formatter [date]="today"></app-date-formatter>
  `
})
export class FeatureComponent {
  today = new Date();
}

// With Angular 19's improved dependency tracking:

// feature-module.ts - After dependency tracking optimization
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FeatureComponent } from './feature.component';
import { DateFormatterComponent } from '../shared/date-formatter.component';

@NgModule({
  declarations: [FeatureComponent],
  imports: [
    CommonModule,
    DateFormatterComponent  // Standalone component import
  ],
  exports: [FeatureComponent]
})
export class FeatureModule { }

// date-formatter.component.ts - Standalone component
import { Component, Input } from '@angular/core';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-date-formatter',
  standalone: true, // Angular 19 standalone component
  imports: [CommonModule],
  template: `<div>{{ date | date:'mediumDate' }}</div>`
})
export class DateFormatterComponent {
  @Input() date: Date;
}

// Angular 19's dependency tracking analyzes the template usage
// and only includes the directly used components, resulting in:
// - 75-85% smaller bundle size for this feature
// - More accurate dependency tree
// - Fewer unnecessary components loaded
